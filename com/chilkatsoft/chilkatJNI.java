/*       */ package com.chilkatsoft;
/*       */ 
/*       */ 
/*       */ public class chilkatJNI
/*       */ {
/*       */   public static final native String ck_NewStringUTF(long paramLong, String paramString);
/*       */   
/*       */ 
/*       */   public static final native byte[] SWIG_JavaArrayOutUchar(long paramLong1, long paramLong2, long paramLong3);
/*       */   
/*       */ 
/*       */   public static final native void SWIG_JavaArrayInUchar(long paramLong1, long paramLong2, CkByteData paramCkByteData, byte[] paramArrayOfByte);
/*       */   
/*       */ 
/*       */   public static final native long new_CkBaseProgress();
/*       */   
/*       */ 
/*       */   public static final native void delete_CkBaseProgress(long paramLong);
/*       */   
/*       */ 
/*       */   public static final native boolean CkBaseProgress_AbortCheck(long paramLong, CkBaseProgress paramCkBaseProgress);
/*       */   
/*       */   public static final native boolean CkBaseProgress_AbortCheckSwigExplicitCkBaseProgress(long paramLong, CkBaseProgress paramCkBaseProgress);
/*       */   
/*       */   public static final native boolean CkBaseProgress_PercentDone(long paramLong, CkBaseProgress paramCkBaseProgress, int paramInt);
/*       */   
/*       */   public static final native boolean CkBaseProgress_PercentDoneSwigExplicitCkBaseProgress(long paramLong, CkBaseProgress paramCkBaseProgress, int paramInt);
/*       */   
/*       */   public static final native void CkBaseProgress_ProgressInfo(long paramLong, CkBaseProgress paramCkBaseProgress, String paramString1, String paramString2);
/*       */   
/*       */   public static final native void CkBaseProgress_ProgressInfoSwigExplicitCkBaseProgress(long paramLong, CkBaseProgress paramCkBaseProgress, String paramString1, String paramString2);
/*       */   
/*       */   public static final native void CkBaseProgress_TaskCompleted(long paramLong1, CkBaseProgress paramCkBaseProgress, long paramLong2, CkTask paramCkTask);
/*       */   
/*       */   public static final native void CkBaseProgress_TaskCompletedSwigExplicitCkBaseProgress(long paramLong1, CkBaseProgress paramCkBaseProgress, long paramLong2, CkTask paramCkTask);
/*       */   
/*       */   public static final native void CkBaseProgress_TextData(long paramLong, CkBaseProgress paramCkBaseProgress, String paramString);
/*       */   
/*       */   public static final native void CkBaseProgress_TextDataSwigExplicitCkBaseProgress(long paramLong, CkBaseProgress paramCkBaseProgress, String paramString);
/*       */   
/*       */   public static final native void CkBaseProgress_director_connect(CkBaseProgress paramCkBaseProgress, long paramLong, boolean paramBoolean1, boolean paramBoolean2);
/*       */   
/*       */   public static final native void CkBaseProgress_change_ownership(CkBaseProgress paramCkBaseProgress, long paramLong, boolean paramBoolean);
/*       */   
/*       */   public static final native long new_CkSFtpProgress();
/*       */   
/*       */   public static final native void delete_CkSFtpProgress(long paramLong);
/*       */   
/*       */   public static final native void CkSFtpProgress_UploadRate(long paramLong1, CkSFtpProgress paramCkSFtpProgress, long paramLong2, long paramLong3);
/*       */   
/*       */   public static final native void CkSFtpProgress_UploadRateSwigExplicitCkSFtpProgress(long paramLong1, CkSFtpProgress paramCkSFtpProgress, long paramLong2, long paramLong3);
/*       */   
/*       */   public static final native void CkSFtpProgress_DownloadRate(long paramLong1, CkSFtpProgress paramCkSFtpProgress, long paramLong2, long paramLong3);
/*       */   
/*       */   public static final native void CkSFtpProgress_DownloadRateSwigExplicitCkSFtpProgress(long paramLong1, CkSFtpProgress paramCkSFtpProgress, long paramLong2, long paramLong3);
/*       */   
/*       */   public static final native void CkSFtpProgress_director_connect(CkSFtpProgress paramCkSFtpProgress, long paramLong, boolean paramBoolean1, boolean paramBoolean2);
/*       */   
/*       */   public static final native void CkSFtpProgress_change_ownership(CkSFtpProgress paramCkSFtpProgress, long paramLong, boolean paramBoolean);
/*       */   
/*       */   public static final native long new_CkMailManProgress();
/*       */   
/*       */   public static final native void delete_CkMailManProgress(long paramLong);
/*       */   
/*       */   public static final native void CkMailManProgress_EmailReceived(long paramLong, CkMailManProgress paramCkMailManProgress, String paramString1, String paramString2, String paramString3, String paramString4, String paramString5, String paramString6, int paramInt);
/*       */   
/*       */   public static final native void CkMailManProgress_EmailReceivedSwigExplicitCkMailManProgress(long paramLong, CkMailManProgress paramCkMailManProgress, String paramString1, String paramString2, String paramString3, String paramString4, String paramString5, String paramString6, int paramInt);
/*       */   
/*       */   public static final native void CkMailManProgress_director_connect(CkMailManProgress paramCkMailManProgress, long paramLong, boolean paramBoolean1, boolean paramBoolean2);
/*       */   
/*       */   public static final native void CkMailManProgress_change_ownership(CkMailManProgress paramCkMailManProgress, long paramLong, boolean paramBoolean);
/*       */   
/*       */   public static final native long new_CkHttpProgress();
/*       */   
/*       */   public static final native void delete_CkHttpProgress(long paramLong);
/*       */   
/*       */   public static final native boolean CkHttpProgress_HttpRedirect(long paramLong, CkHttpProgress paramCkHttpProgress, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkHttpProgress_HttpRedirectSwigExplicitCkHttpProgress(long paramLong, CkHttpProgress paramCkHttpProgress, String paramString1, String paramString2);
/*       */   
/*       */   public static final native void CkHttpProgress_HttpChunked(long paramLong, CkHttpProgress paramCkHttpProgress);
/*       */   
/*       */   public static final native void CkHttpProgress_HttpChunkedSwigExplicitCkHttpProgress(long paramLong, CkHttpProgress paramCkHttpProgress);
/*       */   
/*       */   public static final native void CkHttpProgress_HttpBeginReceive(long paramLong, CkHttpProgress paramCkHttpProgress);
/*       */   
/*       */   public static final native void CkHttpProgress_HttpBeginReceiveSwigExplicitCkHttpProgress(long paramLong, CkHttpProgress paramCkHttpProgress);
/*       */   
/*       */   public static final native void CkHttpProgress_HttpEndReceive(long paramLong, CkHttpProgress paramCkHttpProgress, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkHttpProgress_HttpEndReceiveSwigExplicitCkHttpProgress(long paramLong, CkHttpProgress paramCkHttpProgress, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkHttpProgress_HttpBeginSend(long paramLong, CkHttpProgress paramCkHttpProgress);
/*       */   
/*       */   public static final native void CkHttpProgress_HttpBeginSendSwigExplicitCkHttpProgress(long paramLong, CkHttpProgress paramCkHttpProgress);
/*       */   
/*       */   public static final native void CkHttpProgress_HttpEndSend(long paramLong, CkHttpProgress paramCkHttpProgress, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkHttpProgress_HttpEndSendSwigExplicitCkHttpProgress(long paramLong, CkHttpProgress paramCkHttpProgress, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkHttpProgress_ReceiveRate(long paramLong1, CkHttpProgress paramCkHttpProgress, long paramLong2, long paramLong3);
/*       */   
/*       */   public static final native void CkHttpProgress_ReceiveRateSwigExplicitCkHttpProgress(long paramLong1, CkHttpProgress paramCkHttpProgress, long paramLong2, long paramLong3);
/*       */   
/*       */   public static final native void CkHttpProgress_SendRate(long paramLong1, CkHttpProgress paramCkHttpProgress, long paramLong2, long paramLong3);
/*       */   
/*       */   public static final native void CkHttpProgress_SendRateSwigExplicitCkHttpProgress(long paramLong1, CkHttpProgress paramCkHttpProgress, long paramLong2, long paramLong3);
/*       */   
/*       */   public static final native void CkHttpProgress_director_connect(CkHttpProgress paramCkHttpProgress, long paramLong, boolean paramBoolean1, boolean paramBoolean2);
/*       */   
/*       */   public static final native void CkHttpProgress_change_ownership(CkHttpProgress paramCkHttpProgress, long paramLong, boolean paramBoolean);
/*       */   
/*       */   public static final native long new_CkFtp2Progress();
/*       */   
/*       */   public static final native void delete_CkFtp2Progress(long paramLong);
/*       */   
/*       */   public static final native boolean CkFtp2Progress_BeginDownloadFile(long paramLong, CkFtp2Progress paramCkFtp2Progress, String paramString);
/*       */   
/*       */   public static final native boolean CkFtp2Progress_BeginDownloadFileSwigExplicitCkFtp2Progress(long paramLong, CkFtp2Progress paramCkFtp2Progress, String paramString);
/*       */   
/*       */   public static final native boolean CkFtp2Progress_VerifyDownloadDir(long paramLong, CkFtp2Progress paramCkFtp2Progress, String paramString);
/*       */   
/*       */   public static final native boolean CkFtp2Progress_VerifyDownloadDirSwigExplicitCkFtp2Progress(long paramLong, CkFtp2Progress paramCkFtp2Progress, String paramString);
/*       */   
/*       */   public static final native boolean CkFtp2Progress_BeginUploadFile(long paramLong, CkFtp2Progress paramCkFtp2Progress, String paramString);
/*       */   
/*       */   public static final native boolean CkFtp2Progress_BeginUploadFileSwigExplicitCkFtp2Progress(long paramLong, CkFtp2Progress paramCkFtp2Progress, String paramString);
/*       */   
/*       */   public static final native boolean CkFtp2Progress_VerifyUploadDir(long paramLong, CkFtp2Progress paramCkFtp2Progress, String paramString);
/*       */   
/*       */   public static final native boolean CkFtp2Progress_VerifyUploadDirSwigExplicitCkFtp2Progress(long paramLong, CkFtp2Progress paramCkFtp2Progress, String paramString);
/*       */   
/*       */   public static final native boolean CkFtp2Progress_VerifyDeleteDir(long paramLong, CkFtp2Progress paramCkFtp2Progress, String paramString);
/*       */   
/*       */   public static final native boolean CkFtp2Progress_VerifyDeleteDirSwigExplicitCkFtp2Progress(long paramLong, CkFtp2Progress paramCkFtp2Progress, String paramString);
/*       */   
/*       */   public static final native boolean CkFtp2Progress_VerifyDeleteFile(long paramLong, CkFtp2Progress paramCkFtp2Progress, String paramString);
/*       */   
/*       */   public static final native boolean CkFtp2Progress_VerifyDeleteFileSwigExplicitCkFtp2Progress(long paramLong, CkFtp2Progress paramCkFtp2Progress, String paramString);
/*       */   
/*       */   public static final native void CkFtp2Progress_EndUploadFile(long paramLong1, CkFtp2Progress paramCkFtp2Progress, String paramString, long paramLong2);
/*       */   
/*       */   public static final native void CkFtp2Progress_EndUploadFileSwigExplicitCkFtp2Progress(long paramLong1, CkFtp2Progress paramCkFtp2Progress, String paramString, long paramLong2);
/*       */   
/*       */   public static final native void CkFtp2Progress_EndDownloadFile(long paramLong1, CkFtp2Progress paramCkFtp2Progress, String paramString, long paramLong2);
/*       */   
/*       */   public static final native void CkFtp2Progress_EndDownloadFileSwigExplicitCkFtp2Progress(long paramLong1, CkFtp2Progress paramCkFtp2Progress, String paramString, long paramLong2);
/*       */   
/*       */   public static final native void CkFtp2Progress_UploadRate(long paramLong1, CkFtp2Progress paramCkFtp2Progress, long paramLong2, long paramLong3);
/*       */   
/*       */   public static final native void CkFtp2Progress_UploadRateSwigExplicitCkFtp2Progress(long paramLong1, CkFtp2Progress paramCkFtp2Progress, long paramLong2, long paramLong3);
/*       */   
/*       */   public static final native void CkFtp2Progress_DownloadRate(long paramLong1, CkFtp2Progress paramCkFtp2Progress, long paramLong2, long paramLong3);
/*       */   
/*       */   public static final native void CkFtp2Progress_DownloadRateSwigExplicitCkFtp2Progress(long paramLong1, CkFtp2Progress paramCkFtp2Progress, long paramLong2, long paramLong3);
/*       */   
/*       */   public static final native void CkFtp2Progress_director_connect(CkFtp2Progress paramCkFtp2Progress, long paramLong, boolean paramBoolean1, boolean paramBoolean2);
/*       */   
/*       */   public static final native void CkFtp2Progress_change_ownership(CkFtp2Progress paramCkFtp2Progress, long paramLong, boolean paramBoolean);
/*       */   
/*       */   public static final native long new_CkZipProgress();
/*       */   
/*       */   public static final native void delete_CkZipProgress(long paramLong);
/*       */   
/*       */   public static final native boolean CkZipProgress_DirToBeAdded(long paramLong, CkZipProgress paramCkZipProgress, String paramString);
/*       */   
/*       */   public static final native boolean CkZipProgress_DirToBeAddedSwigExplicitCkZipProgress(long paramLong, CkZipProgress paramCkZipProgress, String paramString);
/*       */   
/*       */   public static final native boolean CkZipProgress_ToBeAdded(long paramLong1, CkZipProgress paramCkZipProgress, String paramString, long paramLong2);
/*       */   
/*       */   public static final native boolean CkZipProgress_ToBeAddedSwigExplicitCkZipProgress(long paramLong1, CkZipProgress paramCkZipProgress, String paramString, long paramLong2);
/*       */   
/*       */   public static final native boolean CkZipProgress_FileAdded(long paramLong1, CkZipProgress paramCkZipProgress, String paramString, long paramLong2);
/*       */   
/*       */   public static final native boolean CkZipProgress_FileAddedSwigExplicitCkZipProgress(long paramLong1, CkZipProgress paramCkZipProgress, String paramString, long paramLong2);
/*       */   
/*       */   public static final native boolean CkZipProgress_ToBeZipped(long paramLong1, CkZipProgress paramCkZipProgress, String paramString, long paramLong2);
/*       */   
/*       */   public static final native boolean CkZipProgress_ToBeZippedSwigExplicitCkZipProgress(long paramLong1, CkZipProgress paramCkZipProgress, String paramString, long paramLong2);
/*       */   
/*       */   public static final native boolean CkZipProgress_FileZipped(long paramLong1, CkZipProgress paramCkZipProgress, String paramString, long paramLong2, long paramLong3);
/*       */   
/*       */   public static final native boolean CkZipProgress_FileZippedSwigExplicitCkZipProgress(long paramLong1, CkZipProgress paramCkZipProgress, String paramString, long paramLong2, long paramLong3);
/*       */   
/*       */   public static final native boolean CkZipProgress_ToBeUnzipped(long paramLong1, CkZipProgress paramCkZipProgress, String paramString, long paramLong2, long paramLong3, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkZipProgress_ToBeUnzippedSwigExplicitCkZipProgress(long paramLong1, CkZipProgress paramCkZipProgress, String paramString, long paramLong2, long paramLong3, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkZipProgress_FileUnzipped(long paramLong1, CkZipProgress paramCkZipProgress, String paramString, long paramLong2, long paramLong3, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkZipProgress_FileUnzippedSwigExplicitCkZipProgress(long paramLong1, CkZipProgress paramCkZipProgress, String paramString, long paramLong2, long paramLong3, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkZipProgress_SkippedForUnzip(long paramLong1, CkZipProgress paramCkZipProgress, String paramString, long paramLong2, long paramLong3, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkZipProgress_SkippedForUnzipSwigExplicitCkZipProgress(long paramLong1, CkZipProgress paramCkZipProgress, String paramString, long paramLong2, long paramLong3, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkZipProgress_AddFilesBegin(long paramLong, CkZipProgress paramCkZipProgress);
/*       */   
/*       */   public static final native void CkZipProgress_AddFilesBeginSwigExplicitCkZipProgress(long paramLong, CkZipProgress paramCkZipProgress);
/*       */   
/*       */   public static final native void CkZipProgress_AddFilesEnd(long paramLong, CkZipProgress paramCkZipProgress);
/*       */   
/*       */   public static final native void CkZipProgress_AddFilesEndSwigExplicitCkZipProgress(long paramLong, CkZipProgress paramCkZipProgress);
/*       */   
/*       */   public static final native void CkZipProgress_WriteZipBegin(long paramLong, CkZipProgress paramCkZipProgress);
/*       */   
/*       */   public static final native void CkZipProgress_WriteZipBeginSwigExplicitCkZipProgress(long paramLong, CkZipProgress paramCkZipProgress);
/*       */   
/*       */   public static final native void CkZipProgress_WriteZipEnd(long paramLong, CkZipProgress paramCkZipProgress);
/*       */   
/*       */   public static final native void CkZipProgress_WriteZipEndSwigExplicitCkZipProgress(long paramLong, CkZipProgress paramCkZipProgress);
/*       */   
/*       */   public static final native void CkZipProgress_UnzipBegin(long paramLong, CkZipProgress paramCkZipProgress);
/*       */   
/*       */   public static final native void CkZipProgress_UnzipBeginSwigExplicitCkZipProgress(long paramLong, CkZipProgress paramCkZipProgress);
/*       */   
/*       */   public static final native void CkZipProgress_UnzipEnd(long paramLong, CkZipProgress paramCkZipProgress);
/*       */   
/*       */   public static final native void CkZipProgress_UnzipEndSwigExplicitCkZipProgress(long paramLong, CkZipProgress paramCkZipProgress);
/*       */   
/*       */   public static final native void CkZipProgress_director_connect(CkZipProgress paramCkZipProgress, long paramLong, boolean paramBoolean1, boolean paramBoolean2);
/*       */   
/*       */   public static final native void CkZipProgress_change_ownership(CkZipProgress paramCkZipProgress, long paramLong, boolean paramBoolean);
/*       */   
/*       */   public static final native long new_CkTarProgress();
/*       */   
/*       */   public static final native void delete_CkTarProgress(long paramLong);
/*       */   
/*       */   public static final native boolean CkTarProgress_NextTarFile(long paramLong1, CkTarProgress paramCkTarProgress, String paramString, long paramLong2, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkTarProgress_NextTarFileSwigExplicitCkTarProgress(long paramLong1, CkTarProgress paramCkTarProgress, String paramString, long paramLong2, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkTarProgress_director_connect(CkTarProgress paramCkTarProgress, long paramLong, boolean paramBoolean1, boolean paramBoolean2);
/*       */   
/*       */   public static final native void CkTarProgress_change_ownership(CkTarProgress paramCkTarProgress, long paramLong, boolean paramBoolean);
/*       */   
/*       */   public static final native void SYSTEMTIME_wYear_set(long paramLong, SYSTEMTIME paramSYSTEMTIME, int paramInt);
/*       */   
/*       */   public static final native int SYSTEMTIME_wYear_get(long paramLong, SYSTEMTIME paramSYSTEMTIME);
/*       */   
/*       */   public static final native void SYSTEMTIME_wMonth_set(long paramLong, SYSTEMTIME paramSYSTEMTIME, int paramInt);
/*       */   
/*       */   public static final native int SYSTEMTIME_wMonth_get(long paramLong, SYSTEMTIME paramSYSTEMTIME);
/*       */   
/*       */   public static final native void SYSTEMTIME_wDayOfWeek_set(long paramLong, SYSTEMTIME paramSYSTEMTIME, int paramInt);
/*       */   
/*       */   public static final native int SYSTEMTIME_wDayOfWeek_get(long paramLong, SYSTEMTIME paramSYSTEMTIME);
/*       */   
/*       */   public static final native void SYSTEMTIME_wDay_set(long paramLong, SYSTEMTIME paramSYSTEMTIME, int paramInt);
/*       */   
/*       */   public static final native int SYSTEMTIME_wDay_get(long paramLong, SYSTEMTIME paramSYSTEMTIME);
/*       */   
/*       */   public static final native void SYSTEMTIME_wHour_set(long paramLong, SYSTEMTIME paramSYSTEMTIME, int paramInt);
/*       */   
/*       */   public static final native int SYSTEMTIME_wHour_get(long paramLong, SYSTEMTIME paramSYSTEMTIME);
/*       */   
/*       */   public static final native void SYSTEMTIME_wMinute_set(long paramLong, SYSTEMTIME paramSYSTEMTIME, int paramInt);
/*       */   
/*       */   public static final native int SYSTEMTIME_wMinute_get(long paramLong, SYSTEMTIME paramSYSTEMTIME);
/*       */   
/*       */   public static final native void SYSTEMTIME_wSecond_set(long paramLong, SYSTEMTIME paramSYSTEMTIME, int paramInt);
/*       */   
/*       */   public static final native int SYSTEMTIME_wSecond_get(long paramLong, SYSTEMTIME paramSYSTEMTIME);
/*       */   
/*       */   public static final native void SYSTEMTIME_wMilliseconds_set(long paramLong, SYSTEMTIME paramSYSTEMTIME, int paramInt);
/*       */   
/*       */   public static final native int SYSTEMTIME_wMilliseconds_get(long paramLong, SYSTEMTIME paramSYSTEMTIME);
/*       */   
/*       */   public static final native long new_SYSTEMTIME();
/*       */   
/*       */   public static final native void delete_SYSTEMTIME(long paramLong);
/*       */   
/*       */   public static final native long new_CkString();
/*       */   
/*       */   public static final native void delete_CkString(long paramLong);
/*       */   
/*       */   public static final native boolean CkString_loadFile(long paramLong, CkString paramCkString, String paramString1, String paramString2);
/*       */   
/*       */   public static final native char CkString_charAt(long paramLong, CkString paramCkString, int paramInt);
/*       */   
/*       */   public static final native int CkString_intValue(long paramLong, CkString paramCkString);
/*       */   
/*       */   public static final native double CkString_doubleValue(long paramLong, CkString paramCkString);
/*       */   
/*       */   public static final native int CkString_countCharOccurances(long paramLong, CkString paramCkString, char paramChar);
/*       */   
/*       */   public static final native void CkString_appendCurrentDateRfc822(long paramLong, CkString paramCkString);
/*       */   
/*       */   public static final native void CkString_removeDelimited(long paramLong, CkString paramCkString, String paramString1, String paramString2, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkString_setStr(long paramLong1, CkString paramCkString1, long paramLong2, CkString paramCkString2);
/*       */   
/*       */   public static final native boolean CkString_endsWith(long paramLong, CkString paramCkString, String paramString);
/*       */   
/*       */   public static final native boolean CkString_endsWithStr(long paramLong1, CkString paramCkString1, long paramLong2, CkString paramCkString2);
/*       */   
/*       */   public static final native boolean CkString_beginsWithStr(long paramLong1, CkString paramCkString1, long paramLong2, CkString paramCkString2);
/*       */   
/*       */   public static final native int CkString_indexOf(long paramLong, CkString paramCkString, String paramString);
/*       */   
/*       */   public static final native int CkString_indexOfStr(long paramLong1, CkString paramCkString1, long paramLong2, CkString paramCkString2);
/*       */   
/*       */   public static final native int CkString_replaceAll(long paramLong1, CkString paramCkString1, long paramLong2, CkString paramCkString2, long paramLong3, CkString paramCkString3);
/*       */   
/*       */   public static final native boolean CkString_replaceFirst(long paramLong1, CkString paramCkString1, long paramLong2, CkString paramCkString2, long paramLong3, CkString paramCkString3);
/*       */   
/*       */   public static final native long CkString_substring(long paramLong, CkString paramCkString, int paramInt1, int paramInt2);
/*       */   
/*       */   public static final native boolean CkString_matchesStr(long paramLong1, CkString paramCkString1, long paramLong2, CkString paramCkString2);
/*       */   
/*       */   public static final native boolean CkString_matches(long paramLong, CkString paramCkString, String paramString);
/*       */   
/*       */   public static final native long CkString_getChar(long paramLong, CkString paramCkString, int paramInt);
/*       */   
/*       */   public static final native int CkString_removeAll(long paramLong1, CkString paramCkString1, long paramLong2, CkString paramCkString2);
/*       */   
/*       */   public static final native boolean CkString_removeFirst(long paramLong1, CkString paramCkString1, long paramLong2, CkString paramCkString2);
/*       */   
/*       */   public static final native void CkString_chopAtStr(long paramLong1, CkString paramCkString1, long paramLong2, CkString paramCkString2);
/*       */   
/*       */   public static final native void CkString_urlDecode(long paramLong, CkString paramCkString, String paramString);
/*       */   
/*       */   public static final native void CkString_urlEncode(long paramLong, CkString paramCkString, String paramString);
/*       */   
/*       */   public static final native void CkString_base64Decode(long paramLong, CkString paramCkString, String paramString);
/*       */   
/*       */   public static final native void CkString_base64Encode(long paramLong, CkString paramCkString, String paramString);
/*       */   
/*       */   public static final native void CkString_qpDecode(long paramLong, CkString paramCkString, String paramString);
/*       */   
/*       */   public static final native void CkString_qpEncode(long paramLong, CkString paramCkString, String paramString);
/*       */   
/*       */   public static final native void CkString_hexDecode(long paramLong, CkString paramCkString, String paramString);
/*       */   
/*       */   public static final native void CkString_hexEncode(long paramLong, CkString paramCkString, String paramString);
/*       */   
/*       */   public static final native void CkString_entityDecode(long paramLong, CkString paramCkString);
/*       */   
/*       */   public static final native void CkString_entityEncode(long paramLong, CkString paramCkString);
/*       */   
/*       */   public static final native void CkString_appendUtf8(long paramLong, CkString paramCkString, String paramString);
/*       */   
/*       */   public static final native void CkString_appendAnsi(long paramLong, CkString paramCkString, String paramString);
/*       */   
/*       */   public static final native void CkString_clear(long paramLong, CkString paramCkString);
/*       */   
/*       */   public static final native void CkString_prepend(long paramLong, CkString paramCkString, String paramString);
/*       */   
/*       */   public static final native void CkString_appendInt(long paramLong, CkString paramCkString, int paramInt);
/*       */   
/*       */   public static final native void CkString_append(long paramLong, CkString paramCkString, String paramString);
/*       */   
/*       */   public static final native void CkString_appendChar(long paramLong, CkString paramCkString, char paramChar);
/*       */   
/*       */   public static final native void CkString_appendN(long paramLong, CkString paramCkString, String paramString, int paramInt);
/*       */   
/*       */   public static final native void CkString_appendStr(long paramLong1, CkString paramCkString1, long paramLong2, CkString paramCkString2);
/*       */   
/*       */   public static final native void CkString_appendEnc(long paramLong, CkString paramCkString, String paramString1, String paramString2);
/*       */   
/*       */   public static final native String CkString_getEnc(long paramLong, CkString paramCkString, String paramString);
/*       */   
/*       */   public static final native void CkString_setString(long paramLong, CkString paramCkString, String paramString);
/*       */   
/*       */   public static final native void CkString_setStringAnsi(long paramLong, CkString paramCkString, String paramString);
/*       */   
/*       */   public static final native void CkString_setStringUtf8(long paramLong, CkString paramCkString, String paramString);
/*       */   
/*       */   public static final native String CkString_getAnsi(long paramLong, CkString paramCkString);
/*       */   
/*       */   public static final native String CkString_getUtf8(long paramLong, CkString paramCkString);
/*       */   
/*       */   public static final native int CkString_compareStr(long paramLong1, CkString paramCkString1, long paramLong2, CkString paramCkString2);
/*       */   
/*       */   public static final native String CkString_getString(long paramLong, CkString paramCkString);
/*       */   
/*       */   public static final native int CkString_getSizeUtf8(long paramLong, CkString paramCkString);
/*       */   
/*       */   public static final native int CkString_getSizeAnsi(long paramLong, CkString paramCkString);
/*       */   
/*       */   public static final native int CkString_getNumChars(long paramLong, CkString paramCkString);
/*       */   
/*       */   public static final native void CkString_trim(long paramLong, CkString paramCkString);
/*       */   
/*       */   public static final native void CkString_trim2(long paramLong, CkString paramCkString);
/*       */   
/*       */   public static final native void CkString_trimInsideSpaces(long paramLong, CkString paramCkString);
/*       */   
/*       */   public static final native int CkString_replaceAllOccurances(long paramLong, CkString paramCkString, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkString_replaceFirstOccurance(long paramLong, CkString paramCkString, String paramString1, String paramString2);
/*       */   
/*       */   public static final native void CkString_toCRLF(long paramLong, CkString paramCkString);
/*       */   
/*       */   public static final native void CkString_toLF(long paramLong, CkString paramCkString);
/*       */   
/*       */   public static final native void CkString_eliminateChar(long paramLong, CkString paramCkString, char paramChar, int paramInt);
/*       */   
/*       */   public static final native char CkString_lastChar(long paramLong, CkString paramCkString);
/*       */   
/*       */   public static final native void CkString_shorten(long paramLong, CkString paramCkString, int paramInt);
/*       */   
/*       */   public static final native void CkString_toLowerCase(long paramLong, CkString paramCkString);
/*       */   
/*       */   public static final native void CkString_toUpperCase(long paramLong, CkString paramCkString);
/*       */   
/*       */   public static final native void CkString_encodeXMLSpecial(long paramLong, CkString paramCkString);
/*       */   
/*       */   public static final native void CkString_decodeXMLSpecial(long paramLong, CkString paramCkString);
/*       */   
/*       */   public static final native boolean CkString_containsSubstring(long paramLong, CkString paramCkString, String paramString);
/*       */   
/*       */   public static final native boolean CkString_containsSubstringNoCase(long paramLong, CkString paramCkString, String paramString);
/*       */   
/*       */   public static final native boolean CkString_equals(long paramLong, CkString paramCkString, String paramString);
/*       */   
/*       */   public static final native boolean CkString_equalsStr(long paramLong1, CkString paramCkString1, long paramLong2, CkString paramCkString2);
/*       */   
/*       */   public static final native boolean CkString_equalsIgnoreCase(long paramLong, CkString paramCkString, String paramString);
/*       */   
/*       */   public static final native boolean CkString_equalsIgnoreCaseStr(long paramLong1, CkString paramCkString1, long paramLong2, CkString paramCkString2);
/*       */   
/*       */   public static final native void CkString_removeChunk(long paramLong, CkString paramCkString, int paramInt1, int paramInt2);
/*       */   
/*       */   public static final native void CkString_removeCharOccurances(long paramLong, CkString paramCkString, char paramChar);
/*       */   
/*       */   public static final native void CkString_replaceChar(long paramLong, CkString paramCkString, char paramChar1, char paramChar2);
/*       */   
/*       */   public static final native void CkString_chopAtFirstChar(long paramLong, CkString paramCkString, char paramChar);
/*       */   
/*       */   public static final native boolean CkString_saveToFile(long paramLong, CkString paramCkString, String paramString1, String paramString2);
/*       */   
/*       */   public static final native long CkString_split(long paramLong, CkString paramCkString, char paramChar, boolean paramBoolean1, boolean paramBoolean2, boolean paramBoolean3);
/*       */   
/*       */   public static final native long CkString_split2(long paramLong, CkString paramCkString, String paramString, boolean paramBoolean1, boolean paramBoolean2, boolean paramBoolean3);
/*       */   
/*       */   public static final native long CkString_tokenize(long paramLong, CkString paramCkString, String paramString);
/*       */   
/*       */   public static final native long CkString_splitAtWS(long paramLong, CkString paramCkString);
/*       */   
/*       */   public static final native boolean CkString_beginsWith(long paramLong, CkString paramCkString, String paramString);
/*       */   
/*       */   public static final native long new_CkDateTime();
/*       */   
/*       */   public static final native void delete_CkDateTime(long paramLong);
/*       */   
/*       */   public static final native int CkDateTime_get_IsDst(long paramLong, CkDateTime paramCkDateTime);
/*       */   
/*       */   public static final native int CkDateTime_get_UtcOffset(long paramLong, CkDateTime paramCkDateTime);
/*       */   
/*       */   public static final native void CkDateTime_SetFromCurrentSystemTime(long paramLong, CkDateTime paramCkDateTime);
/*       */   
/*       */   public static final native boolean CkDateTime_SetFromRfc822(long paramLong, CkDateTime paramCkDateTime, String paramString);
/*       */   
/*       */   public static final native int CkDateTime_GetAsUnixTime(long paramLong, CkDateTime paramCkDateTime, boolean paramBoolean);
/*       */   
/*       */   public static final native long CkDateTime_GetAsUnixTime64(long paramLong, CkDateTime paramCkDateTime, boolean paramBoolean);
/*       */   
/*       */   public static final native double CkDateTime_GetAsOleDate(long paramLong, CkDateTime paramCkDateTime, boolean paramBoolean);
/*       */   
/*       */   public static final native int CkDateTime_GetAsDosDate(long paramLong, CkDateTime paramCkDateTime, boolean paramBoolean);
/*       */   
/*       */   public static final native long CkDateTime_GetAsDateTimeTicks(long paramLong, CkDateTime paramCkDateTime, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkDateTime_SetFromUnixTime(long paramLong, CkDateTime paramCkDateTime, boolean paramBoolean, int paramInt);
/*       */   
/*       */   public static final native void CkDateTime_SetFromUnixTime64(long paramLong1, CkDateTime paramCkDateTime, boolean paramBoolean, long paramLong2);
/*       */   
/*       */   public static final native void CkDateTime_SetFromOleDate(long paramLong, CkDateTime paramCkDateTime, boolean paramBoolean, double paramDouble);
/*       */   
/*       */   public static final native void CkDateTime_SetFromDosDate(long paramLong, CkDateTime paramCkDateTime, boolean paramBoolean, int paramInt);
/*       */   
/*       */   public static final native void CkDateTime_SetFromDateTimeTicks(long paramLong1, CkDateTime paramCkDateTime, boolean paramBoolean, long paramLong2);
/*       */   
/*       */   public static final native boolean CkDateTime_Serialize(long paramLong1, CkDateTime paramCkDateTime, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkDateTime_serialize(long paramLong, CkDateTime paramCkDateTime);
/*       */   
/*       */   public static final native void CkDateTime_DeSerialize(long paramLong, CkDateTime paramCkDateTime, String paramString);
/*       */   
/*       */   public static final native boolean CkDateTime_AddDays(long paramLong, CkDateTime paramCkDateTime, int paramInt);
/*       */   
/*       */   public static final native boolean CkDateTime_GetAsRfc822(long paramLong1, CkDateTime paramCkDateTime, boolean paramBoolean, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkDateTime_getAsRfc822(long paramLong, CkDateTime paramCkDateTime, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkDateTime_get_LastMethodSuccess(long paramLong, CkDateTime paramCkDateTime);
/*       */   
/*       */   public static final native void CkDateTime_put_LastMethodSuccess(long paramLong, CkDateTime paramCkDateTime, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkDateTime_AddSeconds(long paramLong, CkDateTime paramCkDateTime, int paramInt);
/*       */   
/*       */   public static final native int CkDateTime_DiffSeconds(long paramLong1, CkDateTime paramCkDateTime1, long paramLong2, CkDateTime paramCkDateTime2);
/*       */   
/*       */   public static final native boolean CkDateTime_GetAsUnixTimeStr(long paramLong1, CkDateTime paramCkDateTime, boolean paramBoolean, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native boolean CkDateTime_GetAsIso8601(long paramLong1, CkDateTime paramCkDateTime, String paramString, boolean paramBoolean, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native boolean CkDateTime_GetAsTimestamp(long paramLong1, CkDateTime paramCkDateTime, boolean paramBoolean, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkDateTime_getAsUnixTimeStr(long paramLong, CkDateTime paramCkDateTime, boolean paramBoolean);
/*       */   
/*       */   public static final native String CkDateTime_getAsIso8601(long paramLong, CkDateTime paramCkDateTime, String paramString, boolean paramBoolean);
/*       */   
/*       */   public static final native String CkDateTime_getAsTimestamp(long paramLong, CkDateTime paramCkDateTime, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkDateTime_ExpiresWithin(long paramLong, CkDateTime paramCkDateTime, int paramInt, String paramString);
/*       */   
/*       */   public static final native boolean CkDateTime_OlderThan(long paramLong, CkDateTime paramCkDateTime, int paramInt, String paramString);
/*       */   
/*       */   public static final native long CkDateTime_GetDtObj(long paramLong, CkDateTime paramCkDateTime, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkDateTime_SetFromDtObj(long paramLong1, CkDateTime paramCkDateTime, long paramLong2, CkDtObj paramCkDtObj);
/*       */   
/*       */   public static final native boolean CkDateTime_LoadTaskResult(long paramLong1, CkDateTime paramCkDateTime, long paramLong2, CkTask paramCkTask);
/*       */   
/*       */   public static final native boolean CkDateTime_SetFromNtpTime(long paramLong, CkDateTime paramCkDateTime, int paramInt);
/*       */   
/*       */   public static final native boolean CkDateTime_SetFromTimestamp(long paramLong, CkDateTime paramCkDateTime, String paramString);
/*       */   
/*       */   public static final native long new_CkDtObj();
/*       */   
/*       */   public static final native void delete_CkDtObj(long paramLong);
/*       */   
/*       */   public static final native boolean CkDtObj_get_Utc(long paramLong, CkDtObj paramCkDtObj);
/*       */   
/*       */   public static final native void CkDtObj_put_Utc(long paramLong, CkDtObj paramCkDtObj, boolean paramBoolean);
/*       */   
/*       */   public static final native int CkDtObj_get_Year(long paramLong, CkDtObj paramCkDtObj);
/*       */   
/*       */   public static final native void CkDtObj_put_Year(long paramLong, CkDtObj paramCkDtObj, int paramInt);
/*       */   
/*       */   public static final native int CkDtObj_get_Month(long paramLong, CkDtObj paramCkDtObj);
/*       */   
/*       */   public static final native void CkDtObj_put_Month(long paramLong, CkDtObj paramCkDtObj, int paramInt);
/*       */   
/*       */   public static final native int CkDtObj_get_Day(long paramLong, CkDtObj paramCkDtObj);
/*       */   
/*       */   public static final native void CkDtObj_put_Day(long paramLong, CkDtObj paramCkDtObj, int paramInt);
/*       */   
/*       */   public static final native int CkDtObj_get_Hour(long paramLong, CkDtObj paramCkDtObj);
/*       */   
/*       */   public static final native void CkDtObj_put_Hour(long paramLong, CkDtObj paramCkDtObj, int paramInt);
/*       */   
/*       */   public static final native int CkDtObj_get_Minute(long paramLong, CkDtObj paramCkDtObj);
/*       */   
/*       */   public static final native void CkDtObj_put_Minute(long paramLong, CkDtObj paramCkDtObj, int paramInt);
/*       */   
/*       */   public static final native int CkDtObj_get_Second(long paramLong, CkDtObj paramCkDtObj);
/*       */   
/*       */   public static final native void CkDtObj_put_Second(long paramLong, CkDtObj paramCkDtObj, int paramInt);
/*       */   
/*       */   public static final native int CkDtObj_get_StructTmYear(long paramLong, CkDtObj paramCkDtObj);
/*       */   
/*       */   public static final native void CkDtObj_put_StructTmYear(long paramLong, CkDtObj paramCkDtObj, int paramInt);
/*       */   
/*       */   public static final native int CkDtObj_get_StructTmMonth(long paramLong, CkDtObj paramCkDtObj);
/*       */   
/*       */   public static final native void CkDtObj_put_StructTmMonth(long paramLong, CkDtObj paramCkDtObj, int paramInt);
/*       */   
/*       */   public static final native boolean CkDtObj_Serialize(long paramLong1, CkDtObj paramCkDtObj, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkDtObj_serialize(long paramLong, CkDtObj paramCkDtObj);
/*       */   
/*       */   public static final native void CkDtObj_DeSerialize(long paramLong, CkDtObj paramCkDtObj, String paramString);
/*       */   
/*       */   public static final native long new_CkByteData();
/*       */   
/*       */   public static final native void delete_CkByteData(long paramLong);
/*       */   
/*       */   public static final native byte[] CkByteData_toByteArray(long paramLong, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native void CkByteData_appendByteArray(long paramLong, CkByteData paramCkByteData, byte[] paramArrayOfByte);
/*       */   
/*       */   public static final native String CkByteData_to_s(long paramLong, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native void CkByteData_appendRandom(long paramLong, CkByteData paramCkByteData, int paramInt);
/*       */   
/*       */   public static final native void CkByteData_appendInt(long paramLong, CkByteData paramCkByteData, int paramInt, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkByteData_appendShort(long paramLong, CkByteData paramCkByteData, short paramShort, boolean paramBoolean);
/*       */   
/*       */   public static final native String CkByteData_getEncodedRange(long paramLong, CkByteData paramCkByteData, String paramString, int paramInt1, int paramInt2);
/*       */   
/*       */   public static final native void CkByteData_appendRange(long paramLong1, CkByteData paramCkByteData1, long paramLong2, CkByteData paramCkByteData2, int paramInt1, int paramInt2);
/*       */   
/*       */   public static final native void CkByteData_ensureBuffer(long paramLong, CkByteData paramCkByteData, int paramInt);
/*       */   
/*       */   public static final native int CkByteData_findBytes2(long paramLong, CkByteData paramCkByteData, String paramString, int paramInt);
/*       */   
/*       */   public static final native int CkByteData_findBytes(long paramLong1, CkByteData paramCkByteData1, long paramLong2, CkByteData paramCkByteData2);
/*       */   
/*       */   public static final native boolean CkByteData_beginsWith2(long paramLong, CkByteData paramCkByteData, String paramString, int paramInt);
/*       */   
/*       */   public static final native boolean CkByteData_beginsWith(long paramLong1, CkByteData paramCkByteData1, long paramLong2, CkByteData paramCkByteData2);
/*       */   
/*       */   public static final native void CkByteData_removeChunk(long paramLong, CkByteData paramCkByteData, int paramInt1, int paramInt2);
/*       */   
/*       */   public static final native void CkByteData_byteSwap4321(long paramLong, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native void CkByteData_pad(long paramLong, CkByteData paramCkByteData, int paramInt1, int paramInt2);
/*       */   
/*       */   public static final native void CkByteData_unpad(long paramLong, CkByteData paramCkByteData, int paramInt1, int paramInt2);
/*       */   
/*       */   public static final native boolean CkByteData_is7bit(long paramLong, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native void CkByteData_clear(long paramLong, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native int CkByteData_getSize(long paramLong, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native void CkByteData_appendEncoded(long paramLong, CkByteData paramCkByteData, String paramString1, String paramString2);
/*       */   
/*       */   public static final native void CkByteData_encode(long paramLong1, CkByteData paramCkByteData, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native long CkByteData_getData(long paramLong, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native long CkByteData_getBytes(long paramLong, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native String CkByteData_getEncoded(long paramLong, CkByteData paramCkByteData, String paramString);
/*       */   
/*       */   public static final native long CkByteData_getRange(long paramLong, CkByteData paramCkByteData, int paramInt1, int paramInt2);
/*       */   
/*       */   public static final native String CkByteData_getRangeStr(long paramLong, CkByteData paramCkByteData, int paramInt1, int paramInt2);
/*       */   
/*       */   public static final native void CkByteData_append2(long paramLong, CkByteData paramCkByteData, String paramString, int paramInt);
/*       */   
/*       */   public static final native boolean CkByteData_equals2(long paramLong, CkByteData paramCkByteData, String paramString, int paramInt);
/*       */   
/*       */   public static final native boolean CkByteData_equals(long paramLong1, CkByteData paramCkByteData1, long paramLong2, CkByteData paramCkByteData2);
/*       */   
/*       */   public static final native void CkByteData_appendStr(long paramLong, CkByteData paramCkByteData, String paramString);
/*       */   
/*       */   public static final native void CkByteData_appendChar(long paramLong, CkByteData paramCkByteData, char paramChar);
/*       */   
/*       */   public static final native short CkByteData_getByte(long paramLong, CkByteData paramCkByteData, int paramInt);
/*       */   
/*       */   public static final native char CkByteData_getChar(long paramLong, CkByteData paramCkByteData, int paramInt);
/*       */   
/*       */   public static final native long CkByteData_getUInt(long paramLong, CkByteData paramCkByteData, int paramInt);
/*       */   
/*       */   public static final native int CkByteData_getInt(long paramLong, CkByteData paramCkByteData, int paramInt);
/*       */   
/*       */   public static final native int CkByteData_getUShort(long paramLong, CkByteData paramCkByteData, int paramInt);
/*       */   
/*       */   public static final native short CkByteData_getShort(long paramLong, CkByteData paramCkByteData, int paramInt);
/*       */   
/*       */   public static final native boolean CkByteData_loadFile(long paramLong, CkByteData paramCkByteData, String paramString);
/*       */   
/*       */   public static final native boolean CkByteData_saveFile(long paramLong, CkByteData paramCkByteData, String paramString);
/*       */   
/*       */   public static final native boolean CkByteData_appendFile(long paramLong, CkByteData paramCkByteData, String paramString);
/*       */   
/*       */   public static final native void CkByteData_shorten(long paramLong, CkByteData paramCkByteData, int paramInt);
/*       */   
/*       */   public static final native long new_CkKeyContainer();
/*       */   
/*       */   public static final native void delete_CkKeyContainer(long paramLong);
/*       */   
/*       */   public static final native boolean CkKeyContainer_get_IsOpen(long paramLong, CkKeyContainer paramCkKeyContainer);
/*       */   
/*       */   public static final native boolean CkKeyContainer_get_IsMachineKeyset(long paramLong, CkKeyContainer paramCkKeyContainer);
/*       */   
/*       */   public static final native void CkKeyContainer_get_ContainerName(long paramLong1, CkKeyContainer paramCkKeyContainer, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkKeyContainer_GenerateUuid(long paramLong1, CkKeyContainer paramCkKeyContainer, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native boolean CkKeyContainer_CreateContainer(long paramLong, CkKeyContainer paramCkKeyContainer, String paramString, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkKeyContainer_OpenContainer(long paramLong, CkKeyContainer paramCkKeyContainer, String paramString, boolean paramBoolean1, boolean paramBoolean2);
/*       */   
/*       */   public static final native boolean CkKeyContainer_DeleteContainer(long paramLong, CkKeyContainer paramCkKeyContainer);
/*       */   
/*       */   public static final native void CkKeyContainer_CloseContainer(long paramLong, CkKeyContainer paramCkKeyContainer);
/*       */   
/*       */   public static final native boolean CkKeyContainer_GenerateKeyPair(long paramLong, CkKeyContainer paramCkKeyContainer, boolean paramBoolean, int paramInt);
/*       */   
/*       */   public static final native long CkKeyContainer_GetPrivateKey(long paramLong, CkKeyContainer paramCkKeyContainer, boolean paramBoolean);
/*       */   
/*       */   public static final native long CkKeyContainer_GetPublicKey(long paramLong, CkKeyContainer paramCkKeyContainer, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkKeyContainer_ImportPublicKey(long paramLong1, CkKeyContainer paramCkKeyContainer, long paramLong2, CkPublicKey paramCkPublicKey, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkKeyContainer_ImportPrivateKey(long paramLong1, CkKeyContainer paramCkKeyContainer, long paramLong2, CkPrivateKey paramCkPrivateKey, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkKeyContainer_FetchContainerNames(long paramLong, CkKeyContainer paramCkKeyContainer, boolean paramBoolean);
/*       */   
/*       */   public static final native int CkKeyContainer_GetNumContainers(long paramLong, CkKeyContainer paramCkKeyContainer, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkKeyContainer_GetNthContainerName(long paramLong1, CkKeyContainer paramCkKeyContainer, boolean paramBoolean, int paramInt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkKeyContainer_getNthContainerName(long paramLong, CkKeyContainer paramCkKeyContainer, boolean paramBoolean, int paramInt);
/*       */   
/*       */   public static final native String CkKeyContainer_containerName(long paramLong, CkKeyContainer paramCkKeyContainer);
/*       */   
/*       */   public static final native String CkKeyContainer_generateUuid(long paramLong, CkKeyContainer paramCkKeyContainer);
/*       */   
/*       */   public static final native boolean CkKeyContainer_SaveLastError(long paramLong, CkKeyContainer paramCkKeyContainer, String paramString);
/*       */   
/*       */   public static final native void CkKeyContainer_LastErrorXml(long paramLong1, CkKeyContainer paramCkKeyContainer, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkKeyContainer_LastErrorHtml(long paramLong1, CkKeyContainer paramCkKeyContainer, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkKeyContainer_LastErrorText(long paramLong1, CkKeyContainer paramCkKeyContainer, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkKeyContainer_lastErrorText(long paramLong, CkKeyContainer paramCkKeyContainer);
/*       */   
/*       */   public static final native String CkKeyContainer_lastErrorXml(long paramLong, CkKeyContainer paramCkKeyContainer);
/*       */   
/*       */   public static final native String CkKeyContainer_lastErrorHtml(long paramLong, CkKeyContainer paramCkKeyContainer);
/*       */   
/*       */   public static final native long new_CkCsp();
/*       */   
/*       */   public static final native void delete_CkCsp(long paramLong);
/*       */   
/*       */   public static final native String CkCsp_lastErrorText(long paramLong, CkCsp paramCkCsp);
/*       */   
/*       */   public static final native String CkCsp_lastErrorXml(long paramLong, CkCsp paramCkCsp);
/*       */   
/*       */   public static final native String CkCsp_lastErrorHtml(long paramLong, CkCsp paramCkCsp);
/*       */   
/*       */   public static final native void CkCsp_get_KeyContainerName(long paramLong1, CkCsp paramCkCsp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCsp_keyContainerName(long paramLong, CkCsp paramCkCsp);
/*       */   
/*       */   public static final native void CkCsp_put_KeyContainerName(long paramLong, CkCsp paramCkCsp, String paramString);
/*       */   
/*       */   public static final native void CkCsp_get_DebugLogFilePath(long paramLong1, CkCsp paramCkCsp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCsp_debugLogFilePath(long paramLong, CkCsp paramCkCsp);
/*       */   
/*       */   public static final native void CkCsp_put_DebugLogFilePath(long paramLong, CkCsp paramCkCsp, String paramString);
/*       */   
/*       */   public static final native boolean CkCsp_get_VerboseLogging(long paramLong, CkCsp paramCkCsp);
/*       */   
/*       */   public static final native void CkCsp_put_VerboseLogging(long paramLong, CkCsp paramCkCsp, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkCsp_Initialize(long paramLong, CkCsp paramCkCsp);
/*       */   
/*       */   public static final native boolean CkCsp_get_MachineKeyset(long paramLong, CkCsp paramCkCsp);
/*       */   
/*       */   public static final native void CkCsp_put_MachineKeyset(long paramLong, CkCsp paramCkCsp, boolean paramBoolean);
/*       */   
/*       */   public static final native String CkCsp_hashAlgorithm(long paramLong, CkCsp paramCkCsp);
/*       */   
/*       */   public static final native String CkCsp_encryptAlgorithm(long paramLong, CkCsp paramCkCsp);
/*       */   
/*       */   public static final native String CkCsp_providerName(long paramLong, CkCsp paramCkCsp);
/*       */   
/*       */   public static final native String CkCsp_nthKeyContainerName(long paramLong, CkCsp paramCkCsp, int paramInt);
/*       */   
/*       */   public static final native String CkCsp_nthSignatureAlgorithm(long paramLong, CkCsp paramCkCsp, int paramInt);
/*       */   
/*       */   public static final native String CkCsp_nthKeyExchangeAlgorithm(long paramLong, CkCsp paramCkCsp, int paramInt);
/*       */   
/*       */   public static final native String CkCsp_nthHashAlgorithmName(long paramLong, CkCsp paramCkCsp, int paramInt);
/*       */   
/*       */   public static final native String CkCsp_nthEncryptionAlgorithm(long paramLong, CkCsp paramCkCsp, int paramInt);
/*       */   
/*       */   public static final native boolean CkCsp_SetProviderMicrosoftBase(long paramLong, CkCsp paramCkCsp);
/*       */   
/*       */   public static final native boolean CkCsp_SetProviderMicrosoftStrong(long paramLong, CkCsp paramCkCsp);
/*       */   
/*       */   public static final native boolean CkCsp_SetProviderMicrosoftEnhanced(long paramLong, CkCsp paramCkCsp);
/*       */   
/*       */   public static final native boolean CkCsp_SetProviderMicrosoftRsaAes(long paramLong, CkCsp paramCkCsp);
/*       */   
/*       */   public static final native int CkCsp_get_ProviderType(long paramLong, CkCsp paramCkCsp);
/*       */   
/*       */   public static final native long CkCsp_GetKeyContainerNames(long paramLong, CkCsp paramCkCsp);
/*       */   
/*       */   public static final native int CkCsp_SetHashAlgorithm(long paramLong, CkCsp paramCkCsp, String paramString);
/*       */   
/*       */   public static final native boolean CkCsp_HasHashAlgorithm(long paramLong, CkCsp paramCkCsp, String paramString, int paramInt);
/*       */   
/*       */   public static final native int CkCsp_SetEncryptAlgorithm(long paramLong, CkCsp paramCkCsp, String paramString);
/*       */   
/*       */   public static final native boolean CkCsp_HasEncryptAlgorithm(long paramLong, CkCsp paramCkCsp, String paramString, int paramInt);
/*       */   
/*       */   public static final native int CkCsp_get_HashAlgorithmID(long paramLong, CkCsp paramCkCsp);
/*       */   
/*       */   public static final native int CkCsp_get_EncryptAlgorithmID(long paramLong, CkCsp paramCkCsp);
/*       */   
/*       */   public static final native int CkCsp_get_HashNumBits(long paramLong, CkCsp paramCkCsp);
/*       */   
/*       */   public static final native int CkCsp_get_EncryptNumBits(long paramLong, CkCsp paramCkCsp);
/*       */   
/*       */   public static final native void CkCsp_get_HashAlgorithm(long paramLong1, CkCsp paramCkCsp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkCsp_get_EncryptAlgorithm(long paramLong1, CkCsp paramCkCsp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native boolean CkCsp_NthKeyContainerName(long paramLong1, CkCsp paramCkCsp, int paramInt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native boolean CkCsp_NthSignatureAlgorithm(long paramLong1, CkCsp paramCkCsp, int paramInt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native boolean CkCsp_NthKeyExchangeAlgorithm(long paramLong1, CkCsp paramCkCsp, int paramInt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native boolean CkCsp_NthHashAlgorithmName(long paramLong1, CkCsp paramCkCsp, int paramInt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native boolean CkCsp_NthEncryptionAlgorithm(long paramLong1, CkCsp paramCkCsp, int paramInt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native int CkCsp_get_NumKeyContainers(long paramLong, CkCsp paramCkCsp);
/*       */   
/*       */   public static final native int CkCsp_NthSignatureNumBits(long paramLong, CkCsp paramCkCsp, int paramInt);
/*       */   
/*       */   public static final native int CkCsp_NthKeyExchangeNumBits(long paramLong, CkCsp paramCkCsp, int paramInt);
/*       */   
/*       */   public static final native int CkCsp_NthHashNumBits(long paramLong, CkCsp paramCkCsp, int paramInt);
/*       */   
/*       */   public static final native int CkCsp_NthEncryptionNumBits(long paramLong, CkCsp paramCkCsp, int paramInt);
/*       */   
/*       */   public static final native void CkCsp_get_ProviderName(long paramLong1, CkCsp paramCkCsp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkCsp_put_ProviderName(long paramLong, CkCsp paramCkCsp, String paramString);
/*       */   
/*       */   public static final native int CkCsp_get_NumKeyExchangeAlgorithms(long paramLong, CkCsp paramCkCsp);
/*       */   
/*       */   public static final native int CkCsp_get_NumSignatureAlgorithms(long paramLong, CkCsp paramCkCsp);
/*       */   
/*       */   public static final native int CkCsp_get_NumEncryptAlgorithms(long paramLong, CkCsp paramCkCsp);
/*       */   
/*       */   public static final native int CkCsp_get_NumHashAlgorithms(long paramLong, CkCsp paramCkCsp);
/*       */   
/*       */   public static final native boolean CkCsp_SaveLastError(long paramLong, CkCsp paramCkCsp, String paramString);
/*       */   
/*       */   public static final native void CkCsp_LastErrorXml(long paramLong1, CkCsp paramCkCsp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkCsp_LastErrorHtml(long paramLong1, CkCsp paramCkCsp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkCsp_LastErrorText(long paramLong1, CkCsp paramCkCsp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native long new_CkCreateCS();
/*       */   
/*       */   public static final native void delete_CkCreateCS(long paramLong);
/*       */   
/*       */   public static final native String CkCreateCS_lastErrorText(long paramLong, CkCreateCS paramCkCreateCS);
/*       */   
/*       */   public static final native String CkCreateCS_lastErrorXml(long paramLong, CkCreateCS paramCkCreateCS);
/*       */   
/*       */   public static final native String CkCreateCS_lastErrorHtml(long paramLong, CkCreateCS paramCkCreateCS);
/*       */   
/*       */   public static final native boolean CkCreateCS_get_ReadOnly(long paramLong, CkCreateCS paramCkCreateCS);
/*       */   
/*       */   public static final native void CkCreateCS_put_ReadOnly(long paramLong, CkCreateCS paramCkCreateCS, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkCreateCS_get_Version(long paramLong1, CkCreateCS paramCkCreateCS, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native long CkCreateCS_CreateRegistryStore(long paramLong, CkCreateCS paramCkCreateCS, String paramString1, String paramString2);
/*       */   
/*       */   public static final native long CkCreateCS_OpenRegistryStore(long paramLong, CkCreateCS paramCkCreateCS, String paramString1, String paramString2);
/*       */   
/*       */   public static final native long CkCreateCS_CreateFileStore(long paramLong, CkCreateCS paramCkCreateCS, String paramString);
/*       */   
/*       */   public static final native long CkCreateCS_OpenFileStore(long paramLong, CkCreateCS paramCkCreateCS, String paramString);
/*       */   
/*       */   public static final native long CkCreateCS_CreateMemoryStore(long paramLong, CkCreateCS paramCkCreateCS);
/*       */   
/*       */   public static final native long CkCreateCS_OpenChilkatStore(long paramLong, CkCreateCS paramCkCreateCS);
/*       */   
/*       */   public static final native long CkCreateCS_OpenOutlookStore(long paramLong, CkCreateCS paramCkCreateCS);
/*       */   
/*       */   public static final native long CkCreateCS_OpenLocalSystemStore(long paramLong, CkCreateCS paramCkCreateCS);
/*       */   
/*       */   public static final native long CkCreateCS_OpenCurrentUserStore(long paramLong, CkCreateCS paramCkCreateCS);
/*       */   
/*       */   public static final native boolean CkCreateCS_SaveLastError(long paramLong, CkCreateCS paramCkCreateCS, String paramString);
/*       */   
/*       */   public static final native void CkCreateCS_LastErrorXml(long paramLong1, CkCreateCS paramCkCreateCS, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkCreateCS_LastErrorHtml(long paramLong1, CkCreateCS paramCkCreateCS, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkCreateCS_LastErrorText(long paramLong1, CkCreateCS paramCkCreateCS, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkRarEntry_get_Filename(long paramLong1, CkRarEntry paramCkRarEntry, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native int CkRarEntry_get_UncompressedSize(long paramLong, CkRarEntry paramCkRarEntry);
/*       */   
/*       */   public static final native int CkRarEntry_get_CompressedSize(long paramLong, CkRarEntry paramCkRarEntry);
/*       */   
/*       */   public static final native void CkRarEntry_get_LastModified(long paramLong1, CkRarEntry paramCkRarEntry, long paramLong2, SYSTEMTIME paramSYSTEMTIME);
/*       */   
/*       */   public static final native boolean CkRarEntry_get_IsDirectory(long paramLong, CkRarEntry paramCkRarEntry);
/*       */   
/*       */   public static final native boolean CkRarEntry_get_IsReadOnly(long paramLong, CkRarEntry paramCkRarEntry);
/*       */   
/*       */   public static final native boolean CkRarEntry_Unrar(long paramLong, CkRarEntry paramCkRarEntry, String paramString);
/*       */   
/*       */   public static final native int CkRarEntry_get_Crc(long paramLong, CkRarEntry paramCkRarEntry);
/*       */   
/*       */   public static final native boolean CkRarEntry_SaveLastError(long paramLong, CkRarEntry paramCkRarEntry, String paramString);
/*       */   
/*       */   public static final native void CkRarEntry_LastErrorXml(long paramLong1, CkRarEntry paramCkRarEntry, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkRarEntry_LastErrorHtml(long paramLong1, CkRarEntry paramCkRarEntry, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkRarEntry_LastErrorText(long paramLong1, CkRarEntry paramCkRarEntry, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkRarEntry_lastErrorText(long paramLong, CkRarEntry paramCkRarEntry);
/*       */   
/*       */   public static final native String CkRarEntry_lastErrorXml(long paramLong, CkRarEntry paramCkRarEntry);
/*       */   
/*       */   public static final native String CkRarEntry_lastErrorHtml(long paramLong, CkRarEntry paramCkRarEntry);
/*       */   
/*       */   public static final native String CkRarEntry_filename(long paramLong, CkRarEntry paramCkRarEntry);
/*       */   
/*       */   public static final native long new_CkRarEntry();
/*       */   
/*       */   public static final native void delete_CkRarEntry(long paramLong);
/*       */   
/*       */   public static final native long new_CkRar();
/*       */   
/*       */   public static final native void delete_CkRar(long paramLong);
/*       */   
/*       */   public static final native boolean CkRar_Unrar(long paramLong, CkRar paramCkRar, String paramString);
/*       */   
/*       */   public static final native boolean CkRar_FastOpen(long paramLong, CkRar paramCkRar, String paramString);
/*       */   
/*       */   public static final native boolean CkRar_Open(long paramLong, CkRar paramCkRar, String paramString);
/*       */   
/*       */   public static final native boolean CkRar_Close(long paramLong, CkRar paramCkRar);
/*       */   
/*       */   public static final native int CkRar_get_NumEntries(long paramLong, CkRar paramCkRar);
/*       */   
/*       */   public static final native long CkRar_GetEntryByName(long paramLong, CkRar paramCkRar, String paramString);
/*       */   
/*       */   public static final native long CkRar_GetEntryByIndex(long paramLong, CkRar paramCkRar, int paramInt);
/*       */   
/*       */   public static final native boolean CkRar_SaveLastError(long paramLong, CkRar paramCkRar, String paramString);
/*       */   
/*       */   public static final native void CkRar_LastErrorXml(long paramLong1, CkRar paramCkRar, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkRar_LastErrorHtml(long paramLong1, CkRar paramCkRar, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkRar_LastErrorText(long paramLong1, CkRar paramCkRar, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkRar_lastErrorText(long paramLong, CkRar paramCkRar);
/*       */   
/*       */   public static final native String CkRar_lastErrorXml(long paramLong, CkRar paramCkRar);
/*       */   
/*       */   public static final native String CkRar_lastErrorHtml(long paramLong, CkRar paramCkRar);
/*       */   
/*       */   public static final native long new_CkService();
/*       */   
/*       */   public static final native void delete_CkService(long paramLong);
/*       */   
/*       */   public static final native boolean CkService_SaveLastError(long paramLong, CkService paramCkService, String paramString);
/*       */   
/*       */   public static final native void CkService_LastErrorXml(long paramLong1, CkService paramCkService, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkService_LastErrorHtml(long paramLong1, CkService paramCkService, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkService_LastErrorText(long paramLong1, CkService paramCkService, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkService_lastErrorText(long paramLong, CkService paramCkService);
/*       */   
/*       */   public static final native String CkService_lastErrorXml(long paramLong, CkService paramCkService);
/*       */   
/*       */   public static final native String CkService_lastErrorHtml(long paramLong, CkService paramCkService);
/*       */   
/*       */   public static final native boolean CkService_Install(long paramLong, CkService paramCkService);
/*       */   
/*       */   public static final native boolean CkService_Uninstall(long paramLong, CkService paramCkService);
/*       */   
/*       */   public static final native boolean CkService_Start(long paramLong, CkService paramCkService);
/*       */   
/*       */   public static final native boolean CkService_Stop(long paramLong, CkService paramCkService);
/*       */   
/*       */   public static final native void CkService_get_ServiceName(long paramLong1, CkService paramCkService, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkService_serviceName(long paramLong, CkService paramCkService);
/*       */   
/*       */   public static final native void CkService_put_ServiceName(long paramLong, CkService paramCkService, String paramString);
/*       */   
/*       */   public static final native void CkService_get_DisplayName(long paramLong1, CkService paramCkService, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkService_displayName(long paramLong, CkService paramCkService);
/*       */   
/*       */   public static final native void CkService_put_DisplayName(long paramLong, CkService paramCkService, String paramString);
/*       */   
/*       */   public static final native void CkService_get_ExeFilename(long paramLong1, CkService paramCkService, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkService_exeFilename(long paramLong, CkService paramCkService);
/*       */   
/*       */   public static final native void CkService_put_ExeFilename(long paramLong, CkService paramCkService, String paramString);
/*       */   
/*       */   public static final native boolean CkService_get_AutoStart(long paramLong, CkService paramCkService);
/*       */   
/*       */   public static final native void CkService_put_AutoStart(long paramLong, CkService paramCkService, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkService_SetAutoStart(long paramLong, CkService paramCkService);
/*       */   
/*       */   public static final native boolean CkService_SetDemandStart(long paramLong, CkService paramCkService);
/*       */   
/*       */   public static final native boolean CkService_Disable(long paramLong, CkService paramCkService);
/*       */   
/*       */   public static final native int CkService_IsAutoStart(long paramLong, CkService paramCkService);
/*       */   
/*       */   public static final native int CkService_IsDemandStart(long paramLong, CkService paramCkService);
/*       */   
/*       */   public static final native int CkService_IsDisabled(long paramLong, CkService paramCkService);
/*       */   
/*       */   public static final native int CkService_IsInstalled(long paramLong, CkService paramCkService);
/*       */   
/*       */   public static final native int CkService_IsRunning(long paramLong, CkService paramCkService);
/*       */   
/*       */   public static final native long new_CkAsn();
/*       */   
/*       */   public static final native void delete_CkAsn(long paramLong);
/*       */   
/*       */   public static final native void CkAsn_LastErrorXml(long paramLong1, CkAsn paramCkAsn, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkAsn_LastErrorHtml(long paramLong1, CkAsn paramCkAsn, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkAsn_LastErrorText(long paramLong1, CkAsn paramCkAsn, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native boolean CkAsn_get_BoolValue(long paramLong, CkAsn paramCkAsn);
/*       */   
/*       */   public static final native void CkAsn_put_BoolValue(long paramLong, CkAsn paramCkAsn, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkAsn_get_Constructed(long paramLong, CkAsn paramCkAsn);
/*       */   
/*       */   public static final native void CkAsn_get_ContentStr(long paramLong1, CkAsn paramCkAsn, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkAsn_contentStr(long paramLong, CkAsn paramCkAsn);
/*       */   
/*       */   public static final native void CkAsn_put_ContentStr(long paramLong, CkAsn paramCkAsn, String paramString);
/*       */   
/*       */   public static final native void CkAsn_get_DebugLogFilePath(long paramLong1, CkAsn paramCkAsn, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkAsn_debugLogFilePath(long paramLong, CkAsn paramCkAsn);
/*       */   
/*       */   public static final native void CkAsn_put_DebugLogFilePath(long paramLong, CkAsn paramCkAsn, String paramString);
/*       */   
/*       */   public static final native int CkAsn_get_IntValue(long paramLong, CkAsn paramCkAsn);
/*       */   
/*       */   public static final native void CkAsn_put_IntValue(long paramLong, CkAsn paramCkAsn, int paramInt);
/*       */   
/*       */   public static final native void CkAsn_get_LastErrorHtml(long paramLong1, CkAsn paramCkAsn, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkAsn_lastErrorHtml(long paramLong, CkAsn paramCkAsn);
/*       */   
/*       */   public static final native void CkAsn_get_LastErrorText(long paramLong1, CkAsn paramCkAsn, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkAsn_lastErrorText(long paramLong, CkAsn paramCkAsn);
/*       */   
/*       */   public static final native void CkAsn_get_LastErrorXml(long paramLong1, CkAsn paramCkAsn, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkAsn_lastErrorXml(long paramLong, CkAsn paramCkAsn);
/*       */   
/*       */   public static final native boolean CkAsn_get_LastMethodSuccess(long paramLong, CkAsn paramCkAsn);
/*       */   
/*       */   public static final native void CkAsn_put_LastMethodSuccess(long paramLong, CkAsn paramCkAsn, boolean paramBoolean);
/*       */   
/*       */   public static final native int CkAsn_get_NumSubItems(long paramLong, CkAsn paramCkAsn);
/*       */   
/*       */   public static final native void CkAsn_get_Tag(long paramLong1, CkAsn paramCkAsn, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkAsn_tag(long paramLong, CkAsn paramCkAsn);
/*       */   
/*       */   public static final native int CkAsn_get_TagValue(long paramLong, CkAsn paramCkAsn);
/*       */   
/*       */   public static final native boolean CkAsn_get_VerboseLogging(long paramLong, CkAsn paramCkAsn);
/*       */   
/*       */   public static final native void CkAsn_put_VerboseLogging(long paramLong, CkAsn paramCkAsn, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkAsn_get_Version(long paramLong1, CkAsn paramCkAsn, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkAsn_version(long paramLong, CkAsn paramCkAsn);
/*       */   
/*       */   public static final native boolean CkAsn_AppendBigInt(long paramLong, CkAsn paramCkAsn, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkAsn_AppendBits(long paramLong, CkAsn paramCkAsn, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkAsn_AppendBool(long paramLong, CkAsn paramCkAsn, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkAsn_AppendContextConstructed(long paramLong, CkAsn paramCkAsn, int paramInt);
/*       */   
/*       */   public static final native boolean CkAsn_AppendContextPrimitive(long paramLong, CkAsn paramCkAsn, int paramInt, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkAsn_AppendInt(long paramLong, CkAsn paramCkAsn, int paramInt);
/*       */   
/*       */   public static final native boolean CkAsn_AppendNull(long paramLong, CkAsn paramCkAsn);
/*       */   
/*       */   public static final native boolean CkAsn_AppendOctets(long paramLong, CkAsn paramCkAsn, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkAsn_AppendOid(long paramLong, CkAsn paramCkAsn, String paramString);
/*       */   
/*       */   public static final native boolean CkAsn_AppendSequence(long paramLong, CkAsn paramCkAsn);
/*       */   
/*       */   public static final native boolean CkAsn_AppendSequence2(long paramLong, CkAsn paramCkAsn);
/*       */   
/*       */   public static final native long CkAsn_AppendSequenceR(long paramLong, CkAsn paramCkAsn);
/*       */   
/*       */   public static final native boolean CkAsn_AppendSet(long paramLong, CkAsn paramCkAsn);
/*       */   
/*       */   public static final native boolean CkAsn_AppendSet2(long paramLong, CkAsn paramCkAsn);
/*       */   
/*       */   public static final native long CkAsn_AppendSetR(long paramLong, CkAsn paramCkAsn);
/*       */   
/*       */   public static final native boolean CkAsn_AppendString(long paramLong, CkAsn paramCkAsn, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkAsn_AppendTime(long paramLong, CkAsn paramCkAsn, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkAsn_AsnToXml(long paramLong1, CkAsn paramCkAsn, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkAsn_asnToXml(long paramLong, CkAsn paramCkAsn);
/*       */   
/*       */   public static final native boolean CkAsn_DeleteSubItem(long paramLong, CkAsn paramCkAsn, int paramInt);
/*       */   
/*       */   public static final native boolean CkAsn_GetBinaryDer(long paramLong1, CkAsn paramCkAsn, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkAsn_GetEncodedContent(long paramLong1, CkAsn paramCkAsn, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkAsn_getEncodedContent(long paramLong, CkAsn paramCkAsn, String paramString);
/*       */   
/*       */   public static final native String CkAsn_encodedContent(long paramLong, CkAsn paramCkAsn, String paramString);
/*       */   
/*       */   public static final native boolean CkAsn_GetEncodedDer(long paramLong1, CkAsn paramCkAsn, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkAsn_getEncodedDer(long paramLong, CkAsn paramCkAsn, String paramString);
/*       */   
/*       */   public static final native String CkAsn_encodedDer(long paramLong, CkAsn paramCkAsn, String paramString);
/*       */   
/*       */   public static final native long CkAsn_GetLastSubItem(long paramLong, CkAsn paramCkAsn);
/*       */   
/*       */   public static final native long CkAsn_GetSubItem(long paramLong, CkAsn paramCkAsn, int paramInt);
/*       */   
/*       */   public static final native boolean CkAsn_LoadAsnXml(long paramLong, CkAsn paramCkAsn, String paramString);
/*       */   
/*       */   public static final native boolean CkAsn_LoadBinary(long paramLong1, CkAsn paramCkAsn, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkAsn_LoadBinaryFile(long paramLong, CkAsn paramCkAsn, String paramString);
/*       */   
/*       */   public static final native boolean CkAsn_LoadEncoded(long paramLong, CkAsn paramCkAsn, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkAsn_SaveLastError(long paramLong, CkAsn paramCkAsn, String paramString);
/*       */   
/*       */   public static final native boolean CkAsn_SetEncodedContent(long paramLong, CkAsn paramCkAsn, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkAsn_WriteBinaryDer(long paramLong, CkAsn paramCkAsn, String paramString);
/*       */   
/*       */   public static final native long new_CkAtom();
/*       */   
/*       */   public static final native void delete_CkAtom(long paramLong);
/*       */   
/*       */   public static final native void CkAtom_LastErrorXml(long paramLong1, CkAtom paramCkAtom, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkAtom_LastErrorHtml(long paramLong1, CkAtom paramCkAtom, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkAtom_LastErrorText(long paramLong1, CkAtom paramCkAtom, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkAtom_put_EventCallbackObject(long paramLong1, CkAtom paramCkAtom, long paramLong2, CkBaseProgress paramCkBaseProgress);
/*       */   
/*       */   public static final native boolean CkAtom_get_AbortCurrent(long paramLong, CkAtom paramCkAtom);
/*       */   
/*       */   public static final native void CkAtom_get_DebugLogFilePath(long paramLong1, CkAtom paramCkAtom, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkAtom_debugLogFilePath(long paramLong, CkAtom paramCkAtom);
/*       */   
/*       */   public static final native void CkAtom_put_DebugLogFilePath(long paramLong, CkAtom paramCkAtom, String paramString);
/*       */   
/*       */   public static final native void CkAtom_get_LastErrorHtml(long paramLong1, CkAtom paramCkAtom, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkAtom_lastErrorHtml(long paramLong, CkAtom paramCkAtom);
/*       */   
/*       */   public static final native void CkAtom_get_LastErrorText(long paramLong1, CkAtom paramCkAtom, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkAtom_lastErrorText(long paramLong, CkAtom paramCkAtom);
/*       */   
/*       */   public static final native void CkAtom_get_LastErrorXml(long paramLong1, CkAtom paramCkAtom, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkAtom_lastErrorXml(long paramLong, CkAtom paramCkAtom);
/*       */   
/*       */   public static final native boolean CkAtom_get_LastMethodSuccess(long paramLong, CkAtom paramCkAtom);
/*       */   
/*       */   public static final native void CkAtom_put_LastMethodSuccess(long paramLong, CkAtom paramCkAtom, boolean paramBoolean);
/*       */   
/*       */   public static final native int CkAtom_get_NumEntries(long paramLong, CkAtom paramCkAtom);
/*       */   
/*       */   public static final native boolean CkAtom_get_VerboseLogging(long paramLong, CkAtom paramCkAtom);
/*       */   
/*       */   public static final native void CkAtom_put_VerboseLogging(long paramLong, CkAtom paramCkAtom, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkAtom_get_Version(long paramLong1, CkAtom paramCkAtom, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkAtom_version(long paramLong, CkAtom paramCkAtom);
/*       */   
/*       */   public static final native int CkAtom_AddElement(long paramLong, CkAtom paramCkAtom, String paramString1, String paramString2);
/*       */   
/*       */   public static final native int CkAtom_AddElementDate(long paramLong1, CkAtom paramCkAtom, String paramString, long paramLong2, SYSTEMTIME paramSYSTEMTIME);
/*       */   
/*       */   public static final native int CkAtom_AddElementDateStr(long paramLong, CkAtom paramCkAtom, String paramString1, String paramString2);
/*       */   
/*       */   public static final native int CkAtom_AddElementDt(long paramLong1, CkAtom paramCkAtom, String paramString, long paramLong2, CkDateTime paramCkDateTime);
/*       */   
/*       */   public static final native int CkAtom_AddElementHtml(long paramLong, CkAtom paramCkAtom, String paramString1, String paramString2);
/*       */   
/*       */   public static final native int CkAtom_AddElementXHtml(long paramLong, CkAtom paramCkAtom, String paramString1, String paramString2);
/*       */   
/*       */   public static final native int CkAtom_AddElementXml(long paramLong, CkAtom paramCkAtom, String paramString1, String paramString2);
/*       */   
/*       */   public static final native void CkAtom_AddEntry(long paramLong, CkAtom paramCkAtom, String paramString);
/*       */   
/*       */   public static final native void CkAtom_AddLink(long paramLong, CkAtom paramCkAtom, String paramString1, String paramString2, String paramString3, String paramString4);
/*       */   
/*       */   public static final native void CkAtom_AddPerson(long paramLong, CkAtom paramCkAtom, String paramString1, String paramString2, String paramString3, String paramString4);
/*       */   
/*       */   public static final native void CkAtom_DeleteElement(long paramLong, CkAtom paramCkAtom, String paramString, int paramInt);
/*       */   
/*       */   public static final native void CkAtom_DeleteElementAttr(long paramLong, CkAtom paramCkAtom, String paramString1, int paramInt, String paramString2);
/*       */   
/*       */   public static final native void CkAtom_DeletePerson(long paramLong, CkAtom paramCkAtom, String paramString, int paramInt);
/*       */   
/*       */   public static final native boolean CkAtom_DownloadAtom(long paramLong, CkAtom paramCkAtom, String paramString);
/*       */   
/*       */   public static final native long CkAtom_DownloadAtomAsync(long paramLong, CkAtom paramCkAtom, String paramString);
/*       */   
/*       */   public static final native boolean CkAtom_GetElement(long paramLong1, CkAtom paramCkAtom, String paramString, int paramInt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkAtom_getElement(long paramLong, CkAtom paramCkAtom, String paramString, int paramInt);
/*       */   
/*       */   public static final native String CkAtom_element(long paramLong, CkAtom paramCkAtom, String paramString, int paramInt);
/*       */   
/*       */   public static final native boolean CkAtom_GetElementAttr(long paramLong1, CkAtom paramCkAtom, String paramString1, int paramInt, String paramString2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkAtom_getElementAttr(long paramLong, CkAtom paramCkAtom, String paramString1, int paramInt, String paramString2);
/*       */   
/*       */   public static final native String CkAtom_elementAttr(long paramLong, CkAtom paramCkAtom, String paramString1, int paramInt, String paramString2);
/*       */   
/*       */   public static final native int CkAtom_GetElementCount(long paramLong, CkAtom paramCkAtom, String paramString);
/*       */   
/*       */   public static final native boolean CkAtom_GetElementDate(long paramLong1, CkAtom paramCkAtom, String paramString, int paramInt, long paramLong2, SYSTEMTIME paramSYSTEMTIME);
/*       */   
/*       */   public static final native boolean CkAtom_GetElementDateStr(long paramLong1, CkAtom paramCkAtom, String paramString, int paramInt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkAtom_getElementDateStr(long paramLong, CkAtom paramCkAtom, String paramString, int paramInt);
/*       */   
/*       */   public static final native String CkAtom_elementDateStr(long paramLong, CkAtom paramCkAtom, String paramString, int paramInt);
/*       */   
/*       */   public static final native long CkAtom_GetElementDt(long paramLong, CkAtom paramCkAtom, String paramString, int paramInt);
/*       */   
/*       */   public static final native long CkAtom_GetEntry(long paramLong, CkAtom paramCkAtom, int paramInt);
/*       */   
/*       */   public static final native boolean CkAtom_GetLinkHref(long paramLong1, CkAtom paramCkAtom, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkAtom_getLinkHref(long paramLong, CkAtom paramCkAtom, String paramString);
/*       */   
/*       */   public static final native String CkAtom_linkHref(long paramLong, CkAtom paramCkAtom, String paramString);
/*       */   
/*       */   public static final native boolean CkAtom_GetPersonInfo(long paramLong1, CkAtom paramCkAtom, String paramString1, int paramInt, String paramString2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkAtom_getPersonInfo(long paramLong, CkAtom paramCkAtom, String paramString1, int paramInt, String paramString2);
/*       */   
/*       */   public static final native String CkAtom_personInfo(long paramLong, CkAtom paramCkAtom, String paramString1, int paramInt, String paramString2);
/*       */   
/*       */   public static final native boolean CkAtom_GetTopAttr(long paramLong1, CkAtom paramCkAtom, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkAtom_getTopAttr(long paramLong, CkAtom paramCkAtom, String paramString);
/*       */   
/*       */   public static final native String CkAtom_topAttr(long paramLong, CkAtom paramCkAtom, String paramString);
/*       */   
/*       */   public static final native boolean CkAtom_HasElement(long paramLong, CkAtom paramCkAtom, String paramString);
/*       */   
/*       */   public static final native boolean CkAtom_LoadXml(long paramLong, CkAtom paramCkAtom, String paramString);
/*       */   
/*       */   public static final native void CkAtom_NewEntry(long paramLong, CkAtom paramCkAtom);
/*       */   
/*       */   public static final native void CkAtom_NewFeed(long paramLong, CkAtom paramCkAtom);
/*       */   
/*       */   public static final native boolean CkAtom_SaveLastError(long paramLong, CkAtom paramCkAtom, String paramString);
/*       */   
/*       */   public static final native void CkAtom_SetElementAttr(long paramLong, CkAtom paramCkAtom, String paramString1, int paramInt, String paramString2, String paramString3);
/*       */   
/*       */   public static final native void CkAtom_SetTopAttr(long paramLong, CkAtom paramCkAtom, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkAtom_ToXmlString(long paramLong1, CkAtom paramCkAtom, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkAtom_toXmlString(long paramLong, CkAtom paramCkAtom);
/*       */   
/*       */   public static final native void CkAtom_UpdateElement(long paramLong, CkAtom paramCkAtom, String paramString1, int paramInt, String paramString2);
/*       */   
/*       */   public static final native void CkAtom_UpdateElementDate(long paramLong1, CkAtom paramCkAtom, String paramString, int paramInt, long paramLong2, SYSTEMTIME paramSYSTEMTIME);
/*       */   
/*       */   public static final native void CkAtom_UpdateElementDateStr(long paramLong, CkAtom paramCkAtom, String paramString1, int paramInt, String paramString2);
/*       */   
/*       */   public static final native void CkAtom_UpdateElementDt(long paramLong1, CkAtom paramCkAtom, String paramString, int paramInt, long paramLong2, CkDateTime paramCkDateTime);
/*       */   
/*       */   public static final native void CkAtom_UpdateElementHtml(long paramLong, CkAtom paramCkAtom, String paramString1, int paramInt, String paramString2);
/*       */   
/*       */   public static final native void CkAtom_UpdateElementXHtml(long paramLong, CkAtom paramCkAtom, String paramString1, int paramInt, String paramString2);
/*       */   
/*       */   public static final native void CkAtom_UpdateElementXml(long paramLong, CkAtom paramCkAtom, String paramString1, int paramInt, String paramString2);
/*       */   
/*       */   public static final native void CkAtom_UpdatePerson(long paramLong, CkAtom paramCkAtom, String paramString1, int paramInt, String paramString2, String paramString3, String paramString4);
/*       */   
/*       */   public static final native long new_CkBounce();
/*       */   
/*       */   public static final native void delete_CkBounce(long paramLong);
/*       */   
/*       */   public static final native void CkBounce_LastErrorXml(long paramLong1, CkBounce paramCkBounce, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkBounce_LastErrorHtml(long paramLong1, CkBounce paramCkBounce, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkBounce_LastErrorText(long paramLong1, CkBounce paramCkBounce, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkBounce_get_BounceAddress(long paramLong1, CkBounce paramCkBounce, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkBounce_bounceAddress(long paramLong, CkBounce paramCkBounce);
/*       */   
/*       */   public static final native void CkBounce_get_BounceData(long paramLong1, CkBounce paramCkBounce, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkBounce_bounceData(long paramLong, CkBounce paramCkBounce);
/*       */   
/*       */   public static final native int CkBounce_get_BounceType(long paramLong, CkBounce paramCkBounce);
/*       */   
/*       */   public static final native void CkBounce_get_DebugLogFilePath(long paramLong1, CkBounce paramCkBounce, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkBounce_debugLogFilePath(long paramLong, CkBounce paramCkBounce);
/*       */   
/*       */   public static final native void CkBounce_put_DebugLogFilePath(long paramLong, CkBounce paramCkBounce, String paramString);
/*       */   
/*       */   public static final native void CkBounce_get_LastErrorHtml(long paramLong1, CkBounce paramCkBounce, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkBounce_lastErrorHtml(long paramLong, CkBounce paramCkBounce);
/*       */   
/*       */   public static final native void CkBounce_get_LastErrorText(long paramLong1, CkBounce paramCkBounce, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkBounce_lastErrorText(long paramLong, CkBounce paramCkBounce);
/*       */   
/*       */   public static final native void CkBounce_get_LastErrorXml(long paramLong1, CkBounce paramCkBounce, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkBounce_lastErrorXml(long paramLong, CkBounce paramCkBounce);
/*       */   
/*       */   public static final native boolean CkBounce_get_LastMethodSuccess(long paramLong, CkBounce paramCkBounce);
/*       */   
/*       */   public static final native void CkBounce_put_LastMethodSuccess(long paramLong, CkBounce paramCkBounce, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkBounce_get_VerboseLogging(long paramLong, CkBounce paramCkBounce);
/*       */   
/*       */   public static final native void CkBounce_put_VerboseLogging(long paramLong, CkBounce paramCkBounce, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkBounce_get_Version(long paramLong1, CkBounce paramCkBounce, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkBounce_version(long paramLong, CkBounce paramCkBounce);
/*       */   
/*       */   public static final native boolean CkBounce_ExamineEmail(long paramLong1, CkBounce paramCkBounce, long paramLong2, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native boolean CkBounce_ExamineEml(long paramLong, CkBounce paramCkBounce, String paramString);
/*       */   
/*       */   public static final native boolean CkBounce_ExamineMime(long paramLong, CkBounce paramCkBounce, String paramString);
/*       */   
/*       */   public static final native boolean CkBounce_SaveLastError(long paramLong, CkBounce paramCkBounce, String paramString);
/*       */   
/*       */   public static final native boolean CkBounce_UnlockComponent(long paramLong, CkBounce paramCkBounce, String paramString);
/*       */   
/*       */   public static final native long new_CkBz2();
/*       */   
/*       */   public static final native void delete_CkBz2(long paramLong);
/*       */   
/*       */   public static final native void CkBz2_LastErrorXml(long paramLong1, CkBz2 paramCkBz2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkBz2_LastErrorHtml(long paramLong1, CkBz2 paramCkBz2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkBz2_LastErrorText(long paramLong1, CkBz2 paramCkBz2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkBz2_put_EventCallbackObject(long paramLong1, CkBz2 paramCkBz2, long paramLong2, CkBaseProgress paramCkBaseProgress);
/*       */   
/*       */   public static final native boolean CkBz2_get_AbortCurrent(long paramLong, CkBz2 paramCkBz2);
/*       */   
/*       */   public static final native void CkBz2_put_AbortCurrent(long paramLong, CkBz2 paramCkBz2, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkBz2_get_DebugLogFilePath(long paramLong1, CkBz2 paramCkBz2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkBz2_debugLogFilePath(long paramLong, CkBz2 paramCkBz2);
/*       */   
/*       */   public static final native void CkBz2_put_DebugLogFilePath(long paramLong, CkBz2 paramCkBz2, String paramString);
/*       */   
/*       */   public static final native int CkBz2_get_HeartbeatMs(long paramLong, CkBz2 paramCkBz2);
/*       */   
/*       */   public static final native void CkBz2_put_HeartbeatMs(long paramLong, CkBz2 paramCkBz2, int paramInt);
/*       */   
/*       */   public static final native void CkBz2_get_LastErrorHtml(long paramLong1, CkBz2 paramCkBz2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkBz2_lastErrorHtml(long paramLong, CkBz2 paramCkBz2);
/*       */   
/*       */   public static final native void CkBz2_get_LastErrorText(long paramLong1, CkBz2 paramCkBz2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkBz2_lastErrorText(long paramLong, CkBz2 paramCkBz2);
/*       */   
/*       */   public static final native void CkBz2_get_LastErrorXml(long paramLong1, CkBz2 paramCkBz2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkBz2_lastErrorXml(long paramLong, CkBz2 paramCkBz2);
/*       */   
/*       */   public static final native boolean CkBz2_get_LastMethodSuccess(long paramLong, CkBz2 paramCkBz2);
/*       */   
/*       */   public static final native void CkBz2_put_LastMethodSuccess(long paramLong, CkBz2 paramCkBz2, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkBz2_get_VerboseLogging(long paramLong, CkBz2 paramCkBz2);
/*       */   
/*       */   public static final native void CkBz2_put_VerboseLogging(long paramLong, CkBz2 paramCkBz2, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkBz2_get_Version(long paramLong1, CkBz2 paramCkBz2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkBz2_version(long paramLong, CkBz2 paramCkBz2);
/*       */   
/*       */   public static final native boolean CkBz2_CompressFile(long paramLong, CkBz2 paramCkBz2, String paramString1, String paramString2);
/*       */   
/*       */   public static final native long CkBz2_CompressFileAsync(long paramLong, CkBz2 paramCkBz2, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkBz2_CompressFileToMem(long paramLong1, CkBz2 paramCkBz2, String paramString, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native long CkBz2_CompressFileToMemAsync(long paramLong, CkBz2 paramCkBz2, String paramString);
/*       */   
/*       */   public static final native boolean CkBz2_CompressMemory(long paramLong1, CkBz2 paramCkBz2, long paramLong2, CkByteData paramCkByteData1, long paramLong3, CkByteData paramCkByteData2);
/*       */   
/*       */   public static final native long CkBz2_CompressMemoryAsync(long paramLong1, CkBz2 paramCkBz2, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkBz2_CompressMemToFile(long paramLong1, CkBz2 paramCkBz2, long paramLong2, CkByteData paramCkByteData, String paramString);
/*       */   
/*       */   public static final native long CkBz2_CompressMemToFileAsync(long paramLong1, CkBz2 paramCkBz2, long paramLong2, CkByteData paramCkByteData, String paramString);
/*       */   
/*       */   public static final native boolean CkBz2_SaveLastError(long paramLong, CkBz2 paramCkBz2, String paramString);
/*       */   
/*       */   public static final native boolean CkBz2_UncompressFile(long paramLong, CkBz2 paramCkBz2, String paramString1, String paramString2);
/*       */   
/*       */   public static final native long CkBz2_UncompressFileAsync(long paramLong, CkBz2 paramCkBz2, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkBz2_UncompressFileToMem(long paramLong1, CkBz2 paramCkBz2, String paramString, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native long CkBz2_UncompressFileToMemAsync(long paramLong, CkBz2 paramCkBz2, String paramString);
/*       */   
/*       */   public static final native boolean CkBz2_UncompressMemory(long paramLong1, CkBz2 paramCkBz2, long paramLong2, CkByteData paramCkByteData1, long paramLong3, CkByteData paramCkByteData2);
/*       */   
/*       */   public static final native long CkBz2_UncompressMemoryAsync(long paramLong1, CkBz2 paramCkBz2, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkBz2_UncompressMemToFile(long paramLong1, CkBz2 paramCkBz2, long paramLong2, CkByteData paramCkByteData, String paramString);
/*       */   
/*       */   public static final native long CkBz2_UncompressMemToFileAsync(long paramLong1, CkBz2 paramCkBz2, long paramLong2, CkByteData paramCkByteData, String paramString);
/*       */   
/*       */   public static final native boolean CkBz2_UnlockComponent(long paramLong, CkBz2 paramCkBz2, String paramString);
/*       */   
/*       */   public static final native long new_CkCache();
/*       */   
/*       */   public static final native void delete_CkCache(long paramLong);
/*       */   
/*       */   public static final native void CkCache_LastErrorXml(long paramLong1, CkCache paramCkCache, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkCache_LastErrorHtml(long paramLong1, CkCache paramCkCache, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkCache_LastErrorText(long paramLong1, CkCache paramCkCache, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkCache_get_DebugLogFilePath(long paramLong1, CkCache paramCkCache, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCache_debugLogFilePath(long paramLong, CkCache paramCkCache);
/*       */   
/*       */   public static final native void CkCache_put_DebugLogFilePath(long paramLong, CkCache paramCkCache, String paramString);
/*       */   
/*       */   public static final native void CkCache_get_LastErrorHtml(long paramLong1, CkCache paramCkCache, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCache_lastErrorHtml(long paramLong, CkCache paramCkCache);
/*       */   
/*       */   public static final native void CkCache_get_LastErrorText(long paramLong1, CkCache paramCkCache, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCache_lastErrorText(long paramLong, CkCache paramCkCache);
/*       */   
/*       */   public static final native void CkCache_get_LastErrorXml(long paramLong1, CkCache paramCkCache, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCache_lastErrorXml(long paramLong, CkCache paramCkCache);
/*       */   
/*       */   public static final native void CkCache_get_LastEtagFetched(long paramLong1, CkCache paramCkCache, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCache_lastEtagFetched(long paramLong, CkCache paramCkCache);
/*       */   
/*       */   public static final native void CkCache_get_LastExpirationFetched(long paramLong1, CkCache paramCkCache, long paramLong2, SYSTEMTIME paramSYSTEMTIME);
/*       */   
/*       */   public static final native void CkCache_get_LastExpirationFetchedStr(long paramLong1, CkCache paramCkCache, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCache_lastExpirationFetchedStr(long paramLong, CkCache paramCkCache);
/*       */   
/*       */   public static final native boolean CkCache_get_LastHitExpired(long paramLong, CkCache paramCkCache);
/*       */   
/*       */   public static final native void CkCache_get_LastKeyFetched(long paramLong1, CkCache paramCkCache, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCache_lastKeyFetched(long paramLong, CkCache paramCkCache);
/*       */   
/*       */   public static final native boolean CkCache_get_LastMethodSuccess(long paramLong, CkCache paramCkCache);
/*       */   
/*       */   public static final native void CkCache_put_LastMethodSuccess(long paramLong, CkCache paramCkCache, boolean paramBoolean);
/*       */   
/*       */   public static final native int CkCache_get_Level(long paramLong, CkCache paramCkCache);
/*       */   
/*       */   public static final native void CkCache_put_Level(long paramLong, CkCache paramCkCache, int paramInt);
/*       */   
/*       */   public static final native int CkCache_get_NumRoots(long paramLong, CkCache paramCkCache);
/*       */   
/*       */   public static final native boolean CkCache_get_VerboseLogging(long paramLong, CkCache paramCkCache);
/*       */   
/*       */   public static final native void CkCache_put_VerboseLogging(long paramLong, CkCache paramCkCache, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkCache_get_Version(long paramLong1, CkCache paramCkCache, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCache_version(long paramLong, CkCache paramCkCache);
/*       */   
/*       */   public static final native void CkCache_AddRoot(long paramLong, CkCache paramCkCache, String paramString);
/*       */   
/*       */   public static final native int CkCache_DeleteAll(long paramLong, CkCache paramCkCache);
/*       */   
/*       */   public static final native int CkCache_DeleteAllExpired(long paramLong, CkCache paramCkCache);
/*       */   
/*       */   public static final native boolean CkCache_DeleteFromCache(long paramLong, CkCache paramCkCache, String paramString);
/*       */   
/*       */   public static final native int CkCache_DeleteOlder(long paramLong1, CkCache paramCkCache, long paramLong2, SYSTEMTIME paramSYSTEMTIME);
/*       */   
/*       */   public static final native int CkCache_DeleteOlderDt(long paramLong1, CkCache paramCkCache, long paramLong2, CkDateTime paramCkDateTime);
/*       */   
/*       */   public static final native int CkCache_DeleteOlderStr(long paramLong, CkCache paramCkCache, String paramString);
/*       */   
/*       */   public static final native boolean CkCache_FetchFromCache(long paramLong1, CkCache paramCkCache, String paramString, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkCache_FetchText(long paramLong1, CkCache paramCkCache, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCache_fetchText(long paramLong, CkCache paramCkCache, String paramString);
/*       */   
/*       */   public static final native boolean CkCache_GetEtag(long paramLong1, CkCache paramCkCache, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCache_getEtag(long paramLong, CkCache paramCkCache, String paramString);
/*       */   
/*       */   public static final native String CkCache_etag(long paramLong, CkCache paramCkCache, String paramString);
/*       */   
/*       */   public static final native boolean CkCache_GetExpiration(long paramLong1, CkCache paramCkCache, String paramString, long paramLong2, SYSTEMTIME paramSYSTEMTIME);
/*       */   
/*       */   public static final native long CkCache_GetExpirationDt(long paramLong, CkCache paramCkCache, String paramString);
/*       */   
/*       */   public static final native boolean CkCache_GetExpirationStr(long paramLong1, CkCache paramCkCache, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCache_getExpirationStr(long paramLong, CkCache paramCkCache, String paramString);
/*       */   
/*       */   public static final native String CkCache_expirationStr(long paramLong, CkCache paramCkCache, String paramString);
/*       */   
/*       */   public static final native boolean CkCache_GetFilename(long paramLong1, CkCache paramCkCache, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCache_getFilename(long paramLong, CkCache paramCkCache, String paramString);
/*       */   
/*       */   public static final native String CkCache_filename(long paramLong, CkCache paramCkCache, String paramString);
/*       */   
/*       */   public static final native boolean CkCache_GetRoot(long paramLong1, CkCache paramCkCache, int paramInt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCache_getRoot(long paramLong, CkCache paramCkCache, int paramInt);
/*       */   
/*       */   public static final native String CkCache_root(long paramLong, CkCache paramCkCache, int paramInt);
/*       */   
/*       */   public static final native boolean CkCache_IsCached(long paramLong, CkCache paramCkCache, String paramString);
/*       */   
/*       */   public static final native boolean CkCache_SaveLastError(long paramLong, CkCache paramCkCache, String paramString);
/*       */   
/*       */   public static final native boolean CkCache_SaveText(long paramLong1, CkCache paramCkCache, String paramString1, long paramLong2, SYSTEMTIME paramSYSTEMTIME, String paramString2, String paramString3);
/*       */   
/*       */   public static final native boolean CkCache_SaveTextDt(long paramLong1, CkCache paramCkCache, String paramString1, long paramLong2, CkDateTime paramCkDateTime, String paramString2, String paramString3);
/*       */   
/*       */   public static final native boolean CkCache_SaveTextNoExpire(long paramLong, CkCache paramCkCache, String paramString1, String paramString2, String paramString3);
/*       */   
/*       */   public static final native boolean CkCache_SaveTextStr(long paramLong, CkCache paramCkCache, String paramString1, String paramString2, String paramString3, String paramString4);
/*       */   
/*       */   public static final native boolean CkCache_SaveToCache(long paramLong1, CkCache paramCkCache, String paramString1, long paramLong2, SYSTEMTIME paramSYSTEMTIME, String paramString2, long paramLong3, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkCache_SaveToCacheDt(long paramLong1, CkCache paramCkCache, String paramString1, long paramLong2, CkDateTime paramCkDateTime, String paramString2, long paramLong3, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkCache_SaveToCacheNoExpire(long paramLong1, CkCache paramCkCache, String paramString1, String paramString2, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkCache_SaveToCacheStr(long paramLong1, CkCache paramCkCache, String paramString1, String paramString2, String paramString3, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkCache_UpdateExpiration(long paramLong1, CkCache paramCkCache, String paramString, long paramLong2, SYSTEMTIME paramSYSTEMTIME);
/*       */   
/*       */   public static final native boolean CkCache_UpdateExpirationDt(long paramLong1, CkCache paramCkCache, String paramString, long paramLong2, CkDateTime paramCkDateTime);
/*       */   
/*       */   public static final native boolean CkCache_UpdateExpirationStr(long paramLong, CkCache paramCkCache, String paramString1, String paramString2);
/*       */   
/*       */   public static final native long new_CkCert();
/*       */   
/*       */   public static final native void delete_CkCert(long paramLong);
/*       */   
/*       */   public static final native void CkCert_LastErrorXml(long paramLong1, CkCert paramCkCert, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkCert_LastErrorHtml(long paramLong1, CkCert paramCkCert, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkCert_LastErrorText(long paramLong1, CkCert paramCkCert, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkCert_get_AuthorityKeyId(long paramLong1, CkCert paramCkCert, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCert_authorityKeyId(long paramLong, CkCert paramCkCert);
/*       */   
/*       */   public static final native boolean CkCert_get_AvoidWindowsPkAccess(long paramLong, CkCert paramCkCert);
/*       */   
/*       */   public static final native void CkCert_put_AvoidWindowsPkAccess(long paramLong, CkCert paramCkCert, boolean paramBoolean);
/*       */   
/*       */   public static final native int CkCert_get_CertVersion(long paramLong, CkCert paramCkCert);
/*       */   
/*       */   public static final native void CkCert_get_CspName(long paramLong1, CkCert paramCkCert, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCert_cspName(long paramLong, CkCert paramCkCert);
/*       */   
/*       */   public static final native void CkCert_get_DebugLogFilePath(long paramLong1, CkCert paramCkCert, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCert_debugLogFilePath(long paramLong, CkCert paramCkCert);
/*       */   
/*       */   public static final native void CkCert_put_DebugLogFilePath(long paramLong, CkCert paramCkCert, String paramString);
/*       */   
/*       */   public static final native boolean CkCert_get_Expired(long paramLong, CkCert paramCkCert);
/*       */   
/*       */   public static final native boolean CkCert_get_ForClientAuthentication(long paramLong, CkCert paramCkCert);
/*       */   
/*       */   public static final native boolean CkCert_get_ForCodeSigning(long paramLong, CkCert paramCkCert);
/*       */   
/*       */   public static final native boolean CkCert_get_ForSecureEmail(long paramLong, CkCert paramCkCert);
/*       */   
/*       */   public static final native boolean CkCert_get_ForServerAuthentication(long paramLong, CkCert paramCkCert);
/*       */   
/*       */   public static final native boolean CkCert_get_ForTimeStamping(long paramLong, CkCert paramCkCert);
/*       */   
/*       */   public static final native boolean CkCert_get_HasKeyContainer(long paramLong, CkCert paramCkCert);
/*       */   
/*       */   public static final native long CkCert_get_IntendedKeyUsage(long paramLong, CkCert paramCkCert);
/*       */   
/*       */   public static final native boolean CkCert_get_IsRoot(long paramLong, CkCert paramCkCert);
/*       */   
/*       */   public static final native void CkCert_get_IssuerC(long paramLong1, CkCert paramCkCert, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCert_issuerC(long paramLong, CkCert paramCkCert);
/*       */   
/*       */   public static final native void CkCert_get_IssuerCN(long paramLong1, CkCert paramCkCert, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCert_issuerCN(long paramLong, CkCert paramCkCert);
/*       */   
/*       */   public static final native void CkCert_get_IssuerDN(long paramLong1, CkCert paramCkCert, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCert_issuerDN(long paramLong, CkCert paramCkCert);
/*       */   
/*       */   public static final native void CkCert_get_IssuerE(long paramLong1, CkCert paramCkCert, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCert_issuerE(long paramLong, CkCert paramCkCert);
/*       */   
/*       */   public static final native void CkCert_get_IssuerL(long paramLong1, CkCert paramCkCert, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCert_issuerL(long paramLong, CkCert paramCkCert);
/*       */   
/*       */   public static final native void CkCert_get_IssuerO(long paramLong1, CkCert paramCkCert, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCert_issuerO(long paramLong, CkCert paramCkCert);
/*       */   
/*       */   public static final native void CkCert_get_IssuerOU(long paramLong1, CkCert paramCkCert, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCert_issuerOU(long paramLong, CkCert paramCkCert);
/*       */   
/*       */   public static final native void CkCert_get_IssuerS(long paramLong1, CkCert paramCkCert, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCert_issuerS(long paramLong, CkCert paramCkCert);
/*       */   
/*       */   public static final native void CkCert_get_KeyContainerName(long paramLong1, CkCert paramCkCert, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCert_keyContainerName(long paramLong, CkCert paramCkCert);
/*       */   
/*       */   public static final native void CkCert_get_LastErrorHtml(long paramLong1, CkCert paramCkCert, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCert_lastErrorHtml(long paramLong, CkCert paramCkCert);
/*       */   
/*       */   public static final native void CkCert_get_LastErrorText(long paramLong1, CkCert paramCkCert, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCert_lastErrorText(long paramLong, CkCert paramCkCert);
/*       */   
/*       */   public static final native void CkCert_get_LastErrorXml(long paramLong1, CkCert paramCkCert, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCert_lastErrorXml(long paramLong, CkCert paramCkCert);
/*       */   
/*       */   public static final native boolean CkCert_get_LastMethodSuccess(long paramLong, CkCert paramCkCert);
/*       */   
/*       */   public static final native void CkCert_put_LastMethodSuccess(long paramLong, CkCert paramCkCert, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkCert_get_MachineKeyset(long paramLong, CkCert paramCkCert);
/*       */   
/*       */   public static final native void CkCert_get_OcspUrl(long paramLong1, CkCert paramCkCert, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCert_ocspUrl(long paramLong, CkCert paramCkCert);
/*       */   
/*       */   public static final native boolean CkCert_get_PrivateKeyExportable(long paramLong, CkCert paramCkCert);
/*       */   
/*       */   public static final native boolean CkCert_get_Revoked(long paramLong, CkCert paramCkCert);
/*       */   
/*       */   public static final native void CkCert_get_Rfc822Name(long paramLong1, CkCert paramCkCert, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCert_rfc822Name(long paramLong, CkCert paramCkCert);
/*       */   
/*       */   public static final native boolean CkCert_get_SelfSigned(long paramLong, CkCert paramCkCert);
/*       */   
/*       */   public static final native void CkCert_get_SerialDecimal(long paramLong1, CkCert paramCkCert, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCert_serialDecimal(long paramLong, CkCert paramCkCert);
/*       */   
/*       */   public static final native void CkCert_get_SerialNumber(long paramLong1, CkCert paramCkCert, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCert_serialNumber(long paramLong, CkCert paramCkCert);
/*       */   
/*       */   public static final native void CkCert_get_Sha1Thumbprint(long paramLong1, CkCert paramCkCert, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCert_sha1Thumbprint(long paramLong, CkCert paramCkCert);
/*       */   
/*       */   public static final native boolean CkCert_get_SignatureVerified(long paramLong, CkCert paramCkCert);
/*       */   
/*       */   public static final native boolean CkCert_get_Silent(long paramLong, CkCert paramCkCert);
/*       */   
/*       */   public static final native void CkCert_get_SmartCardPin(long paramLong1, CkCert paramCkCert, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCert_smartCardPin(long paramLong, CkCert paramCkCert);
/*       */   
/*       */   public static final native void CkCert_put_SmartCardPin(long paramLong, CkCert paramCkCert, String paramString);
/*       */   
/*       */   public static final native void CkCert_get_SubjectC(long paramLong1, CkCert paramCkCert, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCert_subjectC(long paramLong, CkCert paramCkCert);
/*       */   
/*       */   public static final native void CkCert_get_SubjectCN(long paramLong1, CkCert paramCkCert, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCert_subjectCN(long paramLong, CkCert paramCkCert);
/*       */   
/*       */   public static final native void CkCert_get_SubjectDN(long paramLong1, CkCert paramCkCert, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCert_subjectDN(long paramLong, CkCert paramCkCert);
/*       */   
/*       */   public static final native void CkCert_get_SubjectE(long paramLong1, CkCert paramCkCert, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCert_subjectE(long paramLong, CkCert paramCkCert);
/*       */   
/*       */   public static final native void CkCert_get_SubjectKeyId(long paramLong1, CkCert paramCkCert, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCert_subjectKeyId(long paramLong, CkCert paramCkCert);
/*       */   
/*       */   public static final native void CkCert_get_SubjectL(long paramLong1, CkCert paramCkCert, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCert_subjectL(long paramLong, CkCert paramCkCert);
/*       */   
/*       */   public static final native void CkCert_get_SubjectO(long paramLong1, CkCert paramCkCert, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCert_subjectO(long paramLong, CkCert paramCkCert);
/*       */   
/*       */   public static final native void CkCert_get_SubjectOU(long paramLong1, CkCert paramCkCert, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCert_subjectOU(long paramLong, CkCert paramCkCert);
/*       */   
/*       */   public static final native void CkCert_get_SubjectS(long paramLong1, CkCert paramCkCert, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCert_subjectS(long paramLong, CkCert paramCkCert);
/*       */   
/*       */   public static final native boolean CkCert_get_TrustedRoot(long paramLong, CkCert paramCkCert);
/*       */   
/*       */   public static final native void CkCert_get_ValidFrom(long paramLong1, CkCert paramCkCert, long paramLong2, SYSTEMTIME paramSYSTEMTIME);
/*       */   
/*       */   public static final native void CkCert_get_ValidFromStr(long paramLong1, CkCert paramCkCert, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCert_validFromStr(long paramLong, CkCert paramCkCert);
/*       */   
/*       */   public static final native void CkCert_get_ValidTo(long paramLong1, CkCert paramCkCert, long paramLong2, SYSTEMTIME paramSYSTEMTIME);
/*       */   
/*       */   public static final native void CkCert_get_ValidToStr(long paramLong1, CkCert paramCkCert, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCert_validToStr(long paramLong, CkCert paramCkCert);
/*       */   
/*       */   public static final native boolean CkCert_get_VerboseLogging(long paramLong, CkCert paramCkCert);
/*       */   
/*       */   public static final native void CkCert_put_VerboseLogging(long paramLong, CkCert paramCkCert, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkCert_get_Version(long paramLong1, CkCert paramCkCert, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCert_version(long paramLong, CkCert paramCkCert);
/*       */   
/*       */   public static final native int CkCert_CheckRevoked(long paramLong, CkCert paramCkCert);
/*       */   
/*       */   public static final native boolean CkCert_ExportCertDer(long paramLong1, CkCert paramCkCert, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkCert_ExportCertDerBd(long paramLong1, CkCert paramCkCert, long paramLong2, CkBinData paramCkBinData);
/*       */   
/*       */   public static final native boolean CkCert_ExportCertDerFile(long paramLong, CkCert paramCkCert, String paramString);
/*       */   
/*       */   public static final native boolean CkCert_ExportCertPem(long paramLong1, CkCert paramCkCert, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCert_exportCertPem(long paramLong, CkCert paramCkCert);
/*       */   
/*       */   public static final native boolean CkCert_ExportCertPemFile(long paramLong, CkCert paramCkCert, String paramString);
/*       */   
/*       */   public static final native boolean CkCert_ExportCertXml(long paramLong1, CkCert paramCkCert, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCert_exportCertXml(long paramLong, CkCert paramCkCert);
/*       */   
/*       */   public static final native long CkCert_ExportPrivateKey(long paramLong, CkCert paramCkCert);
/*       */   
/*       */   public static final native long CkCert_ExportPublicKey(long paramLong, CkCert paramCkCert);
/*       */   
/*       */   public static final native boolean CkCert_ExportToPfxBd(long paramLong1, CkCert paramCkCert, String paramString, boolean paramBoolean, long paramLong2, CkBinData paramCkBinData);
/*       */   
/*       */   public static final native boolean CkCert_ExportToPfxData(long paramLong1, CkCert paramCkCert, String paramString, boolean paramBoolean, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkCert_ExportToPfxFile(long paramLong, CkCert paramCkCert, String paramString1, String paramString2, boolean paramBoolean);
/*       */   
/*       */   public static final native long CkCert_FindIssuer(long paramLong, CkCert paramCkCert);
/*       */   
/*       */   public static final native long CkCert_GetCertChain(long paramLong, CkCert paramCkCert);
/*       */   
/*       */   public static final native boolean CkCert_GetEncoded(long paramLong1, CkCert paramCkCert, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCert_getEncoded(long paramLong, CkCert paramCkCert);
/*       */   
/*       */   public static final native String CkCert_encoded(long paramLong, CkCert paramCkCert);
/*       */   
/*       */   public static final native boolean CkCert_GetExtensionAsXml(long paramLong1, CkCert paramCkCert, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCert_getExtensionAsXml(long paramLong, CkCert paramCkCert, String paramString);
/*       */   
/*       */   public static final native String CkCert_extensionAsXml(long paramLong, CkCert paramCkCert, String paramString);
/*       */   
/*       */   public static final native boolean CkCert_GetPrivateKeyPem(long paramLong1, CkCert paramCkCert, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCert_getPrivateKeyPem(long paramLong, CkCert paramCkCert);
/*       */   
/*       */   public static final native String CkCert_privateKeyPem(long paramLong, CkCert paramCkCert);
/*       */   
/*       */   public static final native boolean CkCert_GetSpkiFingerprint(long paramLong1, CkCert paramCkCert, String paramString1, String paramString2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCert_getSpkiFingerprint(long paramLong, CkCert paramCkCert, String paramString1, String paramString2);
/*       */   
/*       */   public static final native String CkCert_spkiFingerprint(long paramLong, CkCert paramCkCert, String paramString1, String paramString2);
/*       */   
/*       */   public static final native long CkCert_GetValidFromDt(long paramLong, CkCert paramCkCert);
/*       */   
/*       */   public static final native long CkCert_GetValidToDt(long paramLong, CkCert paramCkCert);
/*       */   
/*       */   public static final native boolean CkCert_HashOf(long paramLong1, CkCert paramCkCert, String paramString1, String paramString2, String paramString3, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCert_hashOf(long paramLong, CkCert paramCkCert, String paramString1, String paramString2, String paramString3);
/*       */   
/*       */   public static final native boolean CkCert_HasPrivateKey(long paramLong, CkCert paramCkCert);
/*       */   
/*       */   public static final native boolean CkCert_LinkPrivateKey(long paramLong, CkCert paramCkCert, String paramString, boolean paramBoolean1, boolean paramBoolean2);
/*       */   
/*       */   public static final native boolean CkCert_LoadByCommonName(long paramLong, CkCert paramCkCert, String paramString);
/*       */   
/*       */   public static final native boolean CkCert_LoadByEmailAddress(long paramLong, CkCert paramCkCert, String paramString);
/*       */   
/*       */   public static final native boolean CkCert_LoadByIssuerAndSerialNumber(long paramLong, CkCert paramCkCert, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkCert_LoadFromBase64(long paramLong, CkCert paramCkCert, String paramString);
/*       */   
/*       */   public static final native boolean CkCert_LoadFromBd(long paramLong1, CkCert paramCkCert, long paramLong2, CkBinData paramCkBinData);
/*       */   
/*       */   public static final native boolean CkCert_LoadFromBinary(long paramLong1, CkCert paramCkCert, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkCert_LoadFromFile(long paramLong, CkCert paramCkCert, String paramString);
/*       */   
/*       */   public static final native boolean CkCert_LoadPem(long paramLong, CkCert paramCkCert, String paramString);
/*       */   
/*       */   public static final native boolean CkCert_LoadPfxBd(long paramLong1, CkCert paramCkCert, long paramLong2, CkBinData paramCkBinData, String paramString);
/*       */   
/*       */   public static final native boolean CkCert_LoadPfxData(long paramLong1, CkCert paramCkCert, long paramLong2, CkByteData paramCkByteData, String paramString);
/*       */   
/*       */   public static final native boolean CkCert_LoadPfxFile(long paramLong, CkCert paramCkCert, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkCert_LoadTaskResult(long paramLong1, CkCert paramCkCert, long paramLong2, CkTask paramCkTask);
/*       */   
/*       */   public static final native boolean CkCert_PemFileToDerFile(long paramLong, CkCert paramCkCert, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkCert_SaveLastError(long paramLong, CkCert paramCkCert, String paramString);
/*       */   
/*       */   public static final native boolean CkCert_SaveToFile(long paramLong, CkCert paramCkCert, String paramString);
/*       */   
/*       */   public static final native boolean CkCert_SetFromEncoded(long paramLong, CkCert paramCkCert, String paramString);
/*       */   
/*       */   public static final native boolean CkCert_SetPrivateKey(long paramLong1, CkCert paramCkCert, long paramLong2, CkPrivateKey paramCkPrivateKey);
/*       */   
/*       */   public static final native boolean CkCert_SetPrivateKeyPem(long paramLong, CkCert paramCkCert, String paramString);
/*       */   
/*       */   public static final native boolean CkCert_UseCertVault(long paramLong1, CkCert paramCkCert, long paramLong2, CkXmlCertVault paramCkXmlCertVault);
/*       */   
/*       */   public static final native boolean CkCert_VerifySignature(long paramLong, CkCert paramCkCert);
/*       */   
/*       */   public static final native long new_CkCertChain();
/*       */   
/*       */   public static final native void delete_CkCertChain(long paramLong);
/*       */   
/*       */   public static final native void CkCertChain_LastErrorXml(long paramLong1, CkCertChain paramCkCertChain, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkCertChain_LastErrorHtml(long paramLong1, CkCertChain paramCkCertChain, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkCertChain_LastErrorText(long paramLong1, CkCertChain paramCkCertChain, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkCertChain_get_DebugLogFilePath(long paramLong1, CkCertChain paramCkCertChain, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCertChain_debugLogFilePath(long paramLong, CkCertChain paramCkCertChain);
/*       */   
/*       */   public static final native void CkCertChain_put_DebugLogFilePath(long paramLong, CkCertChain paramCkCertChain, String paramString);
/*       */   
/*       */   public static final native void CkCertChain_get_LastErrorHtml(long paramLong1, CkCertChain paramCkCertChain, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCertChain_lastErrorHtml(long paramLong, CkCertChain paramCkCertChain);
/*       */   
/*       */   public static final native void CkCertChain_get_LastErrorText(long paramLong1, CkCertChain paramCkCertChain, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCertChain_lastErrorText(long paramLong, CkCertChain paramCkCertChain);
/*       */   
/*       */   public static final native void CkCertChain_get_LastErrorXml(long paramLong1, CkCertChain paramCkCertChain, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCertChain_lastErrorXml(long paramLong, CkCertChain paramCkCertChain);
/*       */   
/*       */   public static final native boolean CkCertChain_get_LastMethodSuccess(long paramLong, CkCertChain paramCkCertChain);
/*       */   
/*       */   public static final native void CkCertChain_put_LastMethodSuccess(long paramLong, CkCertChain paramCkCertChain, boolean paramBoolean);
/*       */   
/*       */   public static final native int CkCertChain_get_NumCerts(long paramLong, CkCertChain paramCkCertChain);
/*       */   
/*       */   public static final native int CkCertChain_get_NumExpiredCerts(long paramLong, CkCertChain paramCkCertChain);
/*       */   
/*       */   public static final native boolean CkCertChain_get_ReachesRoot(long paramLong, CkCertChain paramCkCertChain);
/*       */   
/*       */   public static final native boolean CkCertChain_get_VerboseLogging(long paramLong, CkCertChain paramCkCertChain);
/*       */   
/*       */   public static final native void CkCertChain_put_VerboseLogging(long paramLong, CkCertChain paramCkCertChain, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkCertChain_get_Version(long paramLong1, CkCertChain paramCkCertChain, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCertChain_version(long paramLong, CkCertChain paramCkCertChain);
/*       */   
/*       */   public static final native long CkCertChain_GetCert(long paramLong, CkCertChain paramCkCertChain, int paramInt);
/*       */   
/*       */   public static final native boolean CkCertChain_IsRootTrusted(long paramLong1, CkCertChain paramCkCertChain, long paramLong2, CkTrustedRoots paramCkTrustedRoots);
/*       */   
/*       */   public static final native boolean CkCertChain_LoadX5C(long paramLong1, CkCertChain paramCkCertChain, long paramLong2, CkJsonObject paramCkJsonObject);
/*       */   
/*       */   public static final native boolean CkCertChain_SaveLastError(long paramLong, CkCertChain paramCkCertChain, String paramString);
/*       */   
/*       */   public static final native boolean CkCertChain_VerifyCertSignatures(long paramLong, CkCertChain paramCkCertChain);
/*       */   
/*       */   public static final native long new_CkCertStore();
/*       */   
/*       */   public static final native void delete_CkCertStore(long paramLong);
/*       */   
/*       */   public static final native void CkCertStore_LastErrorXml(long paramLong1, CkCertStore paramCkCertStore, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkCertStore_LastErrorHtml(long paramLong1, CkCertStore paramCkCertStore, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkCertStore_LastErrorText(long paramLong1, CkCertStore paramCkCertStore, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native boolean CkCertStore_get_AvoidWindowsPkAccess(long paramLong, CkCertStore paramCkCertStore);
/*       */   
/*       */   public static final native void CkCertStore_put_AvoidWindowsPkAccess(long paramLong, CkCertStore paramCkCertStore, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkCertStore_get_DebugLogFilePath(long paramLong1, CkCertStore paramCkCertStore, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCertStore_debugLogFilePath(long paramLong, CkCertStore paramCkCertStore);
/*       */   
/*       */   public static final native void CkCertStore_put_DebugLogFilePath(long paramLong, CkCertStore paramCkCertStore, String paramString);
/*       */   
/*       */   public static final native void CkCertStore_get_LastErrorHtml(long paramLong1, CkCertStore paramCkCertStore, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCertStore_lastErrorHtml(long paramLong, CkCertStore paramCkCertStore);
/*       */   
/*       */   public static final native void CkCertStore_get_LastErrorText(long paramLong1, CkCertStore paramCkCertStore, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCertStore_lastErrorText(long paramLong, CkCertStore paramCkCertStore);
/*       */   
/*       */   public static final native void CkCertStore_get_LastErrorXml(long paramLong1, CkCertStore paramCkCertStore, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCertStore_lastErrorXml(long paramLong, CkCertStore paramCkCertStore);
/*       */   
/*       */   public static final native boolean CkCertStore_get_LastMethodSuccess(long paramLong, CkCertStore paramCkCertStore);
/*       */   
/*       */   public static final native void CkCertStore_put_LastMethodSuccess(long paramLong, CkCertStore paramCkCertStore, boolean paramBoolean);
/*       */   
/*       */   public static final native int CkCertStore_get_NumCertificates(long paramLong, CkCertStore paramCkCertStore);
/*       */   
/*       */   public static final native int CkCertStore_get_NumEmailCerts(long paramLong, CkCertStore paramCkCertStore);
/*       */   
/*       */   public static final native boolean CkCertStore_get_VerboseLogging(long paramLong, CkCertStore paramCkCertStore);
/*       */   
/*       */   public static final native void CkCertStore_put_VerboseLogging(long paramLong, CkCertStore paramCkCertStore, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkCertStore_get_Version(long paramLong1, CkCertStore paramCkCertStore, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCertStore_version(long paramLong, CkCertStore paramCkCertStore);
/*       */   
/*       */   public static final native boolean CkCertStore_AddCertificate(long paramLong1, CkCertStore paramCkCertStore, long paramLong2, CkCert paramCkCert);
/*       */   
/*       */   public static final native boolean CkCertStore_CreateFileStore(long paramLong, CkCertStore paramCkCertStore, String paramString);
/*       */   
/*       */   public static final native boolean CkCertStore_CreateMemoryStore(long paramLong, CkCertStore paramCkCertStore);
/*       */   
/*       */   public static final native boolean CkCertStore_CreateRegistryStore(long paramLong, CkCertStore paramCkCertStore, String paramString1, String paramString2);
/*       */   
/*       */   public static final native long CkCertStore_FindCertByRfc822Name(long paramLong, CkCertStore paramCkCertStore, String paramString);
/*       */   
/*       */   public static final native long CkCertStore_FindCertBySerial(long paramLong, CkCertStore paramCkCertStore, String paramString);
/*       */   
/*       */   public static final native long CkCertStore_FindCertBySha1Thumbprint(long paramLong, CkCertStore paramCkCertStore, String paramString);
/*       */   
/*       */   public static final native long CkCertStore_FindCertBySubject(long paramLong, CkCertStore paramCkCertStore, String paramString);
/*       */   
/*       */   public static final native long CkCertStore_FindCertBySubjectCN(long paramLong, CkCertStore paramCkCertStore, String paramString);
/*       */   
/*       */   public static final native long CkCertStore_FindCertBySubjectE(long paramLong, CkCertStore paramCkCertStore, String paramString);
/*       */   
/*       */   public static final native long CkCertStore_FindCertBySubjectO(long paramLong, CkCertStore paramCkCertStore, String paramString);
/*       */   
/*       */   public static final native long CkCertStore_FindCertForEmail(long paramLong, CkCertStore paramCkCertStore, String paramString);
/*       */   
/*       */   public static final native long CkCertStore_GetCertificate(long paramLong, CkCertStore paramCkCertStore, int paramInt);
/*       */   
/*       */   public static final native long CkCertStore_GetEmailCert(long paramLong, CkCertStore paramCkCertStore, int paramInt);
/*       */   
/*       */   public static final native boolean CkCertStore_LoadPemFile(long paramLong, CkCertStore paramCkCertStore, String paramString);
/*       */   
/*       */   public static final native boolean CkCertStore_LoadPemStr(long paramLong, CkCertStore paramCkCertStore, String paramString);
/*       */   
/*       */   public static final native boolean CkCertStore_LoadPfxData(long paramLong1, CkCertStore paramCkCertStore, long paramLong2, CkByteData paramCkByteData, String paramString);
/*       */   
/*       */   public static final native boolean CkCertStore_LoadPfxFile(long paramLong, CkCertStore paramCkCertStore, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkCertStore_OpenCurrentUserStore(long paramLong, CkCertStore paramCkCertStore, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkCertStore_OpenFileStore(long paramLong, CkCertStore paramCkCertStore, String paramString, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkCertStore_OpenLocalSystemStore(long paramLong, CkCertStore paramCkCertStore, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkCertStore_OpenRegistryStore(long paramLong, CkCertStore paramCkCertStore, String paramString1, String paramString2, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkCertStore_OpenWindowsStore(long paramLong, CkCertStore paramCkCertStore, String paramString1, String paramString2, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkCertStore_RemoveCertificate(long paramLong1, CkCertStore paramCkCertStore, long paramLong2, CkCert paramCkCert);
/*       */   
/*       */   public static final native boolean CkCertStore_SaveLastError(long paramLong, CkCertStore paramCkCertStore, String paramString);
/*       */   
/*       */   public static final native long new_CkCharset();
/*       */   
/*       */   public static final native void delete_CkCharset(long paramLong);
/*       */   
/*       */   public static final native void CkCharset_LastErrorXml(long paramLong1, CkCharset paramCkCharset, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkCharset_LastErrorHtml(long paramLong1, CkCharset paramCkCharset, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkCharset_LastErrorText(long paramLong1, CkCharset paramCkCharset, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkCharset_get_AltToCharset(long paramLong1, CkCharset paramCkCharset, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCharset_altToCharset(long paramLong, CkCharset paramCkCharset);
/*       */   
/*       */   public static final native void CkCharset_put_AltToCharset(long paramLong, CkCharset paramCkCharset, String paramString);
/*       */   
/*       */   public static final native void CkCharset_get_DebugLogFilePath(long paramLong1, CkCharset paramCkCharset, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCharset_debugLogFilePath(long paramLong, CkCharset paramCkCharset);
/*       */   
/*       */   public static final native void CkCharset_put_DebugLogFilePath(long paramLong, CkCharset paramCkCharset, String paramString);
/*       */   
/*       */   public static final native int CkCharset_get_ErrorAction(long paramLong, CkCharset paramCkCharset);
/*       */   
/*       */   public static final native void CkCharset_put_ErrorAction(long paramLong, CkCharset paramCkCharset, int paramInt);
/*       */   
/*       */   public static final native void CkCharset_get_FromCharset(long paramLong1, CkCharset paramCkCharset, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCharset_fromCharset(long paramLong, CkCharset paramCkCharset);
/*       */   
/*       */   public static final native void CkCharset_put_FromCharset(long paramLong, CkCharset paramCkCharset, String paramString);
/*       */   
/*       */   public static final native void CkCharset_get_LastErrorHtml(long paramLong1, CkCharset paramCkCharset, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCharset_lastErrorHtml(long paramLong, CkCharset paramCkCharset);
/*       */   
/*       */   public static final native void CkCharset_get_LastErrorText(long paramLong1, CkCharset paramCkCharset, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCharset_lastErrorText(long paramLong, CkCharset paramCkCharset);
/*       */   
/*       */   public static final native void CkCharset_get_LastErrorXml(long paramLong1, CkCharset paramCkCharset, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCharset_lastErrorXml(long paramLong, CkCharset paramCkCharset);
/*       */   
/*       */   public static final native void CkCharset_get_LastInputAsHex(long paramLong1, CkCharset paramCkCharset, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCharset_lastInputAsHex(long paramLong, CkCharset paramCkCharset);
/*       */   
/*       */   public static final native void CkCharset_get_LastInputAsQP(long paramLong1, CkCharset paramCkCharset, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCharset_lastInputAsQP(long paramLong, CkCharset paramCkCharset);
/*       */   
/*       */   public static final native boolean CkCharset_get_LastMethodSuccess(long paramLong, CkCharset paramCkCharset);
/*       */   
/*       */   public static final native void CkCharset_put_LastMethodSuccess(long paramLong, CkCharset paramCkCharset, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkCharset_get_LastOutputAsHex(long paramLong1, CkCharset paramCkCharset, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCharset_lastOutputAsHex(long paramLong, CkCharset paramCkCharset);
/*       */   
/*       */   public static final native void CkCharset_get_LastOutputAsQP(long paramLong1, CkCharset paramCkCharset, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCharset_lastOutputAsQP(long paramLong, CkCharset paramCkCharset);
/*       */   
/*       */   public static final native boolean CkCharset_get_SaveLast(long paramLong, CkCharset paramCkCharset);
/*       */   
/*       */   public static final native void CkCharset_put_SaveLast(long paramLong, CkCharset paramCkCharset, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkCharset_get_ToCharset(long paramLong1, CkCharset paramCkCharset, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCharset_toCharset(long paramLong, CkCharset paramCkCharset);
/*       */   
/*       */   public static final native void CkCharset_put_ToCharset(long paramLong, CkCharset paramCkCharset, String paramString);
/*       */   
/*       */   public static final native boolean CkCharset_get_VerboseLogging(long paramLong, CkCharset paramCkCharset);
/*       */   
/*       */   public static final native void CkCharset_put_VerboseLogging(long paramLong, CkCharset paramCkCharset, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkCharset_get_Version(long paramLong1, CkCharset paramCkCharset, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCharset_version(long paramLong, CkCharset paramCkCharset);
/*       */   
/*       */   public static final native int CkCharset_CharsetToCodePage(long paramLong, CkCharset paramCkCharset, String paramString);
/*       */   
/*       */   public static final native boolean CkCharset_CodePageToCharset(long paramLong1, CkCharset paramCkCharset, int paramInt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCharset_codePageToCharset(long paramLong, CkCharset paramCkCharset, int paramInt);
/*       */   
/*       */   public static final native boolean CkCharset_ConvertData(long paramLong1, CkCharset paramCkCharset, long paramLong2, CkByteData paramCkByteData1, long paramLong3, CkByteData paramCkByteData2);
/*       */   
/*       */   public static final native boolean CkCharset_ConvertFile(long paramLong, CkCharset paramCkCharset, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkCharset_ConvertFileNoPreamble(long paramLong, CkCharset paramCkCharset, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkCharset_ConvertFromUnicode(long paramLong1, CkCharset paramCkCharset, String paramString, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkCharset_ConvertFromUtf16(long paramLong1, CkCharset paramCkCharset, long paramLong2, CkByteData paramCkByteData1, long paramLong3, CkByteData paramCkByteData2);
/*       */   
/*       */   public static final native boolean CkCharset_ConvertHtml(long paramLong1, CkCharset paramCkCharset, long paramLong2, CkByteData paramCkByteData1, long paramLong3, CkByteData paramCkByteData2);
/*       */   
/*       */   public static final native boolean CkCharset_ConvertHtmlFile(long paramLong, CkCharset paramCkCharset, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkCharset_ConvertToUnicode(long paramLong1, CkCharset paramCkCharset, long paramLong2, CkByteData paramCkByteData, long paramLong3, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCharset_convertToUnicode(long paramLong1, CkCharset paramCkCharset, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkCharset_ConvertToUtf16(long paramLong1, CkCharset paramCkCharset, long paramLong2, CkByteData paramCkByteData1, long paramLong3, CkByteData paramCkByteData2);
/*       */   
/*       */   public static final native boolean CkCharset_EntityEncodeDec(long paramLong1, CkCharset paramCkCharset, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCharset_entityEncodeDec(long paramLong, CkCharset paramCkCharset, String paramString);
/*       */   
/*       */   public static final native boolean CkCharset_EntityEncodeHex(long paramLong1, CkCharset paramCkCharset, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCharset_entityEncodeHex(long paramLong, CkCharset paramCkCharset, String paramString);
/*       */   
/*       */   public static final native boolean CkCharset_GetHtmlCharset(long paramLong1, CkCharset paramCkCharset, long paramLong2, CkByteData paramCkByteData, long paramLong3, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCharset_getHtmlCharset(long paramLong1, CkCharset paramCkCharset, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native String CkCharset_htmlCharset(long paramLong1, CkCharset paramCkCharset, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkCharset_GetHtmlFileCharset(long paramLong1, CkCharset paramCkCharset, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCharset_getHtmlFileCharset(long paramLong, CkCharset paramCkCharset, String paramString);
/*       */   
/*       */   public static final native String CkCharset_htmlFileCharset(long paramLong, CkCharset paramCkCharset, String paramString);
/*       */   
/*       */   public static final native boolean CkCharset_HtmlDecodeToStr(long paramLong1, CkCharset paramCkCharset, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCharset_htmlDecodeToStr(long paramLong, CkCharset paramCkCharset, String paramString);
/*       */   
/*       */   public static final native boolean CkCharset_HtmlEntityDecode(long paramLong1, CkCharset paramCkCharset, long paramLong2, CkByteData paramCkByteData1, long paramLong3, CkByteData paramCkByteData2);
/*       */   
/*       */   public static final native boolean CkCharset_HtmlEntityDecodeFile(long paramLong, CkCharset paramCkCharset, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkCharset_IsUnlocked(long paramLong, CkCharset paramCkCharset);
/*       */   
/*       */   public static final native boolean CkCharset_LowerCase(long paramLong1, CkCharset paramCkCharset, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCharset_lowerCase(long paramLong, CkCharset paramCkCharset, String paramString);
/*       */   
/*       */   public static final native boolean CkCharset_ReadFile(long paramLong1, CkCharset paramCkCharset, String paramString, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkCharset_ReadFileToString(long paramLong1, CkCharset paramCkCharset, String paramString1, String paramString2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCharset_readFileToString(long paramLong, CkCharset paramCkCharset, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkCharset_SaveLastError(long paramLong, CkCharset paramCkCharset, String paramString);
/*       */   
/*       */   public static final native void CkCharset_SetErrorBytes(long paramLong1, CkCharset paramCkCharset, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native void CkCharset_SetErrorString(long paramLong, CkCharset paramCkCharset, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkCharset_UnlockComponent(long paramLong, CkCharset paramCkCharset, String paramString);
/*       */   
/*       */   public static final native boolean CkCharset_UpperCase(long paramLong1, CkCharset paramCkCharset, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCharset_upperCase(long paramLong, CkCharset paramCkCharset, String paramString);
/*       */   
/*       */   public static final native boolean CkCharset_UrlDecodeStr(long paramLong1, CkCharset paramCkCharset, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCharset_urlDecodeStr(long paramLong, CkCharset paramCkCharset, String paramString);
/*       */   
/*       */   public static final native boolean CkCharset_VerifyData(long paramLong1, CkCharset paramCkCharset, String paramString, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkCharset_VerifyFile(long paramLong, CkCharset paramCkCharset, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkCharset_WriteFile(long paramLong1, CkCharset paramCkCharset, String paramString, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkCharset_WriteStringToFile(long paramLong, CkCharset paramCkCharset, String paramString1, String paramString2, String paramString3);
/*       */   
/*       */   public static final native long new_CkCompression();
/*       */   
/*       */   public static final native void delete_CkCompression(long paramLong);
/*       */   
/*       */   public static final native void CkCompression_LastErrorXml(long paramLong1, CkCompression paramCkCompression, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkCompression_LastErrorHtml(long paramLong1, CkCompression paramCkCompression, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkCompression_LastErrorText(long paramLong1, CkCompression paramCkCompression, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkCompression_put_EventCallbackObject(long paramLong1, CkCompression paramCkCompression, long paramLong2, CkBaseProgress paramCkBaseProgress);
/*       */   
/*       */   public static final native void CkCompression_get_Algorithm(long paramLong1, CkCompression paramCkCompression, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCompression_algorithm(long paramLong, CkCompression paramCkCompression);
/*       */   
/*       */   public static final native void CkCompression_put_Algorithm(long paramLong, CkCompression paramCkCompression, String paramString);
/*       */   
/*       */   public static final native void CkCompression_get_Charset(long paramLong1, CkCompression paramCkCompression, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCompression_charset(long paramLong, CkCompression paramCkCompression);
/*       */   
/*       */   public static final native void CkCompression_put_Charset(long paramLong, CkCompression paramCkCompression, String paramString);
/*       */   
/*       */   public static final native void CkCompression_get_DebugLogFilePath(long paramLong1, CkCompression paramCkCompression, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCompression_debugLogFilePath(long paramLong, CkCompression paramCkCompression);
/*       */   
/*       */   public static final native void CkCompression_put_DebugLogFilePath(long paramLong, CkCompression paramCkCompression, String paramString);
/*       */   
/*       */   public static final native int CkCompression_get_DeflateLevel(long paramLong, CkCompression paramCkCompression);
/*       */   
/*       */   public static final native void CkCompression_put_DeflateLevel(long paramLong, CkCompression paramCkCompression, int paramInt);
/*       */   
/*       */   public static final native void CkCompression_get_EncodingMode(long paramLong1, CkCompression paramCkCompression, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCompression_encodingMode(long paramLong, CkCompression paramCkCompression);
/*       */   
/*       */   public static final native void CkCompression_put_EncodingMode(long paramLong, CkCompression paramCkCompression, String paramString);
/*       */   
/*       */   public static final native int CkCompression_get_HeartbeatMs(long paramLong, CkCompression paramCkCompression);
/*       */   
/*       */   public static final native void CkCompression_put_HeartbeatMs(long paramLong, CkCompression paramCkCompression, int paramInt);
/*       */   
/*       */   public static final native void CkCompression_get_LastErrorHtml(long paramLong1, CkCompression paramCkCompression, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCompression_lastErrorHtml(long paramLong, CkCompression paramCkCompression);
/*       */   
/*       */   public static final native void CkCompression_get_LastErrorText(long paramLong1, CkCompression paramCkCompression, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCompression_lastErrorText(long paramLong, CkCompression paramCkCompression);
/*       */   
/*       */   public static final native void CkCompression_get_LastErrorXml(long paramLong1, CkCompression paramCkCompression, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCompression_lastErrorXml(long paramLong, CkCompression paramCkCompression);
/*       */   
/*       */   public static final native boolean CkCompression_get_LastMethodSuccess(long paramLong, CkCompression paramCkCompression);
/*       */   
/*       */   public static final native void CkCompression_put_LastMethodSuccess(long paramLong, CkCompression paramCkCompression, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkCompression_get_VerboseLogging(long paramLong, CkCompression paramCkCompression);
/*       */   
/*       */   public static final native void CkCompression_put_VerboseLogging(long paramLong, CkCompression paramCkCompression, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkCompression_get_Version(long paramLong1, CkCompression paramCkCompression, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCompression_version(long paramLong, CkCompression paramCkCompression);
/*       */   
/*       */   public static final native boolean CkCompression_BeginCompressBytes(long paramLong1, CkCompression paramCkCompression, long paramLong2, CkByteData paramCkByteData1, long paramLong3, CkByteData paramCkByteData2);
/*       */   
/*       */   public static final native long CkCompression_BeginCompressBytesAsync(long paramLong1, CkCompression paramCkCompression, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkCompression_BeginCompressBytesENC(long paramLong1, CkCompression paramCkCompression, long paramLong2, CkByteData paramCkByteData, long paramLong3, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCompression_beginCompressBytesENC(long paramLong1, CkCompression paramCkCompression, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native long CkCompression_BeginCompressBytesENCAsync(long paramLong1, CkCompression paramCkCompression, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkCompression_BeginCompressString(long paramLong1, CkCompression paramCkCompression, String paramString, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native long CkCompression_BeginCompressStringAsync(long paramLong, CkCompression paramCkCompression, String paramString);
/*       */   
/*       */   public static final native boolean CkCompression_BeginCompressStringENC(long paramLong1, CkCompression paramCkCompression, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCompression_beginCompressStringENC(long paramLong, CkCompression paramCkCompression, String paramString);
/*       */   
/*       */   public static final native long CkCompression_BeginCompressStringENCAsync(long paramLong, CkCompression paramCkCompression, String paramString);
/*       */   
/*       */   public static final native boolean CkCompression_BeginDecompressBytes(long paramLong1, CkCompression paramCkCompression, long paramLong2, CkByteData paramCkByteData1, long paramLong3, CkByteData paramCkByteData2);
/*       */   
/*       */   public static final native long CkCompression_BeginDecompressBytesAsync(long paramLong1, CkCompression paramCkCompression, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkCompression_BeginDecompressBytesENC(long paramLong1, CkCompression paramCkCompression, String paramString, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native long CkCompression_BeginDecompressBytesENCAsync(long paramLong, CkCompression paramCkCompression, String paramString);
/*       */   
/*       */   public static final native boolean CkCompression_BeginDecompressString(long paramLong1, CkCompression paramCkCompression, long paramLong2, CkByteData paramCkByteData, long paramLong3, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCompression_beginDecompressString(long paramLong1, CkCompression paramCkCompression, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native long CkCompression_BeginDecompressStringAsync(long paramLong1, CkCompression paramCkCompression, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkCompression_BeginDecompressStringENC(long paramLong1, CkCompression paramCkCompression, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCompression_beginDecompressStringENC(long paramLong, CkCompression paramCkCompression, String paramString);
/*       */   
/*       */   public static final native long CkCompression_BeginDecompressStringENCAsync(long paramLong, CkCompression paramCkCompression, String paramString);
/*       */   
/*       */   public static final native boolean CkCompression_CompressBd(long paramLong1, CkCompression paramCkCompression, long paramLong2, CkBinData paramCkBinData);
/*       */   
/*       */   public static final native long CkCompression_CompressBdAsync(long paramLong1, CkCompression paramCkCompression, long paramLong2, CkBinData paramCkBinData);
/*       */   
/*       */   public static final native boolean CkCompression_CompressBytes(long paramLong1, CkCompression paramCkCompression, long paramLong2, CkByteData paramCkByteData1, long paramLong3, CkByteData paramCkByteData2);
/*       */   
/*       */   public static final native long CkCompression_CompressBytesAsync(long paramLong1, CkCompression paramCkCompression, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkCompression_CompressBytesENC(long paramLong1, CkCompression paramCkCompression, long paramLong2, CkByteData paramCkByteData, long paramLong3, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCompression_compressBytesENC(long paramLong1, CkCompression paramCkCompression, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native long CkCompression_CompressBytesENCAsync(long paramLong1, CkCompression paramCkCompression, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkCompression_CompressFile(long paramLong, CkCompression paramCkCompression, String paramString1, String paramString2);
/*       */   
/*       */   public static final native long CkCompression_CompressFileAsync(long paramLong, CkCompression paramCkCompression, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkCompression_CompressSb(long paramLong1, CkCompression paramCkCompression, long paramLong2, CkStringBuilder paramCkStringBuilder, long paramLong3, CkBinData paramCkBinData);
/*       */   
/*       */   public static final native long CkCompression_CompressSbAsync(long paramLong1, CkCompression paramCkCompression, long paramLong2, CkStringBuilder paramCkStringBuilder, long paramLong3, CkBinData paramCkBinData);
/*       */   
/*       */   public static final native boolean CkCompression_CompressStream(long paramLong1, CkCompression paramCkCompression, long paramLong2, CkStream paramCkStream);
/*       */   
/*       */   public static final native long CkCompression_CompressStreamAsync(long paramLong1, CkCompression paramCkCompression, long paramLong2, CkStream paramCkStream);
/*       */   
/*       */   public static final native boolean CkCompression_CompressString(long paramLong1, CkCompression paramCkCompression, String paramString, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native long CkCompression_CompressStringAsync(long paramLong, CkCompression paramCkCompression, String paramString);
/*       */   
/*       */   public static final native boolean CkCompression_CompressStringENC(long paramLong1, CkCompression paramCkCompression, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCompression_compressStringENC(long paramLong, CkCompression paramCkCompression, String paramString);
/*       */   
/*       */   public static final native long CkCompression_CompressStringENCAsync(long paramLong, CkCompression paramCkCompression, String paramString);
/*       */   
/*       */   public static final native boolean CkCompression_DecompressBd(long paramLong1, CkCompression paramCkCompression, long paramLong2, CkBinData paramCkBinData);
/*       */   
/*       */   public static final native long CkCompression_DecompressBdAsync(long paramLong1, CkCompression paramCkCompression, long paramLong2, CkBinData paramCkBinData);
/*       */   
/*       */   public static final native boolean CkCompression_DecompressBytes(long paramLong1, CkCompression paramCkCompression, long paramLong2, CkByteData paramCkByteData1, long paramLong3, CkByteData paramCkByteData2);
/*       */   
/*       */   public static final native long CkCompression_DecompressBytesAsync(long paramLong1, CkCompression paramCkCompression, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkCompression_DecompressBytesENC(long paramLong1, CkCompression paramCkCompression, String paramString, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native long CkCompression_DecompressBytesENCAsync(long paramLong, CkCompression paramCkCompression, String paramString);
/*       */   
/*       */   public static final native boolean CkCompression_DecompressFile(long paramLong, CkCompression paramCkCompression, String paramString1, String paramString2);
/*       */   
/*       */   public static final native long CkCompression_DecompressFileAsync(long paramLong, CkCompression paramCkCompression, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkCompression_DecompressSb(long paramLong1, CkCompression paramCkCompression, long paramLong2, CkBinData paramCkBinData, long paramLong3, CkStringBuilder paramCkStringBuilder);
/*       */   
/*       */   public static final native long CkCompression_DecompressSbAsync(long paramLong1, CkCompression paramCkCompression, long paramLong2, CkBinData paramCkBinData, long paramLong3, CkStringBuilder paramCkStringBuilder);
/*       */   
/*       */   public static final native boolean CkCompression_DecompressStream(long paramLong1, CkCompression paramCkCompression, long paramLong2, CkStream paramCkStream);
/*       */   
/*       */   public static final native long CkCompression_DecompressStreamAsync(long paramLong1, CkCompression paramCkCompression, long paramLong2, CkStream paramCkStream);
/*       */   
/*       */   public static final native boolean CkCompression_DecompressString(long paramLong1, CkCompression paramCkCompression, long paramLong2, CkByteData paramCkByteData, long paramLong3, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCompression_decompressString(long paramLong1, CkCompression paramCkCompression, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native long CkCompression_DecompressStringAsync(long paramLong1, CkCompression paramCkCompression, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkCompression_DecompressStringENC(long paramLong1, CkCompression paramCkCompression, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCompression_decompressStringENC(long paramLong, CkCompression paramCkCompression, String paramString);
/*       */   
/*       */   public static final native long CkCompression_DecompressStringENCAsync(long paramLong, CkCompression paramCkCompression, String paramString);
/*       */   
/*       */   public static final native boolean CkCompression_EndCompressBytes(long paramLong1, CkCompression paramCkCompression, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native long CkCompression_EndCompressBytesAsync(long paramLong, CkCompression paramCkCompression);
/*       */   
/*       */   public static final native boolean CkCompression_EndCompressBytesENC(long paramLong1, CkCompression paramCkCompression, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCompression_endCompressBytesENC(long paramLong, CkCompression paramCkCompression);
/*       */   
/*       */   public static final native long CkCompression_EndCompressBytesENCAsync(long paramLong, CkCompression paramCkCompression);
/*       */   
/*       */   public static final native boolean CkCompression_EndCompressString(long paramLong1, CkCompression paramCkCompression, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native long CkCompression_EndCompressStringAsync(long paramLong, CkCompression paramCkCompression);
/*       */   
/*       */   public static final native boolean CkCompression_EndCompressStringENC(long paramLong1, CkCompression paramCkCompression, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCompression_endCompressStringENC(long paramLong, CkCompression paramCkCompression);
/*       */   
/*       */   public static final native long CkCompression_EndCompressStringENCAsync(long paramLong, CkCompression paramCkCompression);
/*       */   
/*       */   public static final native boolean CkCompression_EndDecompressBytes(long paramLong1, CkCompression paramCkCompression, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native long CkCompression_EndDecompressBytesAsync(long paramLong, CkCompression paramCkCompression);
/*       */   
/*       */   public static final native boolean CkCompression_EndDecompressBytesENC(long paramLong1, CkCompression paramCkCompression, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native long CkCompression_EndDecompressBytesENCAsync(long paramLong, CkCompression paramCkCompression);
/*       */   
/*       */   public static final native boolean CkCompression_EndDecompressString(long paramLong1, CkCompression paramCkCompression, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCompression_endDecompressString(long paramLong, CkCompression paramCkCompression);
/*       */   
/*       */   public static final native long CkCompression_EndDecompressStringAsync(long paramLong, CkCompression paramCkCompression);
/*       */   
/*       */   public static final native boolean CkCompression_EndDecompressStringENC(long paramLong1, CkCompression paramCkCompression, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCompression_endDecompressStringENC(long paramLong, CkCompression paramCkCompression);
/*       */   
/*       */   public static final native long CkCompression_EndDecompressStringENCAsync(long paramLong, CkCompression paramCkCompression);
/*       */   
/*       */   public static final native boolean CkCompression_MoreCompressBytes(long paramLong1, CkCompression paramCkCompression, long paramLong2, CkByteData paramCkByteData1, long paramLong3, CkByteData paramCkByteData2);
/*       */   
/*       */   public static final native long CkCompression_MoreCompressBytesAsync(long paramLong1, CkCompression paramCkCompression, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkCompression_MoreCompressBytesENC(long paramLong1, CkCompression paramCkCompression, long paramLong2, CkByteData paramCkByteData, long paramLong3, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCompression_moreCompressBytesENC(long paramLong1, CkCompression paramCkCompression, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native long CkCompression_MoreCompressBytesENCAsync(long paramLong1, CkCompression paramCkCompression, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkCompression_MoreCompressString(long paramLong1, CkCompression paramCkCompression, String paramString, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native long CkCompression_MoreCompressStringAsync(long paramLong, CkCompression paramCkCompression, String paramString);
/*       */   
/*       */   public static final native boolean CkCompression_MoreCompressStringENC(long paramLong1, CkCompression paramCkCompression, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCompression_moreCompressStringENC(long paramLong, CkCompression paramCkCompression, String paramString);
/*       */   
/*       */   public static final native long CkCompression_MoreCompressStringENCAsync(long paramLong, CkCompression paramCkCompression, String paramString);
/*       */   
/*       */   public static final native boolean CkCompression_MoreDecompressBytes(long paramLong1, CkCompression paramCkCompression, long paramLong2, CkByteData paramCkByteData1, long paramLong3, CkByteData paramCkByteData2);
/*       */   
/*       */   public static final native long CkCompression_MoreDecompressBytesAsync(long paramLong1, CkCompression paramCkCompression, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkCompression_MoreDecompressBytesENC(long paramLong1, CkCompression paramCkCompression, String paramString, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native long CkCompression_MoreDecompressBytesENCAsync(long paramLong, CkCompression paramCkCompression, String paramString);
/*       */   
/*       */   public static final native boolean CkCompression_MoreDecompressString(long paramLong1, CkCompression paramCkCompression, long paramLong2, CkByteData paramCkByteData, long paramLong3, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCompression_moreDecompressString(long paramLong1, CkCompression paramCkCompression, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native long CkCompression_MoreDecompressStringAsync(long paramLong1, CkCompression paramCkCompression, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkCompression_MoreDecompressStringENC(long paramLong1, CkCompression paramCkCompression, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCompression_moreDecompressStringENC(long paramLong, CkCompression paramCkCompression, String paramString);
/*       */   
/*       */   public static final native long CkCompression_MoreDecompressStringENCAsync(long paramLong, CkCompression paramCkCompression, String paramString);
/*       */   
/*       */   public static final native boolean CkCompression_SaveLastError(long paramLong, CkCompression paramCkCompression, String paramString);
/*       */   
/*       */   public static final native boolean CkCompression_UnlockComponent(long paramLong, CkCompression paramCkCompression, String paramString);
/*       */   
/*       */   public static final native long new_CkCrypt2();
/*       */   
/*       */   public static final native void delete_CkCrypt2(long paramLong);
/*       */   
/*       */   public static final native void CkCrypt2_LastErrorXml(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkCrypt2_LastErrorHtml(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkCrypt2_LastErrorText(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkCrypt2_put_EventCallbackObject(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkBaseProgress paramCkBaseProgress);
/*       */   
/*       */   public static final native boolean CkCrypt2_get_AbortCurrent(long paramLong, CkCrypt2 paramCkCrypt2);
/*       */   
/*       */   public static final native void CkCrypt2_put_AbortCurrent(long paramLong, CkCrypt2 paramCkCrypt2, boolean paramBoolean);
/*       */   
/*       */   public static final native int CkCrypt2_get_BCryptWorkFactor(long paramLong, CkCrypt2 paramCkCrypt2);
/*       */   
/*       */   public static final native void CkCrypt2_put_BCryptWorkFactor(long paramLong, CkCrypt2 paramCkCrypt2, int paramInt);
/*       */   
/*       */   public static final native int CkCrypt2_get_BlockSize(long paramLong, CkCrypt2 paramCkCrypt2);
/*       */   
/*       */   public static final native boolean CkCrypt2_get_CadesEnabled(long paramLong, CkCrypt2 paramCkCrypt2);
/*       */   
/*       */   public static final native void CkCrypt2_put_CadesEnabled(long paramLong, CkCrypt2 paramCkCrypt2, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkCrypt2_get_CadesSigPolicyHash(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCrypt2_cadesSigPolicyHash(long paramLong, CkCrypt2 paramCkCrypt2);
/*       */   
/*       */   public static final native void CkCrypt2_put_CadesSigPolicyHash(long paramLong, CkCrypt2 paramCkCrypt2, String paramString);
/*       */   
/*       */   public static final native void CkCrypt2_get_CadesSigPolicyId(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCrypt2_cadesSigPolicyId(long paramLong, CkCrypt2 paramCkCrypt2);
/*       */   
/*       */   public static final native void CkCrypt2_put_CadesSigPolicyId(long paramLong, CkCrypt2 paramCkCrypt2, String paramString);
/*       */   
/*       */   public static final native void CkCrypt2_get_CadesSigPolicyUri(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCrypt2_cadesSigPolicyUri(long paramLong, CkCrypt2 paramCkCrypt2);
/*       */   
/*       */   public static final native void CkCrypt2_put_CadesSigPolicyUri(long paramLong, CkCrypt2 paramCkCrypt2, String paramString);
/*       */   
/*       */   public static final native void CkCrypt2_get_Charset(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCrypt2_charset(long paramLong, CkCrypt2 paramCkCrypt2);
/*       */   
/*       */   public static final native void CkCrypt2_put_Charset(long paramLong, CkCrypt2 paramCkCrypt2, String paramString);
/*       */   
/*       */   public static final native void CkCrypt2_get_CipherMode(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCrypt2_cipherMode(long paramLong, CkCrypt2 paramCkCrypt2);
/*       */   
/*       */   public static final native void CkCrypt2_put_CipherMode(long paramLong, CkCrypt2 paramCkCrypt2, String paramString);
/*       */   
/*       */   public static final native void CkCrypt2_get_CompressionAlgorithm(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCrypt2_compressionAlgorithm(long paramLong, CkCrypt2 paramCkCrypt2);
/*       */   
/*       */   public static final native void CkCrypt2_put_CompressionAlgorithm(long paramLong, CkCrypt2 paramCkCrypt2, String paramString);
/*       */   
/*       */   public static final native void CkCrypt2_get_CryptAlgorithm(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCrypt2_cryptAlgorithm(long paramLong, CkCrypt2 paramCkCrypt2);
/*       */   
/*       */   public static final native void CkCrypt2_put_CryptAlgorithm(long paramLong, CkCrypt2 paramCkCrypt2, String paramString);
/*       */   
/*       */   public static final native void CkCrypt2_get_DebugLogFilePath(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCrypt2_debugLogFilePath(long paramLong, CkCrypt2 paramCkCrypt2);
/*       */   
/*       */   public static final native void CkCrypt2_put_DebugLogFilePath(long paramLong, CkCrypt2 paramCkCrypt2, String paramString);
/*       */   
/*       */   public static final native void CkCrypt2_get_EncodingMode(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCrypt2_encodingMode(long paramLong, CkCrypt2 paramCkCrypt2);
/*       */   
/*       */   public static final native void CkCrypt2_put_EncodingMode(long paramLong, CkCrypt2 paramCkCrypt2, String paramString);
/*       */   
/*       */   public static final native boolean CkCrypt2_get_FirstChunk(long paramLong, CkCrypt2 paramCkCrypt2);
/*       */   
/*       */   public static final native void CkCrypt2_put_FirstChunk(long paramLong, CkCrypt2 paramCkCrypt2, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkCrypt2_get_HashAlgorithm(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCrypt2_hashAlgorithm(long paramLong, CkCrypt2 paramCkCrypt2);
/*       */   
/*       */   public static final native void CkCrypt2_put_HashAlgorithm(long paramLong, CkCrypt2 paramCkCrypt2, String paramString);
/*       */   
/*       */   public static final native int CkCrypt2_get_HavalRounds(long paramLong, CkCrypt2 paramCkCrypt2);
/*       */   
/*       */   public static final native void CkCrypt2_put_HavalRounds(long paramLong, CkCrypt2 paramCkCrypt2, int paramInt);
/*       */   
/*       */   public static final native int CkCrypt2_get_HeartbeatMs(long paramLong, CkCrypt2 paramCkCrypt2);
/*       */   
/*       */   public static final native void CkCrypt2_put_HeartbeatMs(long paramLong, CkCrypt2 paramCkCrypt2, int paramInt);
/*       */   
/*       */   public static final native boolean CkCrypt2_get_IncludeCertChain(long paramLong, CkCrypt2 paramCkCrypt2);
/*       */   
/*       */   public static final native void CkCrypt2_put_IncludeCertChain(long paramLong, CkCrypt2 paramCkCrypt2, boolean paramBoolean);
/*       */   
/*       */   public static final native int CkCrypt2_get_InitialCount(long paramLong, CkCrypt2 paramCkCrypt2);
/*       */   
/*       */   public static final native void CkCrypt2_put_InitialCount(long paramLong, CkCrypt2 paramCkCrypt2, int paramInt);
/*       */   
/*       */   public static final native int CkCrypt2_get_IterationCount(long paramLong, CkCrypt2 paramCkCrypt2);
/*       */   
/*       */   public static final native void CkCrypt2_put_IterationCount(long paramLong, CkCrypt2 paramCkCrypt2, int paramInt);
/*       */   
/*       */   public static final native void CkCrypt2_get_IV(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native void CkCrypt2_put_IV(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native int CkCrypt2_get_KeyLength(long paramLong, CkCrypt2 paramCkCrypt2);
/*       */   
/*       */   public static final native void CkCrypt2_put_KeyLength(long paramLong, CkCrypt2 paramCkCrypt2, int paramInt);
/*       */   
/*       */   public static final native boolean CkCrypt2_get_LastChunk(long paramLong, CkCrypt2 paramCkCrypt2);
/*       */   
/*       */   public static final native void CkCrypt2_put_LastChunk(long paramLong, CkCrypt2 paramCkCrypt2, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkCrypt2_get_LastErrorHtml(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCrypt2_lastErrorHtml(long paramLong, CkCrypt2 paramCkCrypt2);
/*       */   
/*       */   public static final native void CkCrypt2_get_LastErrorText(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCrypt2_lastErrorText(long paramLong, CkCrypt2 paramCkCrypt2);
/*       */   
/*       */   public static final native void CkCrypt2_get_LastErrorXml(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCrypt2_lastErrorXml(long paramLong, CkCrypt2 paramCkCrypt2);
/*       */   
/*       */   public static final native boolean CkCrypt2_get_LastMethodSuccess(long paramLong, CkCrypt2 paramCkCrypt2);
/*       */   
/*       */   public static final native void CkCrypt2_put_LastMethodSuccess(long paramLong, CkCrypt2 paramCkCrypt2, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkCrypt2_get_MacAlgorithm(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCrypt2_macAlgorithm(long paramLong, CkCrypt2 paramCkCrypt2);
/*       */   
/*       */   public static final native void CkCrypt2_put_MacAlgorithm(long paramLong, CkCrypt2 paramCkCrypt2, String paramString);
/*       */   
/*       */   public static final native int CkCrypt2_get_NumSignerCerts(long paramLong, CkCrypt2 paramCkCrypt2);
/*       */   
/*       */   public static final native void CkCrypt2_get_OaepHash(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCrypt2_oaepHash(long paramLong, CkCrypt2 paramCkCrypt2);
/*       */   
/*       */   public static final native void CkCrypt2_put_OaepHash(long paramLong, CkCrypt2 paramCkCrypt2, String paramString);
/*       */   
/*       */   public static final native void CkCrypt2_get_OaepMgfHash(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCrypt2_oaepMgfHash(long paramLong, CkCrypt2 paramCkCrypt2);
/*       */   
/*       */   public static final native void CkCrypt2_put_OaepMgfHash(long paramLong, CkCrypt2 paramCkCrypt2, String paramString);
/*       */   
/*       */   public static final native boolean CkCrypt2_get_OaepPadding(long paramLong, CkCrypt2 paramCkCrypt2);
/*       */   
/*       */   public static final native void CkCrypt2_put_OaepPadding(long paramLong, CkCrypt2 paramCkCrypt2, boolean paramBoolean);
/*       */   
/*       */   public static final native int CkCrypt2_get_PaddingScheme(long paramLong, CkCrypt2 paramCkCrypt2);
/*       */   
/*       */   public static final native void CkCrypt2_put_PaddingScheme(long paramLong, CkCrypt2 paramCkCrypt2, int paramInt);
/*       */   
/*       */   public static final native void CkCrypt2_get_PbesAlgorithm(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCrypt2_pbesAlgorithm(long paramLong, CkCrypt2 paramCkCrypt2);
/*       */   
/*       */   public static final native void CkCrypt2_put_PbesAlgorithm(long paramLong, CkCrypt2 paramCkCrypt2, String paramString);
/*       */   
/*       */   public static final native void CkCrypt2_get_PbesPassword(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCrypt2_pbesPassword(long paramLong, CkCrypt2 paramCkCrypt2);
/*       */   
/*       */   public static final native void CkCrypt2_put_PbesPassword(long paramLong, CkCrypt2 paramCkCrypt2, String paramString);
/*       */   
/*       */   public static final native void CkCrypt2_get_Pkcs7CryptAlg(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCrypt2_pkcs7CryptAlg(long paramLong, CkCrypt2 paramCkCrypt2);
/*       */   
/*       */   public static final native void CkCrypt2_put_Pkcs7CryptAlg(long paramLong, CkCrypt2 paramCkCrypt2, String paramString);
/*       */   
/*       */   public static final native int CkCrypt2_get_Rc2EffectiveKeyLength(long paramLong, CkCrypt2 paramCkCrypt2);
/*       */   
/*       */   public static final native void CkCrypt2_put_Rc2EffectiveKeyLength(long paramLong, CkCrypt2 paramCkCrypt2, int paramInt);
/*       */   
/*       */   public static final native void CkCrypt2_get_Salt(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native void CkCrypt2_put_Salt(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native void CkCrypt2_get_SecretKey(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native void CkCrypt2_put_SecretKey(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native void CkCrypt2_get_SigningAlg(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCrypt2_signingAlg(long paramLong, CkCrypt2 paramCkCrypt2);
/*       */   
/*       */   public static final native void CkCrypt2_put_SigningAlg(long paramLong, CkCrypt2 paramCkCrypt2, String paramString);
/*       */   
/*       */   public static final native void CkCrypt2_get_SigningAttributes(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCrypt2_signingAttributes(long paramLong, CkCrypt2 paramCkCrypt2);
/*       */   
/*       */   public static final native void CkCrypt2_put_SigningAttributes(long paramLong, CkCrypt2 paramCkCrypt2, String paramString);
/*       */   
/*       */   public static final native void CkCrypt2_get_UuFilename(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCrypt2_uuFilename(long paramLong, CkCrypt2 paramCkCrypt2);
/*       */   
/*       */   public static final native void CkCrypt2_put_UuFilename(long paramLong, CkCrypt2 paramCkCrypt2, String paramString);
/*       */   
/*       */   public static final native void CkCrypt2_get_UuMode(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCrypt2_uuMode(long paramLong, CkCrypt2 paramCkCrypt2);
/*       */   
/*       */   public static final native void CkCrypt2_put_UuMode(long paramLong, CkCrypt2 paramCkCrypt2, String paramString);
/*       */   
/*       */   public static final native boolean CkCrypt2_get_VerboseLogging(long paramLong, CkCrypt2 paramCkCrypt2);
/*       */   
/*       */   public static final native void CkCrypt2_put_VerboseLogging(long paramLong, CkCrypt2 paramCkCrypt2, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkCrypt2_get_Version(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCrypt2_version(long paramLong, CkCrypt2 paramCkCrypt2);
/*       */   
/*       */   public static final native void CkCrypt2_AddEncryptCert(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkCert paramCkCert);
/*       */   
/*       */   public static final native boolean CkCrypt2_AddPfxSourceData(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkByteData paramCkByteData, String paramString);
/*       */   
/*       */   public static final native boolean CkCrypt2_AddPfxSourceFile(long paramLong, CkCrypt2 paramCkCrypt2, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkCrypt2_AesKeyUnwrap(long paramLong1, CkCrypt2 paramCkCrypt2, String paramString1, String paramString2, String paramString3, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCrypt2_aesKeyUnwrap(long paramLong, CkCrypt2 paramCkCrypt2, String paramString1, String paramString2, String paramString3);
/*       */   
/*       */   public static final native boolean CkCrypt2_AesKeyWrap(long paramLong1, CkCrypt2 paramCkCrypt2, String paramString1, String paramString2, String paramString3, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCrypt2_aesKeyWrap(long paramLong, CkCrypt2 paramCkCrypt2, String paramString1, String paramString2, String paramString3);
/*       */   
/*       */   public static final native boolean CkCrypt2_BCryptHash(long paramLong1, CkCrypt2 paramCkCrypt2, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCrypt2_bCryptHash(long paramLong, CkCrypt2 paramCkCrypt2, String paramString);
/*       */   
/*       */   public static final native boolean CkCrypt2_BCryptVerify(long paramLong, CkCrypt2 paramCkCrypt2, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkCrypt2_BytesToString(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkByteData paramCkByteData, String paramString, long paramLong3, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCrypt2_bytesToString(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkByteData paramCkByteData, String paramString);
/*       */   
/*       */   public static final native boolean CkCrypt2_ByteSwap4321(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkByteData paramCkByteData1, long paramLong3, CkByteData paramCkByteData2);
/*       */   
/*       */   public static final native boolean CkCrypt2_CkDecryptFile(long paramLong, CkCrypt2 paramCkCrypt2, String paramString1, String paramString2);
/*       */   
/*       */   public static final native long CkCrypt2_CkDecryptFileAsync(long paramLong, CkCrypt2 paramCkCrypt2, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkCrypt2_CkEncryptFile(long paramLong, CkCrypt2 paramCkCrypt2, String paramString1, String paramString2);
/*       */   
/*       */   public static final native long CkCrypt2_CkEncryptFileAsync(long paramLong, CkCrypt2 paramCkCrypt2, String paramString1, String paramString2);
/*       */   
/*       */   public static final native void CkCrypt2_ClearEncryptCerts(long paramLong, CkCrypt2 paramCkCrypt2);
/*       */   
/*       */   public static final native boolean CkCrypt2_CompressBytes(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkByteData paramCkByteData1, long paramLong3, CkByteData paramCkByteData2);
/*       */   
/*       */   public static final native boolean CkCrypt2_CompressBytesENC(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkByteData paramCkByteData, long paramLong3, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCrypt2_compressBytesENC(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkCrypt2_CompressString(long paramLong1, CkCrypt2 paramCkCrypt2, String paramString, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkCrypt2_CompressStringENC(long paramLong1, CkCrypt2 paramCkCrypt2, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCrypt2_compressStringENC(long paramLong, CkCrypt2 paramCkCrypt2, String paramString);
/*       */   
/*       */   public static final native long CkCrypt2_CrcBytes(long paramLong1, CkCrypt2 paramCkCrypt2, String paramString, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native long CkCrypt2_CrcFile(long paramLong, CkCrypt2 paramCkCrypt2, String paramString1, String paramString2);
/*       */   
/*       */   public static final native long CkCrypt2_CrcFileAsync(long paramLong, CkCrypt2 paramCkCrypt2, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkCrypt2_CreateDetachedSignature(long paramLong, CkCrypt2 paramCkCrypt2, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkCrypt2_CreateP7M(long paramLong, CkCrypt2 paramCkCrypt2, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkCrypt2_CreateP7S(long paramLong, CkCrypt2 paramCkCrypt2, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkCrypt2_Decode(long paramLong1, CkCrypt2 paramCkCrypt2, String paramString1, String paramString2, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkCrypt2_DecodeString(long paramLong1, CkCrypt2 paramCkCrypt2, String paramString1, String paramString2, String paramString3, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCrypt2_decodeString(long paramLong, CkCrypt2 paramCkCrypt2, String paramString1, String paramString2, String paramString3);
/*       */   
/*       */   public static final native boolean CkCrypt2_DecryptBd(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkBinData paramCkBinData);
/*       */   
/*       */   public static final native boolean CkCrypt2_DecryptBytes(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkByteData paramCkByteData1, long paramLong3, CkByteData paramCkByteData2);
/*       */   
/*       */   public static final native boolean CkCrypt2_DecryptBytesENC(long paramLong1, CkCrypt2 paramCkCrypt2, String paramString, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkCrypt2_DecryptEncoded(long paramLong1, CkCrypt2 paramCkCrypt2, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCrypt2_decryptEncoded(long paramLong, CkCrypt2 paramCkCrypt2, String paramString);
/*       */   
/*       */   public static final native boolean CkCrypt2_DecryptSb(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkBinData paramCkBinData, long paramLong3, CkStringBuilder paramCkStringBuilder);
/*       */   
/*       */   public static final native boolean CkCrypt2_DecryptSecureENC(long paramLong1, CkCrypt2 paramCkCrypt2, String paramString, long paramLong2, CkSecureString paramCkSecureString);
/*       */   
/*       */   public static final native boolean CkCrypt2_DecryptStream(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkStream paramCkStream);
/*       */   
/*       */   public static final native long CkCrypt2_DecryptStreamAsync(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkStream paramCkStream);
/*       */   
/*       */   public static final native boolean CkCrypt2_DecryptString(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkByteData paramCkByteData, long paramLong3, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCrypt2_decryptString(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkCrypt2_DecryptStringENC(long paramLong1, CkCrypt2 paramCkCrypt2, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCrypt2_decryptStringENC(long paramLong, CkCrypt2 paramCkCrypt2, String paramString);
/*       */   
/*       */   public static final native boolean CkCrypt2_Encode(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkByteData paramCkByteData, String paramString, long paramLong3, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCrypt2_encode(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkByteData paramCkByteData, String paramString);
/*       */   
/*       */   public static final native boolean CkCrypt2_EncodeString(long paramLong1, CkCrypt2 paramCkCrypt2, String paramString1, String paramString2, String paramString3, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCrypt2_encodeString(long paramLong, CkCrypt2 paramCkCrypt2, String paramString1, String paramString2, String paramString3);
/*       */   
/*       */   public static final native boolean CkCrypt2_EncryptBd(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkBinData paramCkBinData);
/*       */   
/*       */   public static final native boolean CkCrypt2_EncryptBytes(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkByteData paramCkByteData1, long paramLong3, CkByteData paramCkByteData2);
/*       */   
/*       */   public static final native boolean CkCrypt2_EncryptBytesENC(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkByteData paramCkByteData, long paramLong3, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCrypt2_encryptBytesENC(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkCrypt2_EncryptEncoded(long paramLong1, CkCrypt2 paramCkCrypt2, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCrypt2_encryptEncoded(long paramLong, CkCrypt2 paramCkCrypt2, String paramString);
/*       */   
/*       */   public static final native boolean CkCrypt2_EncryptSb(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkStringBuilder paramCkStringBuilder, long paramLong3, CkBinData paramCkBinData);
/*       */   
/*       */   public static final native boolean CkCrypt2_EncryptSecureENC(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkSecureString paramCkSecureString, long paramLong3, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCrypt2_encryptSecureENC(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkSecureString paramCkSecureString);
/*       */   
/*       */   public static final native boolean CkCrypt2_EncryptStream(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkStream paramCkStream);
/*       */   
/*       */   public static final native long CkCrypt2_EncryptStreamAsync(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkStream paramCkStream);
/*       */   
/*       */   public static final native boolean CkCrypt2_EncryptString(long paramLong1, CkCrypt2 paramCkCrypt2, String paramString, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkCrypt2_EncryptStringENC(long paramLong1, CkCrypt2 paramCkCrypt2, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCrypt2_encryptStringENC(long paramLong, CkCrypt2 paramCkCrypt2, String paramString);
/*       */   
/*       */   public static final native boolean CkCrypt2_GenEncodedSecretKey(long paramLong1, CkCrypt2 paramCkCrypt2, String paramString1, String paramString2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCrypt2_genEncodedSecretKey(long paramLong, CkCrypt2 paramCkCrypt2, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkCrypt2_GenerateSecretKey(long paramLong1, CkCrypt2 paramCkCrypt2, String paramString, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkCrypt2_GenerateUuid(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCrypt2_generateUuid(long paramLong, CkCrypt2 paramCkCrypt2);
/*       */   
/*       */   public static final native boolean CkCrypt2_GenRandomBytesENC(long paramLong1, CkCrypt2 paramCkCrypt2, int paramInt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCrypt2_genRandomBytesENC(long paramLong, CkCrypt2 paramCkCrypt2, int paramInt);
/*       */   
/*       */   public static final native long CkCrypt2_GetDecryptCert(long paramLong, CkCrypt2 paramCkCrypt2);
/*       */   
/*       */   public static final native boolean CkCrypt2_GetEncodedAad(long paramLong1, CkCrypt2 paramCkCrypt2, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCrypt2_getEncodedAad(long paramLong, CkCrypt2 paramCkCrypt2, String paramString);
/*       */   
/*       */   public static final native String CkCrypt2_encodedAad(long paramLong, CkCrypt2 paramCkCrypt2, String paramString);
/*       */   
/*       */   public static final native boolean CkCrypt2_GetEncodedAuthTag(long paramLong1, CkCrypt2 paramCkCrypt2, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCrypt2_getEncodedAuthTag(long paramLong, CkCrypt2 paramCkCrypt2, String paramString);
/*       */   
/*       */   public static final native String CkCrypt2_encodedAuthTag(long paramLong, CkCrypt2 paramCkCrypt2, String paramString);
/*       */   
/*       */   public static final native boolean CkCrypt2_GetEncodedIV(long paramLong1, CkCrypt2 paramCkCrypt2, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCrypt2_getEncodedIV(long paramLong, CkCrypt2 paramCkCrypt2, String paramString);
/*       */   
/*       */   public static final native String CkCrypt2_encodedIV(long paramLong, CkCrypt2 paramCkCrypt2, String paramString);
/*       */   
/*       */   public static final native boolean CkCrypt2_GetEncodedKey(long paramLong1, CkCrypt2 paramCkCrypt2, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCrypt2_getEncodedKey(long paramLong, CkCrypt2 paramCkCrypt2, String paramString);
/*       */   
/*       */   public static final native String CkCrypt2_encodedKey(long paramLong, CkCrypt2 paramCkCrypt2, String paramString);
/*       */   
/*       */   public static final native boolean CkCrypt2_GetEncodedSalt(long paramLong1, CkCrypt2 paramCkCrypt2, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCrypt2_getEncodedSalt(long paramLong, CkCrypt2 paramCkCrypt2, String paramString);
/*       */   
/*       */   public static final native String CkCrypt2_encodedSalt(long paramLong, CkCrypt2 paramCkCrypt2, String paramString);
/*       */   
/*       */   public static final native long CkCrypt2_GetLastCert(long paramLong, CkCrypt2 paramCkCrypt2);
/*       */   
/*       */   public static final native boolean CkCrypt2_GetSignatureSigningTime(long paramLong1, CkCrypt2 paramCkCrypt2, int paramInt, long paramLong2, SYSTEMTIME paramSYSTEMTIME);
/*       */   
/*       */   public static final native boolean CkCrypt2_GetSignatureSigningTimeStr(long paramLong1, CkCrypt2 paramCkCrypt2, int paramInt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCrypt2_getSignatureSigningTimeStr(long paramLong, CkCrypt2 paramCkCrypt2, int paramInt);
/*       */   
/*       */   public static final native String CkCrypt2_signatureSigningTimeStr(long paramLong, CkCrypt2 paramCkCrypt2, int paramInt);
/*       */   
/*       */   public static final native boolean CkCrypt2_GetSignedAttributes(long paramLong1, CkCrypt2 paramCkCrypt2, int paramInt, long paramLong2, CkBinData paramCkBinData, long paramLong3, CkStringBuilder paramCkStringBuilder);
/*       */   
/*       */   public static final native long CkCrypt2_GetSignerCert(long paramLong, CkCrypt2 paramCkCrypt2, int paramInt);
/*       */   
/*       */   public static final native long CkCrypt2_GetSignerCertChain(long paramLong, CkCrypt2 paramCkCrypt2, int paramInt);
/*       */   
/*       */   public static final native boolean CkCrypt2_HashBdENC(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkBinData paramCkBinData, long paramLong3, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCrypt2_hashBdENC(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkBinData paramCkBinData);
/*       */   
/*       */   public static final native boolean CkCrypt2_HashBeginBytes(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkCrypt2_HashBeginString(long paramLong, CkCrypt2 paramCkCrypt2, String paramString);
/*       */   
/*       */   public static final native boolean CkCrypt2_HashBytes(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkByteData paramCkByteData1, long paramLong3, CkByteData paramCkByteData2);
/*       */   
/*       */   public static final native boolean CkCrypt2_HashBytesENC(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkByteData paramCkByteData, long paramLong3, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCrypt2_hashBytesENC(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkCrypt2_HashFile(long paramLong1, CkCrypt2 paramCkCrypt2, String paramString, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native long CkCrypt2_HashFileAsync(long paramLong, CkCrypt2 paramCkCrypt2, String paramString);
/*       */   
/*       */   public static final native boolean CkCrypt2_HashFileENC(long paramLong1, CkCrypt2 paramCkCrypt2, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCrypt2_hashFileENC(long paramLong, CkCrypt2 paramCkCrypt2, String paramString);
/*       */   
/*       */   public static final native long CkCrypt2_HashFileENCAsync(long paramLong, CkCrypt2 paramCkCrypt2, String paramString);
/*       */   
/*       */   public static final native boolean CkCrypt2_HashFinal(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkCrypt2_HashFinalENC(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCrypt2_hashFinalENC(long paramLong, CkCrypt2 paramCkCrypt2);
/*       */   
/*       */   public static final native boolean CkCrypt2_HashMoreBytes(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkCrypt2_HashMoreString(long paramLong, CkCrypt2 paramCkCrypt2, String paramString);
/*       */   
/*       */   public static final native boolean CkCrypt2_HashString(long paramLong1, CkCrypt2 paramCkCrypt2, String paramString, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkCrypt2_HashStringENC(long paramLong1, CkCrypt2 paramCkCrypt2, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCrypt2_hashStringENC(long paramLong, CkCrypt2 paramCkCrypt2, String paramString);
/*       */   
/*       */   public static final native boolean CkCrypt2_HasSignatureSigningTime(long paramLong, CkCrypt2 paramCkCrypt2, int paramInt);
/*       */   
/*       */   public static final native boolean CkCrypt2_HmacBytes(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkByteData paramCkByteData1, long paramLong3, CkByteData paramCkByteData2);
/*       */   
/*       */   public static final native boolean CkCrypt2_HmacBytesENC(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkByteData paramCkByteData, long paramLong3, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCrypt2_hmacBytesENC(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkCrypt2_HmacString(long paramLong1, CkCrypt2 paramCkCrypt2, String paramString, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkCrypt2_HmacStringENC(long paramLong1, CkCrypt2 paramCkCrypt2, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCrypt2_hmacStringENC(long paramLong, CkCrypt2 paramCkCrypt2, String paramString);
/*       */   
/*       */   public static final native boolean CkCrypt2_InflateBytes(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkByteData paramCkByteData1, long paramLong3, CkByteData paramCkByteData2);
/*       */   
/*       */   public static final native boolean CkCrypt2_InflateBytesENC(long paramLong1, CkCrypt2 paramCkCrypt2, String paramString, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkCrypt2_InflateString(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkByteData paramCkByteData, long paramLong3, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCrypt2_inflateString(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkCrypt2_InflateStringENC(long paramLong1, CkCrypt2 paramCkCrypt2, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCrypt2_inflateStringENC(long paramLong, CkCrypt2 paramCkCrypt2, String paramString);
/*       */   
/*       */   public static final native boolean CkCrypt2_IsUnlocked(long paramLong, CkCrypt2 paramCkCrypt2);
/*       */   
/*       */   public static final native long CkCrypt2_LastJsonData(long paramLong, CkCrypt2 paramCkCrypt2);
/*       */   
/*       */   public static final native boolean CkCrypt2_MacBdENC(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkBinData paramCkBinData, long paramLong3, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCrypt2_macBdENC(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkBinData paramCkBinData);
/*       */   
/*       */   public static final native boolean CkCrypt2_MacBytes(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkByteData paramCkByteData1, long paramLong3, CkByteData paramCkByteData2);
/*       */   
/*       */   public static final native boolean CkCrypt2_MacBytesENC(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkByteData paramCkByteData, long paramLong3, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCrypt2_macBytesENC(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkCrypt2_MacString(long paramLong1, CkCrypt2 paramCkCrypt2, String paramString, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkCrypt2_MacStringENC(long paramLong1, CkCrypt2 paramCkCrypt2, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCrypt2_macStringENC(long paramLong, CkCrypt2 paramCkCrypt2, String paramString);
/*       */   
/*       */   public static final native boolean CkCrypt2_MySqlAesDecrypt(long paramLong1, CkCrypt2 paramCkCrypt2, String paramString1, String paramString2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCrypt2_mySqlAesDecrypt(long paramLong, CkCrypt2 paramCkCrypt2, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkCrypt2_MySqlAesEncrypt(long paramLong1, CkCrypt2 paramCkCrypt2, String paramString1, String paramString2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCrypt2_mySqlAesEncrypt(long paramLong, CkCrypt2 paramCkCrypt2, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkCrypt2_OpaqueSignBd(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkBinData paramCkBinData);
/*       */   
/*       */   public static final native boolean CkCrypt2_OpaqueSignBytes(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkByteData paramCkByteData1, long paramLong3, CkByteData paramCkByteData2);
/*       */   
/*       */   public static final native boolean CkCrypt2_OpaqueSignBytesENC(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkByteData paramCkByteData, long paramLong3, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCrypt2_opaqueSignBytesENC(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkCrypt2_OpaqueSignString(long paramLong1, CkCrypt2 paramCkCrypt2, String paramString, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkCrypt2_OpaqueSignStringENC(long paramLong1, CkCrypt2 paramCkCrypt2, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCrypt2_opaqueSignStringENC(long paramLong, CkCrypt2 paramCkCrypt2, String paramString);
/*       */   
/*       */   public static final native boolean CkCrypt2_OpaqueVerifyBd(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkBinData paramCkBinData);
/*       */   
/*       */   public static final native boolean CkCrypt2_OpaqueVerifyBytes(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkByteData paramCkByteData1, long paramLong3, CkByteData paramCkByteData2);
/*       */   
/*       */   public static final native boolean CkCrypt2_OpaqueVerifyBytesENC(long paramLong1, CkCrypt2 paramCkCrypt2, String paramString, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkCrypt2_OpaqueVerifyString(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkByteData paramCkByteData, long paramLong3, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCrypt2_opaqueVerifyString(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkCrypt2_OpaqueVerifyStringENC(long paramLong1, CkCrypt2 paramCkCrypt2, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCrypt2_opaqueVerifyStringENC(long paramLong, CkCrypt2 paramCkCrypt2, String paramString);
/*       */   
/*       */   public static final native boolean CkCrypt2_Pbkdf1(long paramLong1, CkCrypt2 paramCkCrypt2, String paramString1, String paramString2, String paramString3, String paramString4, int paramInt1, int paramInt2, String paramString5, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCrypt2_pbkdf1(long paramLong, CkCrypt2 paramCkCrypt2, String paramString1, String paramString2, String paramString3, String paramString4, int paramInt1, int paramInt2, String paramString5);
/*       */   
/*       */   public static final native boolean CkCrypt2_Pbkdf2(long paramLong1, CkCrypt2 paramCkCrypt2, String paramString1, String paramString2, String paramString3, String paramString4, int paramInt1, int paramInt2, String paramString5, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCrypt2_pbkdf2(long paramLong, CkCrypt2 paramCkCrypt2, String paramString1, String paramString2, String paramString3, String paramString4, int paramInt1, int paramInt2, String paramString5);
/*       */   
/*       */   public static final native boolean CkCrypt2_Pkcs7ExtractDigest(long paramLong1, CkCrypt2 paramCkCrypt2, int paramInt, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCrypt2_pkcs7ExtractDigest(long paramLong, CkCrypt2 paramCkCrypt2, int paramInt, String paramString);
/*       */   
/*       */   public static final native void CkCrypt2_RandomizeIV(long paramLong, CkCrypt2 paramCkCrypt2);
/*       */   
/*       */   public static final native void CkCrypt2_RandomizeKey(long paramLong, CkCrypt2 paramCkCrypt2);
/*       */   
/*       */   public static final native boolean CkCrypt2_ReadFile(long paramLong1, CkCrypt2 paramCkCrypt2, String paramString, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkCrypt2_ReEncode(long paramLong1, CkCrypt2 paramCkCrypt2, String paramString1, String paramString2, String paramString3, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCrypt2_reEncode(long paramLong, CkCrypt2 paramCkCrypt2, String paramString1, String paramString2, String paramString3);
/*       */   
/*       */   public static final native boolean CkCrypt2_SaveLastError(long paramLong, CkCrypt2 paramCkCrypt2, String paramString);
/*       */   
/*       */   public static final native boolean CkCrypt2_SetCSP(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkCsp paramCkCsp);
/*       */   
/*       */   public static final native boolean CkCrypt2_SetDecryptCert(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkCert paramCkCert);
/*       */   
/*       */   public static final native boolean CkCrypt2_SetDecryptCert2(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkCert paramCkCert, long paramLong3, CkPrivateKey paramCkPrivateKey);
/*       */   
/*       */   public static final native boolean CkCrypt2_SetEncodedAad(long paramLong, CkCrypt2 paramCkCrypt2, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkCrypt2_SetEncodedAuthTag(long paramLong, CkCrypt2 paramCkCrypt2, String paramString1, String paramString2);
/*       */   
/*       */   public static final native void CkCrypt2_SetEncodedIV(long paramLong, CkCrypt2 paramCkCrypt2, String paramString1, String paramString2);
/*       */   
/*       */   public static final native void CkCrypt2_SetEncodedKey(long paramLong, CkCrypt2 paramCkCrypt2, String paramString1, String paramString2);
/*       */   
/*       */   public static final native void CkCrypt2_SetEncodedSalt(long paramLong, CkCrypt2 paramCkCrypt2, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkCrypt2_SetEncryptCert(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkCert paramCkCert);
/*       */   
/*       */   public static final native void CkCrypt2_SetHmacKeyBytes(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native void CkCrypt2_SetHmacKeyEncoded(long paramLong, CkCrypt2 paramCkCrypt2, String paramString1, String paramString2);
/*       */   
/*       */   public static final native void CkCrypt2_SetHmacKeyString(long paramLong, CkCrypt2 paramCkCrypt2, String paramString);
/*       */   
/*       */   public static final native boolean CkCrypt2_SetMacKeyBytes(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkCrypt2_SetMacKeyEncoded(long paramLong, CkCrypt2 paramCkCrypt2, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkCrypt2_SetMacKeyString(long paramLong, CkCrypt2 paramCkCrypt2, String paramString);
/*       */   
/*       */   public static final native void CkCrypt2_SetSecretKeyViaPassword(long paramLong, CkCrypt2 paramCkCrypt2, String paramString);
/*       */   
/*       */   public static final native boolean CkCrypt2_SetSigningCert(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkCert paramCkCert);
/*       */   
/*       */   public static final native boolean CkCrypt2_SetSigningCert2(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkCert paramCkCert, long paramLong3, CkPrivateKey paramCkPrivateKey);
/*       */   
/*       */   public static final native boolean CkCrypt2_SetVerifyCert(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkCert paramCkCert);
/*       */   
/*       */   public static final native boolean CkCrypt2_SignBdENC(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkBinData paramCkBinData, long paramLong3, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCrypt2_signBdENC(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkBinData paramCkBinData);
/*       */   
/*       */   public static final native boolean CkCrypt2_SignBytes(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkByteData paramCkByteData1, long paramLong3, CkByteData paramCkByteData2);
/*       */   
/*       */   public static final native boolean CkCrypt2_SignBytesENC(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkByteData paramCkByteData, long paramLong3, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCrypt2_signBytesENC(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkCrypt2_SignSbENC(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkStringBuilder paramCkStringBuilder, long paramLong3, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCrypt2_signSbENC(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkStringBuilder paramCkStringBuilder);
/*       */   
/*       */   public static final native boolean CkCrypt2_SignString(long paramLong1, CkCrypt2 paramCkCrypt2, String paramString, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkCrypt2_SignStringENC(long paramLong1, CkCrypt2 paramCkCrypt2, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCrypt2_signStringENC(long paramLong, CkCrypt2 paramCkCrypt2, String paramString);
/*       */   
/*       */   public static final native boolean CkCrypt2_StringToBytes(long paramLong1, CkCrypt2 paramCkCrypt2, String paramString1, String paramString2, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkCrypt2_TrimEndingWith(long paramLong1, CkCrypt2 paramCkCrypt2, String paramString1, String paramString2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCrypt2_trimEndingWith(long paramLong, CkCrypt2 paramCkCrypt2, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkCrypt2_UnlockComponent(long paramLong, CkCrypt2 paramCkCrypt2, String paramString);
/*       */   
/*       */   public static final native boolean CkCrypt2_UseCertVault(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkXmlCertVault paramCkXmlCertVault);
/*       */   
/*       */   public static final native boolean CkCrypt2_VerifyBdENC(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkBinData paramCkBinData, String paramString);
/*       */   
/*       */   public static final native boolean CkCrypt2_VerifyBytes(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkByteData paramCkByteData1, long paramLong3, CkByteData paramCkByteData2);
/*       */   
/*       */   public static final native boolean CkCrypt2_VerifyBytesENC(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkByteData paramCkByteData, String paramString);
/*       */   
/*       */   public static final native boolean CkCrypt2_VerifyDetachedSignature(long paramLong, CkCrypt2 paramCkCrypt2, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkCrypt2_VerifyP7M(long paramLong, CkCrypt2 paramCkCrypt2, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkCrypt2_VerifyP7S(long paramLong, CkCrypt2 paramCkCrypt2, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkCrypt2_VerifySbENC(long paramLong1, CkCrypt2 paramCkCrypt2, long paramLong2, CkStringBuilder paramCkStringBuilder, String paramString);
/*       */   
/*       */   public static final native boolean CkCrypt2_VerifyString(long paramLong1, CkCrypt2 paramCkCrypt2, String paramString, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkCrypt2_VerifyStringENC(long paramLong, CkCrypt2 paramCkCrypt2, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkCrypt2_WriteFile(long paramLong1, CkCrypt2 paramCkCrypt2, String paramString, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native long new_CkCsv();
/*       */   
/*       */   public static final native void delete_CkCsv(long paramLong);
/*       */   
/*       */   public static final native void CkCsv_LastErrorXml(long paramLong1, CkCsv paramCkCsv, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkCsv_LastErrorHtml(long paramLong1, CkCsv paramCkCsv, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkCsv_LastErrorText(long paramLong1, CkCsv paramCkCsv, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native boolean CkCsv_get_AutoTrim(long paramLong, CkCsv paramCkCsv);
/*       */   
/*       */   public static final native void CkCsv_put_AutoTrim(long paramLong, CkCsv paramCkCsv, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkCsv_get_Crlf(long paramLong, CkCsv paramCkCsv);
/*       */   
/*       */   public static final native void CkCsv_put_Crlf(long paramLong, CkCsv paramCkCsv, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkCsv_get_DebugLogFilePath(long paramLong1, CkCsv paramCkCsv, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCsv_debugLogFilePath(long paramLong, CkCsv paramCkCsv);
/*       */   
/*       */   public static final native void CkCsv_put_DebugLogFilePath(long paramLong, CkCsv paramCkCsv, String paramString);
/*       */   
/*       */   public static final native void CkCsv_get_Delimiter(long paramLong1, CkCsv paramCkCsv, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCsv_delimiter(long paramLong, CkCsv paramCkCsv);
/*       */   
/*       */   public static final native void CkCsv_put_Delimiter(long paramLong, CkCsv paramCkCsv, String paramString);
/*       */   
/*       */   public static final native boolean CkCsv_get_EnableQuotes(long paramLong, CkCsv paramCkCsv);
/*       */   
/*       */   public static final native void CkCsv_put_EnableQuotes(long paramLong, CkCsv paramCkCsv, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkCsv_get_EscapeBackslash(long paramLong, CkCsv paramCkCsv);
/*       */   
/*       */   public static final native void CkCsv_put_EscapeBackslash(long paramLong, CkCsv paramCkCsv, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkCsv_get_HasColumnNames(long paramLong, CkCsv paramCkCsv);
/*       */   
/*       */   public static final native void CkCsv_put_HasColumnNames(long paramLong, CkCsv paramCkCsv, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkCsv_get_LastErrorHtml(long paramLong1, CkCsv paramCkCsv, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCsv_lastErrorHtml(long paramLong, CkCsv paramCkCsv);
/*       */   
/*       */   public static final native void CkCsv_get_LastErrorText(long paramLong1, CkCsv paramCkCsv, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCsv_lastErrorText(long paramLong, CkCsv paramCkCsv);
/*       */   
/*       */   public static final native void CkCsv_get_LastErrorXml(long paramLong1, CkCsv paramCkCsv, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCsv_lastErrorXml(long paramLong, CkCsv paramCkCsv);
/*       */   
/*       */   public static final native boolean CkCsv_get_LastMethodSuccess(long paramLong, CkCsv paramCkCsv);
/*       */   
/*       */   public static final native void CkCsv_put_LastMethodSuccess(long paramLong, CkCsv paramCkCsv, boolean paramBoolean);
/*       */   
/*       */   public static final native int CkCsv_get_NumColumns(long paramLong, CkCsv paramCkCsv);
/*       */   
/*       */   public static final native int CkCsv_get_NumRows(long paramLong, CkCsv paramCkCsv);
/*       */   
/*       */   public static final native boolean CkCsv_get_VerboseLogging(long paramLong, CkCsv paramCkCsv);
/*       */   
/*       */   public static final native void CkCsv_put_VerboseLogging(long paramLong, CkCsv paramCkCsv, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkCsv_get_Version(long paramLong1, CkCsv paramCkCsv, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCsv_version(long paramLong, CkCsv paramCkCsv);
/*       */   
/*       */   public static final native boolean CkCsv_DeleteColumn(long paramLong, CkCsv paramCkCsv, int paramInt);
/*       */   
/*       */   public static final native boolean CkCsv_DeleteColumnByName(long paramLong, CkCsv paramCkCsv, String paramString);
/*       */   
/*       */   public static final native boolean CkCsv_DeleteRow(long paramLong, CkCsv paramCkCsv, int paramInt);
/*       */   
/*       */   public static final native boolean CkCsv_GetCell(long paramLong1, CkCsv paramCkCsv, int paramInt1, int paramInt2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCsv_getCell(long paramLong, CkCsv paramCkCsv, int paramInt1, int paramInt2);
/*       */   
/*       */   public static final native String CkCsv_cell(long paramLong, CkCsv paramCkCsv, int paramInt1, int paramInt2);
/*       */   
/*       */   public static final native boolean CkCsv_GetCellByName(long paramLong1, CkCsv paramCkCsv, int paramInt, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCsv_getCellByName(long paramLong, CkCsv paramCkCsv, int paramInt, String paramString);
/*       */   
/*       */   public static final native String CkCsv_cellByName(long paramLong, CkCsv paramCkCsv, int paramInt, String paramString);
/*       */   
/*       */   public static final native boolean CkCsv_GetColumnName(long paramLong1, CkCsv paramCkCsv, int paramInt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCsv_getColumnName(long paramLong, CkCsv paramCkCsv, int paramInt);
/*       */   
/*       */   public static final native String CkCsv_columnName(long paramLong, CkCsv paramCkCsv, int paramInt);
/*       */   
/*       */   public static final native int CkCsv_GetIndex(long paramLong, CkCsv paramCkCsv, String paramString);
/*       */   
/*       */   public static final native int CkCsv_GetNumCols(long paramLong, CkCsv paramCkCsv, int paramInt);
/*       */   
/*       */   public static final native boolean CkCsv_LoadFile(long paramLong, CkCsv paramCkCsv, String paramString);
/*       */   
/*       */   public static final native boolean CkCsv_LoadFile2(long paramLong, CkCsv paramCkCsv, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkCsv_LoadFromString(long paramLong, CkCsv paramCkCsv, String paramString);
/*       */   
/*       */   public static final native boolean CkCsv_RowMatches(long paramLong, CkCsv paramCkCsv, int paramInt, String paramString, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkCsv_SaveFile(long paramLong, CkCsv paramCkCsv, String paramString);
/*       */   
/*       */   public static final native boolean CkCsv_SaveFile2(long paramLong, CkCsv paramCkCsv, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkCsv_SaveLastError(long paramLong, CkCsv paramCkCsv, String paramString);
/*       */   
/*       */   public static final native boolean CkCsv_SaveToString(long paramLong1, CkCsv paramCkCsv, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCsv_saveToString(long paramLong, CkCsv paramCkCsv);
/*       */   
/*       */   public static final native boolean CkCsv_SetCell(long paramLong, CkCsv paramCkCsv, int paramInt1, int paramInt2, String paramString);
/*       */   
/*       */   public static final native boolean CkCsv_SetCellByName(long paramLong, CkCsv paramCkCsv, int paramInt, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkCsv_SetColumnName(long paramLong, CkCsv paramCkCsv, int paramInt, String paramString);
/*       */   
/*       */   public static final native boolean CkCsv_SortByColumn(long paramLong, CkCsv paramCkCsv, String paramString, boolean paramBoolean1, boolean paramBoolean2);
/*       */   
/*       */   public static final native long new_CkDh();
/*       */   
/*       */   public static final native void delete_CkDh(long paramLong);
/*       */   
/*       */   public static final native void CkDh_LastErrorXml(long paramLong1, CkDh paramCkDh, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkDh_LastErrorHtml(long paramLong1, CkDh paramCkDh, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkDh_LastErrorText(long paramLong1, CkDh paramCkDh, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkDh_get_DebugLogFilePath(long paramLong1, CkDh paramCkDh, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkDh_debugLogFilePath(long paramLong, CkDh paramCkDh);
/*       */   
/*       */   public static final native void CkDh_put_DebugLogFilePath(long paramLong, CkDh paramCkDh, String paramString);
/*       */   
/*       */   public static final native int CkDh_get_G(long paramLong, CkDh paramCkDh);
/*       */   
/*       */   public static final native void CkDh_get_LastErrorHtml(long paramLong1, CkDh paramCkDh, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkDh_lastErrorHtml(long paramLong, CkDh paramCkDh);
/*       */   
/*       */   public static final native void CkDh_get_LastErrorText(long paramLong1, CkDh paramCkDh, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkDh_lastErrorText(long paramLong, CkDh paramCkDh);
/*       */   
/*       */   public static final native void CkDh_get_LastErrorXml(long paramLong1, CkDh paramCkDh, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkDh_lastErrorXml(long paramLong, CkDh paramCkDh);
/*       */   
/*       */   public static final native boolean CkDh_get_LastMethodSuccess(long paramLong, CkDh paramCkDh);
/*       */   
/*       */   public static final native void CkDh_put_LastMethodSuccess(long paramLong, CkDh paramCkDh, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkDh_get_P(long paramLong1, CkDh paramCkDh, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkDh_p(long paramLong, CkDh paramCkDh);
/*       */   
/*       */   public static final native boolean CkDh_get_VerboseLogging(long paramLong, CkDh paramCkDh);
/*       */   
/*       */   public static final native void CkDh_put_VerboseLogging(long paramLong, CkDh paramCkDh, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkDh_get_Version(long paramLong1, CkDh paramCkDh, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkDh_version(long paramLong, CkDh paramCkDh);
/*       */   
/*       */   public static final native boolean CkDh_CreateE(long paramLong1, CkDh paramCkDh, int paramInt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkDh_createE(long paramLong, CkDh paramCkDh, int paramInt);
/*       */   
/*       */   public static final native boolean CkDh_FindK(long paramLong1, CkDh paramCkDh, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkDh_findK(long paramLong, CkDh paramCkDh, String paramString);
/*       */   
/*       */   public static final native boolean CkDh_GenPG(long paramLong, CkDh paramCkDh, int paramInt1, int paramInt2);
/*       */   
/*       */   public static final native boolean CkDh_SaveLastError(long paramLong, CkDh paramCkDh, String paramString);
/*       */   
/*       */   public static final native boolean CkDh_SetPG(long paramLong, CkDh paramCkDh, String paramString, int paramInt);
/*       */   
/*       */   public static final native boolean CkDh_UnlockComponent(long paramLong, CkDh paramCkDh, String paramString);
/*       */   
/*       */   public static final native void CkDh_UseKnownPrime(long paramLong, CkDh paramCkDh, int paramInt);
/*       */   
/*       */   public static final native long new_CkDirTree();
/*       */   
/*       */   public static final native void delete_CkDirTree(long paramLong);
/*       */   
/*       */   public static final native void CkDirTree_LastErrorXml(long paramLong1, CkDirTree paramCkDirTree, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkDirTree_LastErrorHtml(long paramLong1, CkDirTree paramCkDirTree, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkDirTree_LastErrorText(long paramLong1, CkDirTree paramCkDirTree, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkDirTree_get_BaseDir(long paramLong1, CkDirTree paramCkDirTree, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkDirTree_baseDir(long paramLong, CkDirTree paramCkDirTree);
/*       */   
/*       */   public static final native void CkDirTree_put_BaseDir(long paramLong, CkDirTree paramCkDirTree, String paramString);
/*       */   
/*       */   public static final native void CkDirTree_get_DebugLogFilePath(long paramLong1, CkDirTree paramCkDirTree, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkDirTree_debugLogFilePath(long paramLong, CkDirTree paramCkDirTree);
/*       */   
/*       */   public static final native void CkDirTree_put_DebugLogFilePath(long paramLong, CkDirTree paramCkDirTree, String paramString);
/*       */   
/*       */   public static final native boolean CkDirTree_get_DoneIterating(long paramLong, CkDirTree paramCkDirTree);
/*       */   
/*       */   public static final native int CkDirTree_get_FileSize32(long paramLong, CkDirTree paramCkDirTree);
/*       */   
/*       */   public static final native void CkDirTree_get_FullPath(long paramLong1, CkDirTree paramCkDirTree, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkDirTree_fullPath(long paramLong, CkDirTree paramCkDirTree);
/*       */   
/*       */   public static final native void CkDirTree_get_FullUncPath(long paramLong1, CkDirTree paramCkDirTree, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkDirTree_fullUncPath(long paramLong, CkDirTree paramCkDirTree);
/*       */   
/*       */   public static final native boolean CkDirTree_get_IsDirectory(long paramLong, CkDirTree paramCkDirTree);
/*       */   
/*       */   public static final native void CkDirTree_get_LastErrorHtml(long paramLong1, CkDirTree paramCkDirTree, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkDirTree_lastErrorHtml(long paramLong, CkDirTree paramCkDirTree);
/*       */   
/*       */   public static final native void CkDirTree_get_LastErrorText(long paramLong1, CkDirTree paramCkDirTree, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkDirTree_lastErrorText(long paramLong, CkDirTree paramCkDirTree);
/*       */   
/*       */   public static final native void CkDirTree_get_LastErrorXml(long paramLong1, CkDirTree paramCkDirTree, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkDirTree_lastErrorXml(long paramLong, CkDirTree paramCkDirTree);
/*       */   
/*       */   public static final native boolean CkDirTree_get_LastMethodSuccess(long paramLong, CkDirTree paramCkDirTree);
/*       */   
/*       */   public static final native void CkDirTree_put_LastMethodSuccess(long paramLong, CkDirTree paramCkDirTree, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkDirTree_get_Recurse(long paramLong, CkDirTree paramCkDirTree);
/*       */   
/*       */   public static final native void CkDirTree_put_Recurse(long paramLong, CkDirTree paramCkDirTree, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkDirTree_get_RelativePath(long paramLong1, CkDirTree paramCkDirTree, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkDirTree_relativePath(long paramLong, CkDirTree paramCkDirTree);
/*       */   
/*       */   public static final native boolean CkDirTree_get_VerboseLogging(long paramLong, CkDirTree paramCkDirTree);
/*       */   
/*       */   public static final native void CkDirTree_put_VerboseLogging(long paramLong, CkDirTree paramCkDirTree, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkDirTree_get_Version(long paramLong1, CkDirTree paramCkDirTree, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkDirTree_version(long paramLong, CkDirTree paramCkDirTree);
/*       */   
/*       */   public static final native boolean CkDirTree_AdvancePosition(long paramLong, CkDirTree paramCkDirTree);
/*       */   
/*       */   public static final native boolean CkDirTree_BeginIterate(long paramLong, CkDirTree paramCkDirTree);
/*       */   
/*       */   public static final native boolean CkDirTree_SaveLastError(long paramLong, CkDirTree paramCkDirTree, String paramString);
/*       */   
/*       */   public static final native long new_CkDkim();
/*       */   
/*       */   public static final native void delete_CkDkim(long paramLong);
/*       */   
/*       */   public static final native void CkDkim_LastErrorXml(long paramLong1, CkDkim paramCkDkim, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkDkim_LastErrorHtml(long paramLong1, CkDkim paramCkDkim, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkDkim_LastErrorText(long paramLong1, CkDkim paramCkDkim, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkDkim_put_EventCallbackObject(long paramLong1, CkDkim paramCkDkim, long paramLong2, CkBaseProgress paramCkBaseProgress);
/*       */   
/*       */   public static final native boolean CkDkim_get_AbortCurrent(long paramLong, CkDkim paramCkDkim);
/*       */   
/*       */   public static final native void CkDkim_put_AbortCurrent(long paramLong, CkDkim paramCkDkim, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkDkim_get_DebugLogFilePath(long paramLong1, CkDkim paramCkDkim, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkDkim_debugLogFilePath(long paramLong, CkDkim paramCkDkim);
/*       */   
/*       */   public static final native void CkDkim_put_DebugLogFilePath(long paramLong, CkDkim paramCkDkim, String paramString);
/*       */   
/*       */   public static final native void CkDkim_get_DkimAlg(long paramLong1, CkDkim paramCkDkim, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkDkim_dkimAlg(long paramLong, CkDkim paramCkDkim);
/*       */   
/*       */   public static final native void CkDkim_put_DkimAlg(long paramLong, CkDkim paramCkDkim, String paramString);
/*       */   
/*       */   public static final native int CkDkim_get_DkimBodyLengthCount(long paramLong, CkDkim paramCkDkim);
/*       */   
/*       */   public static final native void CkDkim_put_DkimBodyLengthCount(long paramLong, CkDkim paramCkDkim, int paramInt);
/*       */   
/*       */   public static final native void CkDkim_get_DkimCanon(long paramLong1, CkDkim paramCkDkim, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkDkim_dkimCanon(long paramLong, CkDkim paramCkDkim);
/*       */   
/*       */   public static final native void CkDkim_put_DkimCanon(long paramLong, CkDkim paramCkDkim, String paramString);
/*       */   
/*       */   public static final native void CkDkim_get_DkimDomain(long paramLong1, CkDkim paramCkDkim, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkDkim_dkimDomain(long paramLong, CkDkim paramCkDkim);
/*       */   
/*       */   public static final native void CkDkim_put_DkimDomain(long paramLong, CkDkim paramCkDkim, String paramString);
/*       */   
/*       */   public static final native void CkDkim_get_DkimHeaders(long paramLong1, CkDkim paramCkDkim, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkDkim_dkimHeaders(long paramLong, CkDkim paramCkDkim);
/*       */   
/*       */   public static final native void CkDkim_put_DkimHeaders(long paramLong, CkDkim paramCkDkim, String paramString);
/*       */   
/*       */   public static final native void CkDkim_get_DkimSelector(long paramLong1, CkDkim paramCkDkim, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkDkim_dkimSelector(long paramLong, CkDkim paramCkDkim);
/*       */   
/*       */   public static final native void CkDkim_put_DkimSelector(long paramLong, CkDkim paramCkDkim, String paramString);
/*       */   
/*       */   public static final native void CkDkim_get_DomainKeyAlg(long paramLong1, CkDkim paramCkDkim, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkDkim_domainKeyAlg(long paramLong, CkDkim paramCkDkim);
/*       */   
/*       */   public static final native void CkDkim_put_DomainKeyAlg(long paramLong, CkDkim paramCkDkim, String paramString);
/*       */   
/*       */   public static final native void CkDkim_get_DomainKeyCanon(long paramLong1, CkDkim paramCkDkim, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkDkim_domainKeyCanon(long paramLong, CkDkim paramCkDkim);
/*       */   
/*       */   public static final native void CkDkim_put_DomainKeyCanon(long paramLong, CkDkim paramCkDkim, String paramString);
/*       */   
/*       */   public static final native void CkDkim_get_DomainKeyDomain(long paramLong1, CkDkim paramCkDkim, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkDkim_domainKeyDomain(long paramLong, CkDkim paramCkDkim);
/*       */   
/*       */   public static final native void CkDkim_put_DomainKeyDomain(long paramLong, CkDkim paramCkDkim, String paramString);
/*       */   
/*       */   public static final native void CkDkim_get_DomainKeyHeaders(long paramLong1, CkDkim paramCkDkim, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkDkim_domainKeyHeaders(long paramLong, CkDkim paramCkDkim);
/*       */   
/*       */   public static final native void CkDkim_put_DomainKeyHeaders(long paramLong, CkDkim paramCkDkim, String paramString);
/*       */   
/*       */   public static final native void CkDkim_get_DomainKeySelector(long paramLong1, CkDkim paramCkDkim, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkDkim_domainKeySelector(long paramLong, CkDkim paramCkDkim);
/*       */   
/*       */   public static final native void CkDkim_put_DomainKeySelector(long paramLong, CkDkim paramCkDkim, String paramString);
/*       */   
/*       */   public static final native int CkDkim_get_HeartbeatMs(long paramLong, CkDkim paramCkDkim);
/*       */   
/*       */   public static final native void CkDkim_put_HeartbeatMs(long paramLong, CkDkim paramCkDkim, int paramInt);
/*       */   
/*       */   public static final native void CkDkim_get_LastErrorHtml(long paramLong1, CkDkim paramCkDkim, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkDkim_lastErrorHtml(long paramLong, CkDkim paramCkDkim);
/*       */   
/*       */   public static final native void CkDkim_get_LastErrorText(long paramLong1, CkDkim paramCkDkim, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkDkim_lastErrorText(long paramLong, CkDkim paramCkDkim);
/*       */   
/*       */   public static final native void CkDkim_get_LastErrorXml(long paramLong1, CkDkim paramCkDkim, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkDkim_lastErrorXml(long paramLong, CkDkim paramCkDkim);
/*       */   
/*       */   public static final native boolean CkDkim_get_LastMethodSuccess(long paramLong, CkDkim paramCkDkim);
/*       */   
/*       */   public static final native void CkDkim_put_LastMethodSuccess(long paramLong, CkDkim paramCkDkim, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkDkim_get_VerboseLogging(long paramLong, CkDkim paramCkDkim);
/*       */   
/*       */   public static final native void CkDkim_put_VerboseLogging(long paramLong, CkDkim paramCkDkim, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkDkim_get_Version(long paramLong1, CkDkim paramCkDkim, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkDkim_version(long paramLong, CkDkim paramCkDkim);
/*       */   
/*       */   public static final native boolean CkDkim_AddDkimSignature(long paramLong1, CkDkim paramCkDkim, long paramLong2, CkByteData paramCkByteData1, long paramLong3, CkByteData paramCkByteData2);
/*       */   
/*       */   public static final native boolean CkDkim_AddDomainKeySignature(long paramLong1, CkDkim paramCkDkim, long paramLong2, CkByteData paramCkByteData1, long paramLong3, CkByteData paramCkByteData2);
/*       */   
/*       */   public static final native boolean CkDkim_DkimSign(long paramLong1, CkDkim paramCkDkim, long paramLong2, CkBinData paramCkBinData);
/*       */   
/*       */   public static final native boolean CkDkim_DkimVerify(long paramLong1, CkDkim paramCkDkim, int paramInt, long paramLong2, CkBinData paramCkBinData);
/*       */   
/*       */   public static final native boolean CkDkim_DomainKeySign(long paramLong1, CkDkim paramCkDkim, long paramLong2, CkBinData paramCkBinData);
/*       */   
/*       */   public static final native boolean CkDkim_DomainKeyVerify(long paramLong1, CkDkim paramCkDkim, int paramInt, long paramLong2, CkBinData paramCkBinData);
/*       */   
/*       */   public static final native boolean CkDkim_LoadDkimPk(long paramLong, CkDkim paramCkDkim, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkDkim_LoadDkimPkBytes(long paramLong1, CkDkim paramCkDkim, long paramLong2, CkByteData paramCkByteData, String paramString);
/*       */   
/*       */   public static final native boolean CkDkim_LoadDkimPkFile(long paramLong, CkDkim paramCkDkim, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkDkim_LoadDomainKeyPk(long paramLong, CkDkim paramCkDkim, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkDkim_LoadDomainKeyPkBytes(long paramLong1, CkDkim paramCkDkim, long paramLong2, CkByteData paramCkByteData, String paramString);
/*       */   
/*       */   public static final native boolean CkDkim_LoadDomainKeyPkFile(long paramLong, CkDkim paramCkDkim, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkDkim_LoadPublicKey(long paramLong, CkDkim paramCkDkim, String paramString1, String paramString2, String paramString3);
/*       */   
/*       */   public static final native boolean CkDkim_LoadPublicKeyFile(long paramLong, CkDkim paramCkDkim, String paramString1, String paramString2, String paramString3);
/*       */   
/*       */   public static final native int CkDkim_NumDkimSignatures(long paramLong1, CkDkim paramCkDkim, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native int CkDkim_NumDomainKeySignatures(long paramLong1, CkDkim paramCkDkim, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkDkim_PrefetchPublicKey(long paramLong, CkDkim paramCkDkim, String paramString1, String paramString2);
/*       */   
/*       */   public static final native long CkDkim_PrefetchPublicKeyAsync(long paramLong, CkDkim paramCkDkim, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkDkim_SaveLastError(long paramLong, CkDkim paramCkDkim, String paramString);
/*       */   
/*       */   public static final native boolean CkDkim_SetDkimPrivateKey(long paramLong1, CkDkim paramCkDkim, long paramLong2, CkPrivateKey paramCkPrivateKey);
/*       */   
/*       */   public static final native boolean CkDkim_SetDomainKeyPrivateKey(long paramLong1, CkDkim paramCkDkim, long paramLong2, CkPrivateKey paramCkPrivateKey);
/*       */   
/*       */   public static final native boolean CkDkim_UnlockComponent(long paramLong, CkDkim paramCkDkim, String paramString);
/*       */   
/*       */   public static final native boolean CkDkim_VerifyDkimSignature(long paramLong1, CkDkim paramCkDkim, int paramInt, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native long CkDkim_VerifyDkimSignatureAsync(long paramLong1, CkDkim paramCkDkim, int paramInt, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkDkim_VerifyDomainKeySignature(long paramLong1, CkDkim paramCkDkim, int paramInt, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native long CkDkim_VerifyDomainKeySignatureAsync(long paramLong1, CkDkim paramCkDkim, int paramInt, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native long new_CkDsa();
/*       */   
/*       */   public static final native void delete_CkDsa(long paramLong);
/*       */   
/*       */   public static final native void CkDsa_LastErrorXml(long paramLong1, CkDsa paramCkDsa, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkDsa_LastErrorHtml(long paramLong1, CkDsa paramCkDsa, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkDsa_LastErrorText(long paramLong1, CkDsa paramCkDsa, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkDsa_get_DebugLogFilePath(long paramLong1, CkDsa paramCkDsa, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkDsa_debugLogFilePath(long paramLong, CkDsa paramCkDsa);
/*       */   
/*       */   public static final native void CkDsa_put_DebugLogFilePath(long paramLong, CkDsa paramCkDsa, String paramString);
/*       */   
/*       */   public static final native int CkDsa_get_GroupSize(long paramLong, CkDsa paramCkDsa);
/*       */   
/*       */   public static final native void CkDsa_put_GroupSize(long paramLong, CkDsa paramCkDsa, int paramInt);
/*       */   
/*       */   public static final native void CkDsa_get_Hash(long paramLong1, CkDsa paramCkDsa, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native void CkDsa_put_Hash(long paramLong1, CkDsa paramCkDsa, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native void CkDsa_get_HexG(long paramLong1, CkDsa paramCkDsa, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkDsa_hexG(long paramLong, CkDsa paramCkDsa);
/*       */   
/*       */   public static final native void CkDsa_get_HexP(long paramLong1, CkDsa paramCkDsa, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkDsa_hexP(long paramLong, CkDsa paramCkDsa);
/*       */   
/*       */   public static final native void CkDsa_get_HexQ(long paramLong1, CkDsa paramCkDsa, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkDsa_hexQ(long paramLong, CkDsa paramCkDsa);
/*       */   
/*       */   public static final native void CkDsa_get_HexX(long paramLong1, CkDsa paramCkDsa, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkDsa_hexX(long paramLong, CkDsa paramCkDsa);
/*       */   
/*       */   public static final native void CkDsa_get_HexY(long paramLong1, CkDsa paramCkDsa, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkDsa_hexY(long paramLong, CkDsa paramCkDsa);
/*       */   
/*       */   public static final native void CkDsa_get_LastErrorHtml(long paramLong1, CkDsa paramCkDsa, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkDsa_lastErrorHtml(long paramLong, CkDsa paramCkDsa);
/*       */   
/*       */   public static final native void CkDsa_get_LastErrorText(long paramLong1, CkDsa paramCkDsa, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkDsa_lastErrorText(long paramLong, CkDsa paramCkDsa);
/*       */   
/*       */   public static final native void CkDsa_get_LastErrorXml(long paramLong1, CkDsa paramCkDsa, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkDsa_lastErrorXml(long paramLong, CkDsa paramCkDsa);
/*       */   
/*       */   public static final native boolean CkDsa_get_LastMethodSuccess(long paramLong, CkDsa paramCkDsa);
/*       */   
/*       */   public static final native void CkDsa_put_LastMethodSuccess(long paramLong, CkDsa paramCkDsa, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkDsa_get_Signature(long paramLong1, CkDsa paramCkDsa, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native void CkDsa_put_Signature(long paramLong1, CkDsa paramCkDsa, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkDsa_get_VerboseLogging(long paramLong, CkDsa paramCkDsa);
/*       */   
/*       */   public static final native void CkDsa_put_VerboseLogging(long paramLong, CkDsa paramCkDsa, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkDsa_get_Version(long paramLong1, CkDsa paramCkDsa, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkDsa_version(long paramLong, CkDsa paramCkDsa);
/*       */   
/*       */   public static final native boolean CkDsa_FromDer(long paramLong1, CkDsa paramCkDsa, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkDsa_FromDerFile(long paramLong, CkDsa paramCkDsa, String paramString);
/*       */   
/*       */   public static final native boolean CkDsa_FromEncryptedPem(long paramLong, CkDsa paramCkDsa, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkDsa_FromPem(long paramLong, CkDsa paramCkDsa, String paramString);
/*       */   
/*       */   public static final native boolean CkDsa_FromPublicDer(long paramLong1, CkDsa paramCkDsa, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkDsa_FromPublicDerFile(long paramLong, CkDsa paramCkDsa, String paramString);
/*       */   
/*       */   public static final native boolean CkDsa_FromPublicPem(long paramLong, CkDsa paramCkDsa, String paramString);
/*       */   
/*       */   public static final native boolean CkDsa_FromXml(long paramLong, CkDsa paramCkDsa, String paramString);
/*       */   
/*       */   public static final native boolean CkDsa_GenKey(long paramLong, CkDsa paramCkDsa, int paramInt);
/*       */   
/*       */   public static final native boolean CkDsa_GenKeyFromParamsDer(long paramLong1, CkDsa paramCkDsa, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkDsa_GenKeyFromParamsDerFile(long paramLong, CkDsa paramCkDsa, String paramString);
/*       */   
/*       */   public static final native boolean CkDsa_GenKeyFromParamsPem(long paramLong, CkDsa paramCkDsa, String paramString);
/*       */   
/*       */   public static final native boolean CkDsa_GenKeyFromParamsPemFile(long paramLong, CkDsa paramCkDsa, String paramString);
/*       */   
/*       */   public static final native boolean CkDsa_GetEncodedHash(long paramLong1, CkDsa paramCkDsa, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkDsa_getEncodedHash(long paramLong, CkDsa paramCkDsa, String paramString);
/*       */   
/*       */   public static final native String CkDsa_encodedHash(long paramLong, CkDsa paramCkDsa, String paramString);
/*       */   
/*       */   public static final native boolean CkDsa_GetEncodedSignature(long paramLong1, CkDsa paramCkDsa, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkDsa_getEncodedSignature(long paramLong, CkDsa paramCkDsa, String paramString);
/*       */   
/*       */   public static final native String CkDsa_encodedSignature(long paramLong, CkDsa paramCkDsa, String paramString);
/*       */   
/*       */   public static final native boolean CkDsa_LoadText(long paramLong1, CkDsa paramCkDsa, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkDsa_loadText(long paramLong, CkDsa paramCkDsa, String paramString);
/*       */   
/*       */   public static final native boolean CkDsa_SaveLastError(long paramLong, CkDsa paramCkDsa, String paramString);
/*       */   
/*       */   public static final native boolean CkDsa_SaveText(long paramLong, CkDsa paramCkDsa, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkDsa_SetEncodedHash(long paramLong, CkDsa paramCkDsa, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkDsa_SetEncodedSignature(long paramLong, CkDsa paramCkDsa, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkDsa_SetEncodedSignatureRS(long paramLong, CkDsa paramCkDsa, String paramString1, String paramString2, String paramString3);
/*       */   
/*       */   public static final native boolean CkDsa_SetKeyExplicit(long paramLong, CkDsa paramCkDsa, int paramInt, String paramString1, String paramString2, String paramString3, String paramString4);
/*       */   
/*       */   public static final native boolean CkDsa_SetPubKeyExplicit(long paramLong, CkDsa paramCkDsa, int paramInt, String paramString1, String paramString2, String paramString3, String paramString4);
/*       */   
/*       */   public static final native boolean CkDsa_SignHash(long paramLong, CkDsa paramCkDsa);
/*       */   
/*       */   public static final native boolean CkDsa_ToDer(long paramLong1, CkDsa paramCkDsa, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkDsa_ToDerFile(long paramLong, CkDsa paramCkDsa, String paramString);
/*       */   
/*       */   public static final native boolean CkDsa_ToEncryptedPem(long paramLong1, CkDsa paramCkDsa, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkDsa_toEncryptedPem(long paramLong, CkDsa paramCkDsa, String paramString);
/*       */   
/*       */   public static final native boolean CkDsa_ToPem(long paramLong1, CkDsa paramCkDsa, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkDsa_toPem(long paramLong, CkDsa paramCkDsa);
/*       */   
/*       */   public static final native boolean CkDsa_ToPublicDer(long paramLong1, CkDsa paramCkDsa, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkDsa_ToPublicDerFile(long paramLong, CkDsa paramCkDsa, String paramString);
/*       */   
/*       */   public static final native boolean CkDsa_ToPublicPem(long paramLong1, CkDsa paramCkDsa, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkDsa_toPublicPem(long paramLong, CkDsa paramCkDsa);
/*       */   
/*       */   public static final native boolean CkDsa_ToXml(long paramLong1, CkDsa paramCkDsa, boolean paramBoolean, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkDsa_toXml(long paramLong, CkDsa paramCkDsa, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkDsa_UnlockComponent(long paramLong, CkDsa paramCkDsa, String paramString);
/*       */   
/*       */   public static final native boolean CkDsa_Verify(long paramLong, CkDsa paramCkDsa);
/*       */   
/*       */   public static final native boolean CkDsa_VerifyKey(long paramLong, CkDsa paramCkDsa);
/*       */   
/*       */   public static final native long new_CkEcc();
/*       */   
/*       */   public static final native void delete_CkEcc(long paramLong);
/*       */   
/*       */   public static final native void CkEcc_LastErrorXml(long paramLong1, CkEcc paramCkEcc, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkEcc_LastErrorHtml(long paramLong1, CkEcc paramCkEcc, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkEcc_LastErrorText(long paramLong1, CkEcc paramCkEcc, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkEcc_get_DebugLogFilePath(long paramLong1, CkEcc paramCkEcc, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkEcc_debugLogFilePath(long paramLong, CkEcc paramCkEcc);
/*       */   
/*       */   public static final native void CkEcc_put_DebugLogFilePath(long paramLong, CkEcc paramCkEcc, String paramString);
/*       */   
/*       */   public static final native void CkEcc_get_LastErrorHtml(long paramLong1, CkEcc paramCkEcc, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkEcc_lastErrorHtml(long paramLong, CkEcc paramCkEcc);
/*       */   
/*       */   public static final native void CkEcc_get_LastErrorText(long paramLong1, CkEcc paramCkEcc, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkEcc_lastErrorText(long paramLong, CkEcc paramCkEcc);
/*       */   
/*       */   public static final native void CkEcc_get_LastErrorXml(long paramLong1, CkEcc paramCkEcc, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkEcc_lastErrorXml(long paramLong, CkEcc paramCkEcc);
/*       */   
/*       */   public static final native boolean CkEcc_get_LastMethodSuccess(long paramLong, CkEcc paramCkEcc);
/*       */   
/*       */   public static final native void CkEcc_put_LastMethodSuccess(long paramLong, CkEcc paramCkEcc, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkEcc_get_VerboseLogging(long paramLong, CkEcc paramCkEcc);
/*       */   
/*       */   public static final native void CkEcc_put_VerboseLogging(long paramLong, CkEcc paramCkEcc, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkEcc_get_Version(long paramLong1, CkEcc paramCkEcc, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkEcc_version(long paramLong, CkEcc paramCkEcc);
/*       */   
/*       */   public static final native long CkEcc_GenEccKey(long paramLong1, CkEcc paramCkEcc, String paramString, long paramLong2, CkPrng paramCkPrng);
/*       */   
/*       */   public static final native long CkEcc_GenEccKey2(long paramLong, CkEcc paramCkEcc, String paramString1, String paramString2, String paramString3);
/*       */   
/*       */   public static final native boolean CkEcc_SaveLastError(long paramLong, CkEcc paramCkEcc, String paramString);
/*       */   
/*       */   public static final native boolean CkEcc_SharedSecretENC(long paramLong1, CkEcc paramCkEcc, long paramLong2, CkPrivateKey paramCkPrivateKey, long paramLong3, CkPublicKey paramCkPublicKey, String paramString, long paramLong4, CkString paramCkString);
/*       */   
/*       */   public static final native String CkEcc_sharedSecretENC(long paramLong1, CkEcc paramCkEcc, long paramLong2, CkPrivateKey paramCkPrivateKey, long paramLong3, CkPublicKey paramCkPublicKey, String paramString);
/*       */   
/*       */   public static final native boolean CkEcc_SignHashENC(long paramLong1, CkEcc paramCkEcc, String paramString1, String paramString2, long paramLong2, CkPrivateKey paramCkPrivateKey, long paramLong3, CkPrng paramCkPrng, long paramLong4, CkString paramCkString);
/*       */   
/*       */   public static final native String CkEcc_signHashENC(long paramLong1, CkEcc paramCkEcc, String paramString1, String paramString2, long paramLong2, CkPrivateKey paramCkPrivateKey, long paramLong3, CkPrng paramCkPrng);
/*       */   
/*       */   public static final native int CkEcc_VerifyHashENC(long paramLong1, CkEcc paramCkEcc, String paramString1, String paramString2, String paramString3, long paramLong2, CkPublicKey paramCkPublicKey);
/*       */   
/*       */   public static final native long new_CkEmail();
/*       */   
/*       */   public static final native void delete_CkEmail(long paramLong);
/*       */   
/*       */   public static final native void CkEmail_LastErrorXml(long paramLong1, CkEmail paramCkEmail, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkEmail_LastErrorHtml(long paramLong1, CkEmail paramCkEmail, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkEmail_LastErrorText(long paramLong1, CkEmail paramCkEmail, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkEmail_get_Body(long paramLong1, CkEmail paramCkEmail, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkEmail_body(long paramLong, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native void CkEmail_put_Body(long paramLong, CkEmail paramCkEmail, String paramString);
/*       */   
/*       */   public static final native void CkEmail_get_BounceAddress(long paramLong1, CkEmail paramCkEmail, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkEmail_bounceAddress(long paramLong, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native void CkEmail_put_BounceAddress(long paramLong, CkEmail paramCkEmail, String paramString);
/*       */   
/*       */   public static final native void CkEmail_get_Charset(long paramLong1, CkEmail paramCkEmail, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkEmail_charset(long paramLong, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native void CkEmail_put_Charset(long paramLong, CkEmail paramCkEmail, String paramString);
/*       */   
/*       */   public static final native void CkEmail_get_DebugLogFilePath(long paramLong1, CkEmail paramCkEmail, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkEmail_debugLogFilePath(long paramLong, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native void CkEmail_put_DebugLogFilePath(long paramLong, CkEmail paramCkEmail, String paramString);
/*       */   
/*       */   public static final native boolean CkEmail_get_Decrypted(long paramLong, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native void CkEmail_get_EmailDate(long paramLong1, CkEmail paramCkEmail, long paramLong2, SYSTEMTIME paramSYSTEMTIME);
/*       */   
/*       */   public static final native void CkEmail_put_EmailDate(long paramLong1, CkEmail paramCkEmail, long paramLong2, SYSTEMTIME paramSYSTEMTIME);
/*       */   
/*       */   public static final native void CkEmail_get_EmailDateStr(long paramLong1, CkEmail paramCkEmail, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkEmail_emailDateStr(long paramLong, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native void CkEmail_put_EmailDateStr(long paramLong, CkEmail paramCkEmail, String paramString);
/*       */   
/*       */   public static final native void CkEmail_get_EncryptedBy(long paramLong1, CkEmail paramCkEmail, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkEmail_encryptedBy(long paramLong, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native void CkEmail_get_FileDistList(long paramLong1, CkEmail paramCkEmail, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkEmail_fileDistList(long paramLong, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native void CkEmail_put_FileDistList(long paramLong, CkEmail paramCkEmail, String paramString);
/*       */   
/*       */   public static final native void CkEmail_get_From(long paramLong1, CkEmail paramCkEmail, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkEmail_ck_from(long paramLong, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native void CkEmail_put_From(long paramLong, CkEmail paramCkEmail, String paramString);
/*       */   
/*       */   public static final native void CkEmail_get_FromAddress(long paramLong1, CkEmail paramCkEmail, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkEmail_fromAddress(long paramLong, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native void CkEmail_put_FromAddress(long paramLong, CkEmail paramCkEmail, String paramString);
/*       */   
/*       */   public static final native void CkEmail_get_FromName(long paramLong1, CkEmail paramCkEmail, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkEmail_fromName(long paramLong, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native void CkEmail_put_FromName(long paramLong, CkEmail paramCkEmail, String paramString);
/*       */   
/*       */   public static final native void CkEmail_get_Header(long paramLong1, CkEmail paramCkEmail, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkEmail_header(long paramLong, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native void CkEmail_get_Language(long paramLong1, CkEmail paramCkEmail, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkEmail_language(long paramLong, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native void CkEmail_get_LastErrorHtml(long paramLong1, CkEmail paramCkEmail, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkEmail_lastErrorHtml(long paramLong, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native void CkEmail_get_LastErrorText(long paramLong1, CkEmail paramCkEmail, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkEmail_lastErrorText(long paramLong, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native void CkEmail_get_LastErrorXml(long paramLong1, CkEmail paramCkEmail, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkEmail_lastErrorXml(long paramLong, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native boolean CkEmail_get_LastMethodSuccess(long paramLong, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native void CkEmail_put_LastMethodSuccess(long paramLong, CkEmail paramCkEmail, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkEmail_get_LocalDate(long paramLong1, CkEmail paramCkEmail, long paramLong2, SYSTEMTIME paramSYSTEMTIME);
/*       */   
/*       */   public static final native void CkEmail_put_LocalDate(long paramLong1, CkEmail paramCkEmail, long paramLong2, SYSTEMTIME paramSYSTEMTIME);
/*       */   
/*       */   public static final native void CkEmail_get_LocalDateStr(long paramLong1, CkEmail paramCkEmail, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkEmail_localDateStr(long paramLong, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native void CkEmail_put_LocalDateStr(long paramLong, CkEmail paramCkEmail, String paramString);
/*       */   
/*       */   public static final native void CkEmail_get_Mailer(long paramLong1, CkEmail paramCkEmail, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkEmail_mailer(long paramLong, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native void CkEmail_put_Mailer(long paramLong, CkEmail paramCkEmail, String paramString);
/*       */   
/*       */   public static final native int CkEmail_get_NumAlternatives(long paramLong, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native int CkEmail_get_NumAttachedMessages(long paramLong, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native int CkEmail_get_NumAttachments(long paramLong, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native int CkEmail_get_NumBcc(long paramLong, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native int CkEmail_get_NumCC(long paramLong, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native int CkEmail_get_NumDaysOld(long paramLong, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native int CkEmail_get_NumDigests(long paramLong, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native int CkEmail_get_NumHeaderFields(long paramLong, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native int CkEmail_get_NumRelatedItems(long paramLong, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native int CkEmail_get_NumReplacePatterns(long paramLong, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native int CkEmail_get_NumReports(long paramLong, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native int CkEmail_get_NumTo(long paramLong, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native void CkEmail_get_OaepHash(long paramLong1, CkEmail paramCkEmail, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkEmail_oaepHash(long paramLong, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native void CkEmail_put_OaepHash(long paramLong, CkEmail paramCkEmail, String paramString);
/*       */   
/*       */   public static final native void CkEmail_get_OaepMgfHash(long paramLong1, CkEmail paramCkEmail, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkEmail_oaepMgfHash(long paramLong, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native void CkEmail_put_OaepMgfHash(long paramLong, CkEmail paramCkEmail, String paramString);
/*       */   
/*       */   public static final native boolean CkEmail_get_OaepPadding(long paramLong, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native void CkEmail_put_OaepPadding(long paramLong, CkEmail paramCkEmail, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkEmail_get_OverwriteExisting(long paramLong, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native void CkEmail_put_OverwriteExisting(long paramLong, CkEmail paramCkEmail, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkEmail_get_Pkcs7CryptAlg(long paramLong1, CkEmail paramCkEmail, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkEmail_pkcs7CryptAlg(long paramLong, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native void CkEmail_put_Pkcs7CryptAlg(long paramLong, CkEmail paramCkEmail, String paramString);
/*       */   
/*       */   public static final native int CkEmail_get_Pkcs7KeyLength(long paramLong, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native void CkEmail_put_Pkcs7KeyLength(long paramLong, CkEmail paramCkEmail, int paramInt);
/*       */   
/*       */   public static final native void CkEmail_get_PreferredCharset(long paramLong1, CkEmail paramCkEmail, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkEmail_preferredCharset(long paramLong, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native void CkEmail_put_PreferredCharset(long paramLong, CkEmail paramCkEmail, String paramString);
/*       */   
/*       */   public static final native boolean CkEmail_get_PrependHeaders(long paramLong, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native void CkEmail_put_PrependHeaders(long paramLong, CkEmail paramCkEmail, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkEmail_get_ReceivedEncrypted(long paramLong, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native boolean CkEmail_get_ReceivedSigned(long paramLong, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native void CkEmail_get_ReplyTo(long paramLong1, CkEmail paramCkEmail, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkEmail_replyTo(long paramLong, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native void CkEmail_put_ReplyTo(long paramLong, CkEmail paramCkEmail, String paramString);
/*       */   
/*       */   public static final native boolean CkEmail_get_ReturnReceipt(long paramLong, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native void CkEmail_put_ReturnReceipt(long paramLong, CkEmail paramCkEmail, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkEmail_get_SendEncrypted(long paramLong, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native void CkEmail_put_SendEncrypted(long paramLong, CkEmail paramCkEmail, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkEmail_get_Sender(long paramLong1, CkEmail paramCkEmail, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkEmail_sender(long paramLong, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native void CkEmail_put_Sender(long paramLong, CkEmail paramCkEmail, String paramString);
/*       */   
/*       */   public static final native boolean CkEmail_get_SendSigned(long paramLong, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native void CkEmail_put_SendSigned(long paramLong, CkEmail paramCkEmail, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkEmail_get_SignaturesValid(long paramLong, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native void CkEmail_get_SignedBy(long paramLong1, CkEmail paramCkEmail, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkEmail_signedBy(long paramLong, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native void CkEmail_get_SigningAlg(long paramLong1, CkEmail paramCkEmail, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkEmail_signingAlg(long paramLong, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native void CkEmail_put_SigningAlg(long paramLong, CkEmail paramCkEmail, String paramString);
/*       */   
/*       */   public static final native void CkEmail_get_SigningHashAlg(long paramLong1, CkEmail paramCkEmail, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkEmail_signingHashAlg(long paramLong, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native void CkEmail_put_SigningHashAlg(long paramLong, CkEmail paramCkEmail, String paramString);
/*       */   
/*       */   public static final native int CkEmail_get_Size(long paramLong, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native void CkEmail_get_Subject(long paramLong1, CkEmail paramCkEmail, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkEmail_subject(long paramLong, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native void CkEmail_put_Subject(long paramLong, CkEmail paramCkEmail, String paramString);
/*       */   
/*       */   public static final native void CkEmail_get_Uidl(long paramLong1, CkEmail paramCkEmail, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkEmail_uidl(long paramLong, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native boolean CkEmail_get_UnpackUseRelPaths(long paramLong, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native void CkEmail_put_UnpackUseRelPaths(long paramLong, CkEmail paramCkEmail, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkEmail_get_VerboseLogging(long paramLong, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native void CkEmail_put_VerboseLogging(long paramLong, CkEmail paramCkEmail, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkEmail_get_Version(long paramLong1, CkEmail paramCkEmail, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkEmail_version(long paramLong, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native boolean CkEmail_AddAttachmentBd(long paramLong1, CkEmail paramCkEmail, String paramString1, long paramLong2, CkBinData paramCkBinData, String paramString2);
/*       */   
/*       */   public static final native void CkEmail_AddAttachmentHeader(long paramLong, CkEmail paramCkEmail, int paramInt, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkEmail_AddBcc(long paramLong, CkEmail paramCkEmail, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkEmail_AddCC(long paramLong, CkEmail paramCkEmail, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkEmail_AddDataAttachment(long paramLong1, CkEmail paramCkEmail, String paramString, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkEmail_AddDataAttachment2(long paramLong1, CkEmail paramCkEmail, String paramString1, long paramLong2, CkByteData paramCkByteData, String paramString2);
/*       */   
/*       */   public static final native boolean CkEmail_AddEncryptCert(long paramLong1, CkEmail paramCkEmail, long paramLong2, CkCert paramCkCert);
/*       */   
/*       */   public static final native boolean CkEmail_AddFileAttachment(long paramLong1, CkEmail paramCkEmail, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkEmail_addFileAttachment(long paramLong, CkEmail paramCkEmail, String paramString);
/*       */   
/*       */   public static final native boolean CkEmail_AddFileAttachment2(long paramLong, CkEmail paramCkEmail, String paramString1, String paramString2);
/*       */   
/*       */   public static final native void CkEmail_AddHeaderField(long paramLong, CkEmail paramCkEmail, String paramString1, String paramString2);
/*       */   
/*       */   public static final native void CkEmail_AddHeaderField2(long paramLong, CkEmail paramCkEmail, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkEmail_AddHtmlAlternativeBody(long paramLong, CkEmail paramCkEmail, String paramString);
/*       */   
/*       */   public static final native boolean CkEmail_AddiCalendarAlternativeBody(long paramLong, CkEmail paramCkEmail, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkEmail_AddMultipleBcc(long paramLong, CkEmail paramCkEmail, String paramString);
/*       */   
/*       */   public static final native boolean CkEmail_AddMultipleCC(long paramLong, CkEmail paramCkEmail, String paramString);
/*       */   
/*       */   public static final native boolean CkEmail_AddMultipleTo(long paramLong, CkEmail paramCkEmail, String paramString);
/*       */   
/*       */   public static final native boolean CkEmail_AddPfxSourceData(long paramLong1, CkEmail paramCkEmail, long paramLong2, CkByteData paramCkByteData, String paramString);
/*       */   
/*       */   public static final native boolean CkEmail_AddPfxSourceFile(long paramLong, CkEmail paramCkEmail, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkEmail_AddPlainTextAlternativeBody(long paramLong, CkEmail paramCkEmail, String paramString);
/*       */   
/*       */   public static final native boolean CkEmail_AddRelatedBd(long paramLong1, CkEmail paramCkEmail, String paramString, long paramLong2, CkBinData paramCkBinData, long paramLong3, CkString paramCkString);
/*       */   
/*       */   public static final native String CkEmail_addRelatedBd(long paramLong1, CkEmail paramCkEmail, String paramString, long paramLong2, CkBinData paramCkBinData);
/*       */   
/*       */   public static final native boolean CkEmail_AddRelatedBd2(long paramLong1, CkEmail paramCkEmail, long paramLong2, CkBinData paramCkBinData, String paramString);
/*       */   
/*       */   public static final native boolean CkEmail_AddRelatedData(long paramLong1, CkEmail paramCkEmail, String paramString, long paramLong2, CkByteData paramCkByteData, long paramLong3, CkString paramCkString);
/*       */   
/*       */   public static final native String CkEmail_addRelatedData(long paramLong1, CkEmail paramCkEmail, String paramString, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native void CkEmail_AddRelatedData2(long paramLong1, CkEmail paramCkEmail, long paramLong2, CkByteData paramCkByteData, String paramString);
/*       */   
/*       */   public static final native boolean CkEmail_AddRelatedFile(long paramLong1, CkEmail paramCkEmail, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkEmail_addRelatedFile(long paramLong, CkEmail paramCkEmail, String paramString);
/*       */   
/*       */   public static final native boolean CkEmail_AddRelatedFile2(long paramLong, CkEmail paramCkEmail, String paramString1, String paramString2);
/*       */   
/*       */   public static final native void CkEmail_AddRelatedHeader(long paramLong, CkEmail paramCkEmail, int paramInt, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkEmail_AddRelatedString(long paramLong1, CkEmail paramCkEmail, String paramString1, String paramString2, String paramString3, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkEmail_addRelatedString(long paramLong, CkEmail paramCkEmail, String paramString1, String paramString2, String paramString3);
/*       */   
/*       */   public static final native void CkEmail_AddRelatedString2(long paramLong, CkEmail paramCkEmail, String paramString1, String paramString2, String paramString3);
/*       */   
/*       */   public static final native boolean CkEmail_AddStringAttachment(long paramLong, CkEmail paramCkEmail, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkEmail_AddStringAttachment2(long paramLong, CkEmail paramCkEmail, String paramString1, String paramString2, String paramString3);
/*       */   
/*       */   public static final native boolean CkEmail_AddTo(long paramLong, CkEmail paramCkEmail, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkEmail_AesDecrypt(long paramLong, CkEmail paramCkEmail, String paramString);
/*       */   
/*       */   public static final native boolean CkEmail_AesEncrypt(long paramLong, CkEmail paramCkEmail, String paramString);
/*       */   
/*       */   public static final native void CkEmail_AppendToBody(long paramLong, CkEmail paramCkEmail, String paramString);
/*       */   
/*       */   public static final native boolean CkEmail_ApplyFixups(long paramLong, CkEmail paramCkEmail, String paramString);
/*       */   
/*       */   public static final native boolean CkEmail_AspUnpack(long paramLong, CkEmail paramCkEmail, String paramString1, String paramString2, String paramString3, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkEmail_AspUnpack2(long paramLong1, CkEmail paramCkEmail, String paramString1, String paramString2, String paramString3, boolean paramBoolean, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkEmail_AttachMessage(long paramLong1, CkEmail paramCkEmail, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkEmail_BEncodeBytes(long paramLong1, CkEmail paramCkEmail, long paramLong2, CkByteData paramCkByteData, String paramString, long paramLong3, CkString paramCkString);
/*       */   
/*       */   public static final native String CkEmail_bEncodeBytes(long paramLong1, CkEmail paramCkEmail, long paramLong2, CkByteData paramCkByteData, String paramString);
/*       */   
/*       */   public static final native boolean CkEmail_BEncodeString(long paramLong1, CkEmail paramCkEmail, String paramString1, String paramString2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkEmail_bEncodeString(long paramLong, CkEmail paramCkEmail, String paramString1, String paramString2);
/*       */   
/*       */   public static final native void CkEmail_ClearBcc(long paramLong, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native void CkEmail_ClearCC(long paramLong, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native void CkEmail_ClearEncryptCerts(long paramLong, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native void CkEmail_ClearTo(long paramLong, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native long CkEmail_Clone(long paramLong, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native boolean CkEmail_ComputeGlobalKey(long paramLong1, CkEmail paramCkEmail, String paramString, boolean paramBoolean, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkEmail_computeGlobalKey(long paramLong, CkEmail paramCkEmail, String paramString, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkEmail_ComputeGlobalKey2(long paramLong1, CkEmail paramCkEmail, String paramString, boolean paramBoolean, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkEmail_computeGlobalKey2(long paramLong, CkEmail paramCkEmail, String paramString, boolean paramBoolean);
/*       */   
/*       */   public static final native long CkEmail_CreateDsn(long paramLong, CkEmail paramCkEmail, String paramString1, String paramString2, boolean paramBoolean);
/*       */   
/*       */   public static final native long CkEmail_CreateForward(long paramLong, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native long CkEmail_CreateMdn(long paramLong, CkEmail paramCkEmail, String paramString1, String paramString2, boolean paramBoolean);
/*       */   
/*       */   public static final native long CkEmail_CreateReply(long paramLong, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native boolean CkEmail_CreateTempMht(long paramLong1, CkEmail paramCkEmail, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkEmail_createTempMht(long paramLong, CkEmail paramCkEmail, String paramString);
/*       */   
/*       */   public static final native void CkEmail_DropAttachments(long paramLong, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native void CkEmail_DropRelatedItem(long paramLong, CkEmail paramCkEmail, int paramInt);
/*       */   
/*       */   public static final native void CkEmail_DropRelatedItems(long paramLong, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native boolean CkEmail_DropSingleAttachment(long paramLong, CkEmail paramCkEmail, int paramInt);
/*       */   
/*       */   public static final native long CkEmail_FindIssuer(long paramLong1, CkEmail paramCkEmail, long paramLong2, CkCert paramCkCert);
/*       */   
/*       */   public static final native boolean CkEmail_GenerateFilename(long paramLong1, CkEmail paramCkEmail, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkEmail_generateFilename(long paramLong, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native boolean CkEmail_GetAlternativeBody(long paramLong1, CkEmail paramCkEmail, int paramInt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkEmail_getAlternativeBody(long paramLong, CkEmail paramCkEmail, int paramInt);
/*       */   
/*       */   public static final native String CkEmail_alternativeBody(long paramLong, CkEmail paramCkEmail, int paramInt);
/*       */   
/*       */   public static final native boolean CkEmail_GetAlternativeBodyBd(long paramLong1, CkEmail paramCkEmail, int paramInt, long paramLong2, CkBinData paramCkBinData);
/*       */   
/*       */   public static final native boolean CkEmail_GetAlternativeBodyByContentType(long paramLong1, CkEmail paramCkEmail, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkEmail_getAlternativeBodyByContentType(long paramLong, CkEmail paramCkEmail, String paramString);
/*       */   
/*       */   public static final native String CkEmail_alternativeBodyByContentType(long paramLong, CkEmail paramCkEmail, String paramString);
/*       */   
/*       */   public static final native boolean CkEmail_GetAlternativeContentType(long paramLong1, CkEmail paramCkEmail, int paramInt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkEmail_getAlternativeContentType(long paramLong, CkEmail paramCkEmail, int paramInt);
/*       */   
/*       */   public static final native String CkEmail_alternativeContentType(long paramLong, CkEmail paramCkEmail, int paramInt);
/*       */   
/*       */   public static final native boolean CkEmail_GetAltHeaderField(long paramLong1, CkEmail paramCkEmail, int paramInt, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkEmail_getAltHeaderField(long paramLong, CkEmail paramCkEmail, int paramInt, String paramString);
/*       */   
/*       */   public static final native String CkEmail_altHeaderField(long paramLong, CkEmail paramCkEmail, int paramInt, String paramString);
/*       */   
/*       */   public static final native long CkEmail_GetAttachedMessage(long paramLong, CkEmail paramCkEmail, int paramInt);
/*       */   
/*       */   public static final native boolean CkEmail_GetAttachedMessageAttr(long paramLong1, CkEmail paramCkEmail, int paramInt, String paramString1, String paramString2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkEmail_getAttachedMessageAttr(long paramLong, CkEmail paramCkEmail, int paramInt, String paramString1, String paramString2);
/*       */   
/*       */   public static final native String CkEmail_attachedMessageAttr(long paramLong, CkEmail paramCkEmail, int paramInt, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkEmail_GetAttachedMessageFilename(long paramLong1, CkEmail paramCkEmail, int paramInt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkEmail_getAttachedMessageFilename(long paramLong, CkEmail paramCkEmail, int paramInt);
/*       */   
/*       */   public static final native String CkEmail_attachedMessageFilename(long paramLong, CkEmail paramCkEmail, int paramInt);
/*       */   
/*       */   public static final native boolean CkEmail_GetAttachmentAttr(long paramLong1, CkEmail paramCkEmail, int paramInt, String paramString1, String paramString2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkEmail_getAttachmentAttr(long paramLong, CkEmail paramCkEmail, int paramInt, String paramString1, String paramString2);
/*       */   
/*       */   public static final native String CkEmail_attachmentAttr(long paramLong, CkEmail paramCkEmail, int paramInt, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkEmail_GetAttachmentBd(long paramLong1, CkEmail paramCkEmail, int paramInt, long paramLong2, CkBinData paramCkBinData);
/*       */   
/*       */   public static final native boolean CkEmail_GetAttachmentContentID(long paramLong1, CkEmail paramCkEmail, int paramInt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkEmail_getAttachmentContentID(long paramLong, CkEmail paramCkEmail, int paramInt);
/*       */   
/*       */   public static final native String CkEmail_attachmentContentID(long paramLong, CkEmail paramCkEmail, int paramInt);
/*       */   
/*       */   public static final native boolean CkEmail_GetAttachmentContentType(long paramLong1, CkEmail paramCkEmail, int paramInt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkEmail_getAttachmentContentType(long paramLong, CkEmail paramCkEmail, int paramInt);
/*       */   
/*       */   public static final native String CkEmail_attachmentContentType(long paramLong, CkEmail paramCkEmail, int paramInt);
/*       */   
/*       */   public static final native boolean CkEmail_GetAttachmentData(long paramLong1, CkEmail paramCkEmail, int paramInt, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkEmail_GetAttachmentFilename(long paramLong1, CkEmail paramCkEmail, int paramInt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkEmail_getAttachmentFilename(long paramLong, CkEmail paramCkEmail, int paramInt);
/*       */   
/*       */   public static final native String CkEmail_attachmentFilename(long paramLong, CkEmail paramCkEmail, int paramInt);
/*       */   
/*       */   public static final native boolean CkEmail_GetAttachmentHeader(long paramLong1, CkEmail paramCkEmail, int paramInt, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkEmail_getAttachmentHeader(long paramLong, CkEmail paramCkEmail, int paramInt, String paramString);
/*       */   
/*       */   public static final native String CkEmail_attachmentHeader(long paramLong, CkEmail paramCkEmail, int paramInt, String paramString);
/*       */   
/*       */   public static final native int CkEmail_GetAttachmentSize(long paramLong, CkEmail paramCkEmail, int paramInt);
/*       */   
/*       */   public static final native boolean CkEmail_GetAttachmentString(long paramLong1, CkEmail paramCkEmail, int paramInt, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkEmail_getAttachmentString(long paramLong, CkEmail paramCkEmail, int paramInt, String paramString);
/*       */   
/*       */   public static final native String CkEmail_attachmentString(long paramLong, CkEmail paramCkEmail, int paramInt, String paramString);
/*       */   
/*       */   public static final native boolean CkEmail_GetAttachmentStringCrLf(long paramLong1, CkEmail paramCkEmail, int paramInt, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkEmail_getAttachmentStringCrLf(long paramLong, CkEmail paramCkEmail, int paramInt, String paramString);
/*       */   
/*       */   public static final native String CkEmail_attachmentStringCrLf(long paramLong, CkEmail paramCkEmail, int paramInt, String paramString);
/*       */   
/*       */   public static final native boolean CkEmail_GetBcc(long paramLong1, CkEmail paramCkEmail, int paramInt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkEmail_getBcc(long paramLong, CkEmail paramCkEmail, int paramInt);
/*       */   
/*       */   public static final native String CkEmail_bcc(long paramLong, CkEmail paramCkEmail, int paramInt);
/*       */   
/*       */   public static final native boolean CkEmail_GetBccAddr(long paramLong1, CkEmail paramCkEmail, int paramInt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkEmail_getBccAddr(long paramLong, CkEmail paramCkEmail, int paramInt);
/*       */   
/*       */   public static final native String CkEmail_bccAddr(long paramLong, CkEmail paramCkEmail, int paramInt);
/*       */   
/*       */   public static final native boolean CkEmail_GetBccName(long paramLong1, CkEmail paramCkEmail, int paramInt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkEmail_getBccName(long paramLong, CkEmail paramCkEmail, int paramInt);
/*       */   
/*       */   public static final native String CkEmail_bccName(long paramLong, CkEmail paramCkEmail, int paramInt);
/*       */   
/*       */   public static final native boolean CkEmail_GetCC(long paramLong1, CkEmail paramCkEmail, int paramInt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkEmail_getCC(long paramLong, CkEmail paramCkEmail, int paramInt);
/*       */   
/*       */   public static final native String CkEmail_cC(long paramLong, CkEmail paramCkEmail, int paramInt);
/*       */   
/*       */   public static final native boolean CkEmail_GetCcAddr(long paramLong1, CkEmail paramCkEmail, int paramInt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkEmail_getCcAddr(long paramLong, CkEmail paramCkEmail, int paramInt);
/*       */   
/*       */   public static final native String CkEmail_ccAddr(long paramLong, CkEmail paramCkEmail, int paramInt);
/*       */   
/*       */   public static final native boolean CkEmail_GetCcName(long paramLong1, CkEmail paramCkEmail, int paramInt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkEmail_getCcName(long paramLong, CkEmail paramCkEmail, int paramInt);
/*       */   
/*       */   public static final native String CkEmail_ccName(long paramLong, CkEmail paramCkEmail, int paramInt);
/*       */   
/*       */   public static final native boolean CkEmail_GetDeliveryStatusInfo(long paramLong1, CkEmail paramCkEmail, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkEmail_getDeliveryStatusInfo(long paramLong, CkEmail paramCkEmail, String paramString);
/*       */   
/*       */   public static final native String CkEmail_deliveryStatusInfo(long paramLong, CkEmail paramCkEmail, String paramString);
/*       */   
/*       */   public static final native long CkEmail_GetDigest(long paramLong, CkEmail paramCkEmail, int paramInt);
/*       */   
/*       */   public static final native long CkEmail_GetDsnFinalRecipients(long paramLong, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native long CkEmail_GetDt(long paramLong, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native long CkEmail_GetEncryptCert(long paramLong, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native long CkEmail_GetEncryptedByCert(long paramLong, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native boolean CkEmail_GetFileContent(long paramLong1, CkEmail paramCkEmail, String paramString, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkEmail_GetHeaderField(long paramLong1, CkEmail paramCkEmail, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkEmail_getHeaderField(long paramLong, CkEmail paramCkEmail, String paramString);
/*       */   
/*       */   public static final native String CkEmail_headerField(long paramLong, CkEmail paramCkEmail, String paramString);
/*       */   
/*       */   public static final native boolean CkEmail_GetHeaderFieldName(long paramLong1, CkEmail paramCkEmail, int paramInt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkEmail_getHeaderFieldName(long paramLong, CkEmail paramCkEmail, int paramInt);
/*       */   
/*       */   public static final native String CkEmail_headerFieldName(long paramLong, CkEmail paramCkEmail, int paramInt);
/*       */   
/*       */   public static final native boolean CkEmail_GetHeaderFieldValue(long paramLong1, CkEmail paramCkEmail, int paramInt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkEmail_getHeaderFieldValue(long paramLong, CkEmail paramCkEmail, int paramInt);
/*       */   
/*       */   public static final native String CkEmail_headerFieldValue(long paramLong, CkEmail paramCkEmail, int paramInt);
/*       */   
/*       */   public static final native boolean CkEmail_GetHtmlBody(long paramLong1, CkEmail paramCkEmail, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkEmail_getHtmlBody(long paramLong, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native String CkEmail_htmlBody(long paramLong, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native int CkEmail_GetImapUid(long paramLong, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native long CkEmail_GetLinkedDomains(long paramLong, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native boolean CkEmail_GetMbHeaderField(long paramLong1, CkEmail paramCkEmail, String paramString1, String paramString2, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkEmail_GetMbHtmlBody(long paramLong1, CkEmail paramCkEmail, String paramString, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkEmail_GetMbPlainTextBody(long paramLong1, CkEmail paramCkEmail, String paramString, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkEmail_GetMime(long paramLong1, CkEmail paramCkEmail, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkEmail_getMime(long paramLong, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native String CkEmail_mime(long paramLong, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native boolean CkEmail_GetMimeBd(long paramLong1, CkEmail paramCkEmail, long paramLong2, CkBinData paramCkBinData);
/*       */   
/*       */   public static final native boolean CkEmail_GetMimeBinary(long paramLong1, CkEmail paramCkEmail, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkEmail_GetMimeSb(long paramLong1, CkEmail paramCkEmail, long paramLong2, CkStringBuilder paramCkStringBuilder);
/*       */   
/*       */   public static final native boolean CkEmail_GetNthBinaryPartOfType(long paramLong1, CkEmail paramCkEmail, int paramInt, String paramString, boolean paramBoolean1, boolean paramBoolean2, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkEmail_GetNthTextPartOfType(long paramLong1, CkEmail paramCkEmail, int paramInt, String paramString, boolean paramBoolean1, boolean paramBoolean2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkEmail_getNthTextPartOfType(long paramLong, CkEmail paramCkEmail, int paramInt, String paramString, boolean paramBoolean1, boolean paramBoolean2);
/*       */   
/*       */   public static final native String CkEmail_nthTextPartOfType(long paramLong, CkEmail paramCkEmail, int paramInt, String paramString, boolean paramBoolean1, boolean paramBoolean2);
/*       */   
/*       */   public static final native int CkEmail_GetNumPartsOfType(long paramLong, CkEmail paramCkEmail, String paramString, boolean paramBoolean1, boolean paramBoolean2);
/*       */   
/*       */   public static final native boolean CkEmail_GetPlainTextBody(long paramLong1, CkEmail paramCkEmail, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkEmail_getPlainTextBody(long paramLong, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native String CkEmail_plainTextBody(long paramLong, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native boolean CkEmail_GetRelatedAttr(long paramLong1, CkEmail paramCkEmail, int paramInt, String paramString1, String paramString2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkEmail_getRelatedAttr(long paramLong, CkEmail paramCkEmail, int paramInt, String paramString1, String paramString2);
/*       */   
/*       */   public static final native String CkEmail_relatedAttr(long paramLong, CkEmail paramCkEmail, int paramInt, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkEmail_GetRelatedContentID(long paramLong1, CkEmail paramCkEmail, int paramInt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkEmail_getRelatedContentID(long paramLong, CkEmail paramCkEmail, int paramInt);
/*       */   
/*       */   public static final native String CkEmail_relatedContentID(long paramLong, CkEmail paramCkEmail, int paramInt);
/*       */   
/*       */   public static final native boolean CkEmail_GetRelatedContentLocation(long paramLong1, CkEmail paramCkEmail, int paramInt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkEmail_getRelatedContentLocation(long paramLong, CkEmail paramCkEmail, int paramInt);
/*       */   
/*       */   public static final native String CkEmail_relatedContentLocation(long paramLong, CkEmail paramCkEmail, int paramInt);
/*       */   
/*       */   public static final native boolean CkEmail_GetRelatedContentType(long paramLong1, CkEmail paramCkEmail, int paramInt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkEmail_getRelatedContentType(long paramLong, CkEmail paramCkEmail, int paramInt);
/*       */   
/*       */   public static final native String CkEmail_relatedContentType(long paramLong, CkEmail paramCkEmail, int paramInt);
/*       */   
/*       */   public static final native boolean CkEmail_GetRelatedData(long paramLong1, CkEmail paramCkEmail, int paramInt, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkEmail_GetRelatedFilename(long paramLong1, CkEmail paramCkEmail, int paramInt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkEmail_getRelatedFilename(long paramLong, CkEmail paramCkEmail, int paramInt);
/*       */   
/*       */   public static final native String CkEmail_relatedFilename(long paramLong, CkEmail paramCkEmail, int paramInt);
/*       */   
/*       */   public static final native boolean CkEmail_GetRelatedString(long paramLong1, CkEmail paramCkEmail, int paramInt, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkEmail_getRelatedString(long paramLong, CkEmail paramCkEmail, int paramInt, String paramString);
/*       */   
/*       */   public static final native String CkEmail_relatedString(long paramLong, CkEmail paramCkEmail, int paramInt, String paramString);
/*       */   
/*       */   public static final native boolean CkEmail_GetRelatedStringCrLf(long paramLong1, CkEmail paramCkEmail, int paramInt, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkEmail_getRelatedStringCrLf(long paramLong, CkEmail paramCkEmail, int paramInt, String paramString);
/*       */   
/*       */   public static final native String CkEmail_relatedStringCrLf(long paramLong, CkEmail paramCkEmail, int paramInt, String paramString);
/*       */   
/*       */   public static final native boolean CkEmail_GetReplacePattern(long paramLong1, CkEmail paramCkEmail, int paramInt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkEmail_getReplacePattern(long paramLong, CkEmail paramCkEmail, int paramInt);
/*       */   
/*       */   public static final native String CkEmail_replacePattern(long paramLong, CkEmail paramCkEmail, int paramInt);
/*       */   
/*       */   public static final native boolean CkEmail_GetReplaceString(long paramLong1, CkEmail paramCkEmail, int paramInt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkEmail_getReplaceString(long paramLong, CkEmail paramCkEmail, int paramInt);
/*       */   
/*       */   public static final native String CkEmail_replaceString(long paramLong, CkEmail paramCkEmail, int paramInt);
/*       */   
/*       */   public static final native boolean CkEmail_GetReplaceString2(long paramLong1, CkEmail paramCkEmail, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkEmail_getReplaceString2(long paramLong, CkEmail paramCkEmail, String paramString);
/*       */   
/*       */   public static final native String CkEmail_replaceString2(long paramLong, CkEmail paramCkEmail, String paramString);
/*       */   
/*       */   public static final native boolean CkEmail_GetReport(long paramLong1, CkEmail paramCkEmail, int paramInt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkEmail_getReport(long paramLong, CkEmail paramCkEmail, int paramInt);
/*       */   
/*       */   public static final native String CkEmail_report(long paramLong, CkEmail paramCkEmail, int paramInt);
/*       */   
/*       */   public static final native long CkEmail_GetSignedByCert(long paramLong, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native long CkEmail_GetSignedByCertChain(long paramLong, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native long CkEmail_GetSigningCert(long paramLong, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native boolean CkEmail_GetTo(long paramLong1, CkEmail paramCkEmail, int paramInt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkEmail_getTo(long paramLong, CkEmail paramCkEmail, int paramInt);
/*       */   
/*       */   public static final native String CkEmail_to(long paramLong, CkEmail paramCkEmail, int paramInt);
/*       */   
/*       */   public static final native boolean CkEmail_GetToAddr(long paramLong1, CkEmail paramCkEmail, int paramInt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkEmail_getToAddr(long paramLong, CkEmail paramCkEmail, int paramInt);
/*       */   
/*       */   public static final native String CkEmail_toAddr(long paramLong, CkEmail paramCkEmail, int paramInt);
/*       */   
/*       */   public static final native boolean CkEmail_GetToName(long paramLong1, CkEmail paramCkEmail, int paramInt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkEmail_getToName(long paramLong, CkEmail paramCkEmail, int paramInt);
/*       */   
/*       */   public static final native String CkEmail_toName(long paramLong, CkEmail paramCkEmail, int paramInt);
/*       */   
/*       */   public static final native boolean CkEmail_GetXml(long paramLong1, CkEmail paramCkEmail, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkEmail_getXml(long paramLong, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native String CkEmail_xml(long paramLong, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native boolean CkEmail_HasHeaderMatching(long paramLong, CkEmail paramCkEmail, String paramString1, String paramString2, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkEmail_HasHtmlBody(long paramLong, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native boolean CkEmail_HasPlainTextBody(long paramLong, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native boolean CkEmail_IsMultipartReport(long paramLong, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native boolean CkEmail_LoadEml(long paramLong, CkEmail paramCkEmail, String paramString);
/*       */   
/*       */   public static final native boolean CkEmail_LoadTaskResult(long paramLong1, CkEmail paramCkEmail, long paramLong2, CkTask paramCkTask);
/*       */   
/*       */   public static final native boolean CkEmail_LoadXml(long paramLong, CkEmail paramCkEmail, String paramString);
/*       */   
/*       */   public static final native boolean CkEmail_LoadXmlString(long paramLong, CkEmail paramCkEmail, String paramString);
/*       */   
/*       */   public static final native boolean CkEmail_QEncodeBytes(long paramLong1, CkEmail paramCkEmail, long paramLong2, CkByteData paramCkByteData, String paramString, long paramLong3, CkString paramCkString);
/*       */   
/*       */   public static final native String CkEmail_qEncodeBytes(long paramLong1, CkEmail paramCkEmail, long paramLong2, CkByteData paramCkByteData, String paramString);
/*       */   
/*       */   public static final native boolean CkEmail_QEncodeString(long paramLong1, CkEmail paramCkEmail, String paramString1, String paramString2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkEmail_qEncodeString(long paramLong, CkEmail paramCkEmail, String paramString1, String paramString2);
/*       */   
/*       */   public static final native void CkEmail_RemoveAttachedMessage(long paramLong, CkEmail paramCkEmail, int paramInt);
/*       */   
/*       */   public static final native void CkEmail_RemoveAttachedMessages(long paramLong, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native void CkEmail_RemoveAttachmentPaths(long paramLong, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native void CkEmail_RemoveHeaderField(long paramLong, CkEmail paramCkEmail, String paramString);
/*       */   
/*       */   public static final native void CkEmail_RemoveHtmlAlternative(long paramLong, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native void CkEmail_RemovePlainTextAlternative(long paramLong, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native boolean CkEmail_SaveAllAttachments(long paramLong, CkEmail paramCkEmail, String paramString);
/*       */   
/*       */   public static final native boolean CkEmail_SaveAttachedFile(long paramLong, CkEmail paramCkEmail, int paramInt, String paramString);
/*       */   
/*       */   public static final native boolean CkEmail_SaveEml(long paramLong, CkEmail paramCkEmail, String paramString);
/*       */   
/*       */   public static final native boolean CkEmail_SaveLastError(long paramLong, CkEmail paramCkEmail, String paramString);
/*       */   
/*       */   public static final native boolean CkEmail_SaveRelatedItem(long paramLong, CkEmail paramCkEmail, int paramInt, String paramString);
/*       */   
/*       */   public static final native boolean CkEmail_SaveXml(long paramLong, CkEmail paramCkEmail, String paramString);
/*       */   
/*       */   public static final native boolean CkEmail_SetAttachmentCharset(long paramLong, CkEmail paramCkEmail, int paramInt, String paramString);
/*       */   
/*       */   public static final native boolean CkEmail_SetAttachmentDisposition(long paramLong, CkEmail paramCkEmail, int paramInt, String paramString);
/*       */   
/*       */   public static final native boolean CkEmail_SetAttachmentFilename(long paramLong, CkEmail paramCkEmail, int paramInt, String paramString);
/*       */   
/*       */   public static final native boolean CkEmail_SetBinaryBody(long paramLong1, CkEmail paramCkEmail, long paramLong2, CkByteData paramCkByteData, String paramString1, String paramString2, String paramString3);
/*       */   
/*       */   public static final native boolean CkEmail_SetCSP(long paramLong1, CkEmail paramCkEmail, long paramLong2, CkCsp paramCkCsp);
/*       */   
/*       */   public static final native boolean CkEmail_SetDecryptCert(long paramLong1, CkEmail paramCkEmail, long paramLong2, CkCert paramCkCert);
/*       */   
/*       */   public static final native boolean CkEmail_SetDecryptCert2(long paramLong1, CkEmail paramCkEmail, long paramLong2, CkCert paramCkCert, long paramLong3, CkPrivateKey paramCkPrivateKey);
/*       */   
/*       */   public static final native boolean CkEmail_SetDt(long paramLong1, CkEmail paramCkEmail, long paramLong2, CkDateTime paramCkDateTime);
/*       */   
/*       */   public static final native void CkEmail_SetEdifactBody(long paramLong, CkEmail paramCkEmail, String paramString1, String paramString2, String paramString3, String paramString4);
/*       */   
/*       */   public static final native boolean CkEmail_SetEncryptCert(long paramLong1, CkEmail paramCkEmail, long paramLong2, CkCert paramCkCert);
/*       */   
/*       */   public static final native boolean CkEmail_SetFromMimeBd(long paramLong1, CkEmail paramCkEmail, long paramLong2, CkBinData paramCkBinData);
/*       */   
/*       */   public static final native boolean CkEmail_SetFromMimeBytes(long paramLong1, CkEmail paramCkEmail, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkEmail_SetFromMimeBytes2(long paramLong1, CkEmail paramCkEmail, long paramLong2, CkByteData paramCkByteData, String paramString);
/*       */   
/*       */   public static final native boolean CkEmail_SetFromMimeSb(long paramLong1, CkEmail paramCkEmail, long paramLong2, CkStringBuilder paramCkStringBuilder);
/*       */   
/*       */   public static final native boolean CkEmail_SetFromMimeText(long paramLong, CkEmail paramCkEmail, String paramString);
/*       */   
/*       */   public static final native boolean CkEmail_SetFromXmlText(long paramLong, CkEmail paramCkEmail, String paramString);
/*       */   
/*       */   public static final native void CkEmail_SetHtmlBody(long paramLong, CkEmail paramCkEmail, String paramString);
/*       */   
/*       */   public static final native boolean CkEmail_SetMbHtmlBody(long paramLong1, CkEmail paramCkEmail, String paramString, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkEmail_SetMbPlainTextBody(long paramLong1, CkEmail paramCkEmail, String paramString, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkEmail_SetRelatedFilename(long paramLong, CkEmail paramCkEmail, int paramInt, String paramString);
/*       */   
/*       */   public static final native boolean CkEmail_SetReplacePattern(long paramLong, CkEmail paramCkEmail, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkEmail_SetSigningCert(long paramLong1, CkEmail paramCkEmail, long paramLong2, CkCert paramCkCert);
/*       */   
/*       */   public static final native boolean CkEmail_SetSigningCert2(long paramLong1, CkEmail paramCkEmail, long paramLong2, CkCert paramCkCert, long paramLong3, CkPrivateKey paramCkPrivateKey);
/*       */   
/*       */   public static final native void CkEmail_SetTextBody(long paramLong, CkEmail paramCkEmail, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkEmail_UidlEquals(long paramLong1, CkEmail paramCkEmail1, long paramLong2, CkEmail paramCkEmail2);
/*       */   
/*       */   public static final native boolean CkEmail_UnpackHtml(long paramLong, CkEmail paramCkEmail, String paramString1, String paramString2, String paramString3);
/*       */   
/*       */   public static final native void CkEmail_UnSpamify(long paramLong, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native boolean CkEmail_UnzipAttachments(long paramLong, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native boolean CkEmail_UseCertVault(long paramLong1, CkEmail paramCkEmail, long paramLong2, CkXmlCertVault paramCkXmlCertVault);
/*       */   
/*       */   public static final native boolean CkEmail_ZipAttachments(long paramLong, CkEmail paramCkEmail, String paramString);
/*       */   
/*       */   public static final native long new_CkEmailBundle();
/*       */   
/*       */   public static final native void delete_CkEmailBundle(long paramLong);
/*       */   
/*       */   public static final native void CkEmailBundle_LastErrorXml(long paramLong1, CkEmailBundle paramCkEmailBundle, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkEmailBundle_LastErrorHtml(long paramLong1, CkEmailBundle paramCkEmailBundle, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkEmailBundle_LastErrorText(long paramLong1, CkEmailBundle paramCkEmailBundle, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkEmailBundle_get_DebugLogFilePath(long paramLong1, CkEmailBundle paramCkEmailBundle, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkEmailBundle_debugLogFilePath(long paramLong, CkEmailBundle paramCkEmailBundle);
/*       */   
/*       */   public static final native void CkEmailBundle_put_DebugLogFilePath(long paramLong, CkEmailBundle paramCkEmailBundle, String paramString);
/*       */   
/*       */   public static final native void CkEmailBundle_get_LastErrorHtml(long paramLong1, CkEmailBundle paramCkEmailBundle, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkEmailBundle_lastErrorHtml(long paramLong, CkEmailBundle paramCkEmailBundle);
/*       */   
/*       */   public static final native void CkEmailBundle_get_LastErrorText(long paramLong1, CkEmailBundle paramCkEmailBundle, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkEmailBundle_lastErrorText(long paramLong, CkEmailBundle paramCkEmailBundle);
/*       */   
/*       */   public static final native void CkEmailBundle_get_LastErrorXml(long paramLong1, CkEmailBundle paramCkEmailBundle, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkEmailBundle_lastErrorXml(long paramLong, CkEmailBundle paramCkEmailBundle);
/*       */   
/*       */   public static final native boolean CkEmailBundle_get_LastMethodSuccess(long paramLong, CkEmailBundle paramCkEmailBundle);
/*       */   
/*       */   public static final native void CkEmailBundle_put_LastMethodSuccess(long paramLong, CkEmailBundle paramCkEmailBundle, boolean paramBoolean);
/*       */   
/*       */   public static final native int CkEmailBundle_get_MessageCount(long paramLong, CkEmailBundle paramCkEmailBundle);
/*       */   
/*       */   public static final native boolean CkEmailBundle_get_VerboseLogging(long paramLong, CkEmailBundle paramCkEmailBundle);
/*       */   
/*       */   public static final native void CkEmailBundle_put_VerboseLogging(long paramLong, CkEmailBundle paramCkEmailBundle, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkEmailBundle_get_Version(long paramLong1, CkEmailBundle paramCkEmailBundle, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkEmailBundle_version(long paramLong, CkEmailBundle paramCkEmailBundle);
/*       */   
/*       */   public static final native boolean CkEmailBundle_AddEmail(long paramLong1, CkEmailBundle paramCkEmailBundle, long paramLong2, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native long CkEmailBundle_FindByHeader(long paramLong, CkEmailBundle paramCkEmailBundle, String paramString1, String paramString2);
/*       */   
/*       */   public static final native long CkEmailBundle_GetEmail(long paramLong, CkEmailBundle paramCkEmailBundle, int paramInt);
/*       */   
/*       */   public static final native long CkEmailBundle_GetUidls(long paramLong, CkEmailBundle paramCkEmailBundle);
/*       */   
/*       */   public static final native boolean CkEmailBundle_GetXml(long paramLong1, CkEmailBundle paramCkEmailBundle, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkEmailBundle_getXml(long paramLong, CkEmailBundle paramCkEmailBundle);
/*       */   
/*       */   public static final native String CkEmailBundle_xml(long paramLong, CkEmailBundle paramCkEmailBundle);
/*       */   
/*       */   public static final native boolean CkEmailBundle_LoadTaskResult(long paramLong1, CkEmailBundle paramCkEmailBundle, long paramLong2, CkTask paramCkTask);
/*       */   
/*       */   public static final native boolean CkEmailBundle_LoadXml(long paramLong, CkEmailBundle paramCkEmailBundle, String paramString);
/*       */   
/*       */   public static final native boolean CkEmailBundle_LoadXmlString(long paramLong, CkEmailBundle paramCkEmailBundle, String paramString);
/*       */   
/*       */   public static final native boolean CkEmailBundle_RemoveEmail(long paramLong1, CkEmailBundle paramCkEmailBundle, long paramLong2, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native boolean CkEmailBundle_RemoveEmailByIndex(long paramLong, CkEmailBundle paramCkEmailBundle, int paramInt);
/*       */   
/*       */   public static final native boolean CkEmailBundle_SaveLastError(long paramLong, CkEmailBundle paramCkEmailBundle, String paramString);
/*       */   
/*       */   public static final native boolean CkEmailBundle_SaveXml(long paramLong, CkEmailBundle paramCkEmailBundle, String paramString);
/*       */   
/*       */   public static final native void CkEmailBundle_SortByDate(long paramLong, CkEmailBundle paramCkEmailBundle, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkEmailBundle_SortByRecipient(long paramLong, CkEmailBundle paramCkEmailBundle, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkEmailBundle_SortBySender(long paramLong, CkEmailBundle paramCkEmailBundle, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkEmailBundle_SortBySubject(long paramLong, CkEmailBundle paramCkEmailBundle, boolean paramBoolean);
/*       */   
/*       */   public static final native long new_CkFileAccess();
/*       */   
/*       */   public static final native void delete_CkFileAccess(long paramLong);
/*       */   
/*       */   public static final native void CkFileAccess_LastErrorXml(long paramLong1, CkFileAccess paramCkFileAccess, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkFileAccess_LastErrorHtml(long paramLong1, CkFileAccess paramCkFileAccess, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkFileAccess_LastErrorText(long paramLong1, CkFileAccess paramCkFileAccess, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkFileAccess_get_CurrentDir(long paramLong1, CkFileAccess paramCkFileAccess, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkFileAccess_currentDir(long paramLong, CkFileAccess paramCkFileAccess);
/*       */   
/*       */   public static final native void CkFileAccess_get_DebugLogFilePath(long paramLong1, CkFileAccess paramCkFileAccess, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkFileAccess_debugLogFilePath(long paramLong, CkFileAccess paramCkFileAccess);
/*       */   
/*       */   public static final native void CkFileAccess_put_DebugLogFilePath(long paramLong, CkFileAccess paramCkFileAccess, String paramString);
/*       */   
/*       */   public static final native boolean CkFileAccess_get_EndOfFile(long paramLong, CkFileAccess paramCkFileAccess);
/*       */   
/*       */   public static final native int CkFileAccess_get_FileOpenError(long paramLong, CkFileAccess paramCkFileAccess);
/*       */   
/*       */   public static final native void CkFileAccess_get_FileOpenErrorMsg(long paramLong1, CkFileAccess paramCkFileAccess, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkFileAccess_fileOpenErrorMsg(long paramLong, CkFileAccess paramCkFileAccess);
/*       */   
/*       */   public static final native void CkFileAccess_get_LastErrorHtml(long paramLong1, CkFileAccess paramCkFileAccess, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkFileAccess_lastErrorHtml(long paramLong, CkFileAccess paramCkFileAccess);
/*       */   
/*       */   public static final native void CkFileAccess_get_LastErrorText(long paramLong1, CkFileAccess paramCkFileAccess, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkFileAccess_lastErrorText(long paramLong, CkFileAccess paramCkFileAccess);
/*       */   
/*       */   public static final native void CkFileAccess_get_LastErrorXml(long paramLong1, CkFileAccess paramCkFileAccess, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkFileAccess_lastErrorXml(long paramLong, CkFileAccess paramCkFileAccess);
/*       */   
/*       */   public static final native boolean CkFileAccess_get_LastMethodSuccess(long paramLong, CkFileAccess paramCkFileAccess);
/*       */   
/*       */   public static final native void CkFileAccess_put_LastMethodSuccess(long paramLong, CkFileAccess paramCkFileAccess, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkFileAccess_get_VerboseLogging(long paramLong, CkFileAccess paramCkFileAccess);
/*       */   
/*       */   public static final native void CkFileAccess_put_VerboseLogging(long paramLong, CkFileAccess paramCkFileAccess, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkFileAccess_get_Version(long paramLong1, CkFileAccess paramCkFileAccess, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkFileAccess_version(long paramLong, CkFileAccess paramCkFileAccess);
/*       */   
/*       */   public static final native boolean CkFileAccess_AppendAnsi(long paramLong, CkFileAccess paramCkFileAccess, String paramString);
/*       */   
/*       */   public static final native boolean CkFileAccess_AppendText(long paramLong, CkFileAccess paramCkFileAccess, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkFileAccess_AppendUnicodeBOM(long paramLong, CkFileAccess paramCkFileAccess);
/*       */   
/*       */   public static final native boolean CkFileAccess_AppendUtf8BOM(long paramLong, CkFileAccess paramCkFileAccess);
/*       */   
/*       */   public static final native boolean CkFileAccess_DirAutoCreate(long paramLong, CkFileAccess paramCkFileAccess, String paramString);
/*       */   
/*       */   public static final native boolean CkFileAccess_DirCreate(long paramLong, CkFileAccess paramCkFileAccess, String paramString);
/*       */   
/*       */   public static final native boolean CkFileAccess_DirDelete(long paramLong, CkFileAccess paramCkFileAccess, String paramString);
/*       */   
/*       */   public static final native boolean CkFileAccess_DirEnsureExists(long paramLong, CkFileAccess paramCkFileAccess, String paramString);
/*       */   
/*       */   public static final native void CkFileAccess_FileClose(long paramLong, CkFileAccess paramCkFileAccess);
/*       */   
/*       */   public static final native boolean CkFileAccess_FileContentsEqual(long paramLong, CkFileAccess paramCkFileAccess, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkFileAccess_FileCopy(long paramLong, CkFileAccess paramCkFileAccess, String paramString1, String paramString2, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkFileAccess_FileDelete(long paramLong, CkFileAccess paramCkFileAccess, String paramString);
/*       */   
/*       */   public static final native boolean CkFileAccess_FileExists(long paramLong, CkFileAccess paramCkFileAccess, String paramString);
/*       */   
/*       */   public static final native int CkFileAccess_FileExists3(long paramLong, CkFileAccess paramCkFileAccess, String paramString);
/*       */   
/*       */   public static final native boolean CkFileAccess_FileOpen(long paramLong1, CkFileAccess paramCkFileAccess, String paramString, long paramLong2, long paramLong3, long paramLong4, long paramLong5);
/*       */   
/*       */   public static final native boolean CkFileAccess_FileRead(long paramLong1, CkFileAccess paramCkFileAccess, int paramInt, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkFileAccess_FileReadBd(long paramLong1, CkFileAccess paramCkFileAccess, int paramInt, long paramLong2, CkBinData paramCkBinData);
/*       */   
/*       */   public static final native boolean CkFileAccess_FileRename(long paramLong, CkFileAccess paramCkFileAccess, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkFileAccess_FileSeek(long paramLong, CkFileAccess paramCkFileAccess, int paramInt1, int paramInt2);
/*       */   
/*       */   public static final native int CkFileAccess_FileSize(long paramLong, CkFileAccess paramCkFileAccess, String paramString);
/*       */   
/*       */   public static final native boolean CkFileAccess_FileWrite(long paramLong1, CkFileAccess paramCkFileAccess, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkFileAccess_FileWriteBd(long paramLong1, CkFileAccess paramCkFileAccess, long paramLong2, CkBinData paramCkBinData, int paramInt1, int paramInt2);
/*       */   
/*       */   public static final native boolean CkFileAccess_GenBlockId(long paramLong1, CkFileAccess paramCkFileAccess, int paramInt1, int paramInt2, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkFileAccess_genBlockId(long paramLong, CkFileAccess paramCkFileAccess, int paramInt1, int paramInt2, String paramString);
/*       */   
/*       */   public static final native boolean CkFileAccess_GetDirectoryName(long paramLong1, CkFileAccess paramCkFileAccess, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkFileAccess_getDirectoryName(long paramLong, CkFileAccess paramCkFileAccess, String paramString);
/*       */   
/*       */   public static final native String CkFileAccess_directoryName(long paramLong, CkFileAccess paramCkFileAccess, String paramString);
/*       */   
/*       */   public static final native boolean CkFileAccess_GetExtension(long paramLong1, CkFileAccess paramCkFileAccess, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkFileAccess_getExtension(long paramLong, CkFileAccess paramCkFileAccess, String paramString);
/*       */   
/*       */   public static final native String CkFileAccess_extension(long paramLong, CkFileAccess paramCkFileAccess, String paramString);
/*       */   
/*       */   public static final native boolean CkFileAccess_GetFileName(long paramLong1, CkFileAccess paramCkFileAccess, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkFileAccess_getFileName(long paramLong, CkFileAccess paramCkFileAccess, String paramString);
/*       */   
/*       */   public static final native String CkFileAccess_fileName(long paramLong, CkFileAccess paramCkFileAccess, String paramString);
/*       */   
/*       */   public static final native boolean CkFileAccess_GetFileNameWithoutExtension(long paramLong1, CkFileAccess paramCkFileAccess, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkFileAccess_getFileNameWithoutExtension(long paramLong, CkFileAccess paramCkFileAccess, String paramString);
/*       */   
/*       */   public static final native String CkFileAccess_fileNameWithoutExtension(long paramLong, CkFileAccess paramCkFileAccess, String paramString);
/*       */   
/*       */   public static final native long CkFileAccess_GetFileTime(long paramLong, CkFileAccess paramCkFileAccess, String paramString, int paramInt);
/*       */   
/*       */   public static final native long CkFileAccess_GetLastModified(long paramLong, CkFileAccess paramCkFileAccess, String paramString);
/*       */   
/*       */   public static final native int CkFileAccess_GetNumBlocks(long paramLong, CkFileAccess paramCkFileAccess, int paramInt);
/*       */   
/*       */   public static final native boolean CkFileAccess_GetTempFilename(long paramLong1, CkFileAccess paramCkFileAccess, String paramString1, String paramString2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkFileAccess_getTempFilename(long paramLong, CkFileAccess paramCkFileAccess, String paramString1, String paramString2);
/*       */   
/*       */   public static final native String CkFileAccess_tempFilename(long paramLong, CkFileAccess paramCkFileAccess, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkFileAccess_OpenForAppend(long paramLong, CkFileAccess paramCkFileAccess, String paramString);
/*       */   
/*       */   public static final native boolean CkFileAccess_OpenForRead(long paramLong, CkFileAccess paramCkFileAccess, String paramString);
/*       */   
/*       */   public static final native boolean CkFileAccess_OpenForReadWrite(long paramLong, CkFileAccess paramCkFileAccess, String paramString);
/*       */   
/*       */   public static final native boolean CkFileAccess_OpenForWrite(long paramLong, CkFileAccess paramCkFileAccess, String paramString);
/*       */   
/*       */   public static final native boolean CkFileAccess_ReadBinaryToEncoded(long paramLong1, CkFileAccess paramCkFileAccess, String paramString1, String paramString2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkFileAccess_readBinaryToEncoded(long paramLong, CkFileAccess paramCkFileAccess, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkFileAccess_ReadBlock(long paramLong1, CkFileAccess paramCkFileAccess, int paramInt1, int paramInt2, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkFileAccess_ReadEntireFile(long paramLong1, CkFileAccess paramCkFileAccess, String paramString, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkFileAccess_ReadEntireTextFile(long paramLong1, CkFileAccess paramCkFileAccess, String paramString1, String paramString2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkFileAccess_readEntireTextFile(long paramLong, CkFileAccess paramCkFileAccess, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkFileAccess_ReassembleFile(long paramLong, CkFileAccess paramCkFileAccess, String paramString1, String paramString2, String paramString3, String paramString4);
/*       */   
/*       */   public static final native int CkFileAccess_ReplaceStrings(long paramLong, CkFileAccess paramCkFileAccess, String paramString1, String paramString2, String paramString3, String paramString4);
/*       */   
/*       */   public static final native boolean CkFileAccess_SaveLastError(long paramLong, CkFileAccess paramCkFileAccess, String paramString);
/*       */   
/*       */   public static final native boolean CkFileAccess_SetCurrentDir(long paramLong, CkFileAccess paramCkFileAccess, String paramString);
/*       */   
/*       */   public static final native boolean CkFileAccess_SetFileTimes(long paramLong1, CkFileAccess paramCkFileAccess, String paramString, long paramLong2, CkDateTime paramCkDateTime1, long paramLong3, CkDateTime paramCkDateTime2, long paramLong4, CkDateTime paramCkDateTime3);
/*       */   
/*       */   public static final native boolean CkFileAccess_SetLastModified(long paramLong1, CkFileAccess paramCkFileAccess, String paramString, long paramLong2, CkDateTime paramCkDateTime);
/*       */   
/*       */   public static final native boolean CkFileAccess_SplitFile(long paramLong, CkFileAccess paramCkFileAccess, String paramString1, String paramString2, String paramString3, int paramInt, String paramString4);
/*       */   
/*       */   public static final native boolean CkFileAccess_TreeDelete(long paramLong, CkFileAccess paramCkFileAccess, String paramString);
/*       */   
/*       */   public static final native boolean CkFileAccess_WriteEntireFile(long paramLong1, CkFileAccess paramCkFileAccess, String paramString, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkFileAccess_WriteEntireTextFile(long paramLong, CkFileAccess paramCkFileAccess, String paramString1, String paramString2, String paramString3, boolean paramBoolean);
/*       */   
/*       */   public static final native long new_CkFtp2();
/*       */   
/*       */   public static final native void delete_CkFtp2(long paramLong);
/*       */   
/*       */   public static final native void CkFtp2_LastErrorXml(long paramLong1, CkFtp2 paramCkFtp2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkFtp2_LastErrorHtml(long paramLong1, CkFtp2 paramCkFtp2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkFtp2_LastErrorText(long paramLong1, CkFtp2 paramCkFtp2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkFtp2_put_EventCallbackObject(long paramLong1, CkFtp2 paramCkFtp2, long paramLong2, CkFtp2Progress paramCkFtp2Progress);
/*       */   
/*       */   public static final native boolean CkFtp2_get_AbortCurrent(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native void CkFtp2_put_AbortCurrent(long paramLong, CkFtp2 paramCkFtp2, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkFtp2_get_Account(long paramLong1, CkFtp2 paramCkFtp2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkFtp2_account(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native void CkFtp2_put_Account(long paramLong, CkFtp2 paramCkFtp2, String paramString);
/*       */   
/*       */   public static final native int CkFtp2_get_ActivePortRangeEnd(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native void CkFtp2_put_ActivePortRangeEnd(long paramLong, CkFtp2 paramCkFtp2, int paramInt);
/*       */   
/*       */   public static final native int CkFtp2_get_ActivePortRangeStart(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native void CkFtp2_put_ActivePortRangeStart(long paramLong, CkFtp2 paramCkFtp2, int paramInt);
/*       */   
/*       */   public static final native long CkFtp2_get_AllocateSize(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native void CkFtp2_put_AllocateSize(long paramLong1, CkFtp2 paramCkFtp2, long paramLong2);
/*       */   
/*       */   public static final native boolean CkFtp2_get_AllowMlsd(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native void CkFtp2_put_AllowMlsd(long paramLong, CkFtp2 paramCkFtp2, boolean paramBoolean);
/*       */   
/*       */   public static final native long CkFtp2_get_AsyncBytesReceived(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native void CkFtp2_get_AsyncBytesReceivedStr(long paramLong1, CkFtp2 paramCkFtp2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkFtp2_asyncBytesReceivedStr(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native long CkFtp2_get_AsyncBytesSent(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native void CkFtp2_get_AsyncBytesSentStr(long paramLong1, CkFtp2 paramCkFtp2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkFtp2_asyncBytesSentStr(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native boolean CkFtp2_get_AsyncFinished(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native void CkFtp2_get_AsyncLog(long paramLong1, CkFtp2 paramCkFtp2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkFtp2_asyncLog(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native long CkFtp2_get_AsyncPercentDone(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native boolean CkFtp2_get_AsyncSuccess(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native boolean CkFtp2_get_AuthSsl(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native void CkFtp2_put_AuthSsl(long paramLong, CkFtp2 paramCkFtp2, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkFtp2_get_AuthTls(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native void CkFtp2_put_AuthTls(long paramLong, CkFtp2 paramCkFtp2, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkFtp2_get_AutoFeat(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native void CkFtp2_put_AutoFeat(long paramLong, CkFtp2 paramCkFtp2, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkFtp2_get_AutoFix(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native void CkFtp2_put_AutoFix(long paramLong, CkFtp2 paramCkFtp2, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkFtp2_get_AutoGetSizeForProgress(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native void CkFtp2_put_AutoGetSizeForProgress(long paramLong, CkFtp2 paramCkFtp2, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkFtp2_get_AutoOptsUtf8(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native void CkFtp2_put_AutoOptsUtf8(long paramLong, CkFtp2 paramCkFtp2, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkFtp2_get_AutoSetUseEpsv(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native void CkFtp2_put_AutoSetUseEpsv(long paramLong, CkFtp2 paramCkFtp2, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkFtp2_get_AutoSyst(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native void CkFtp2_put_AutoSyst(long paramLong, CkFtp2 paramCkFtp2, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkFtp2_get_AutoXcrc(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native void CkFtp2_put_AutoXcrc(long paramLong, CkFtp2 paramCkFtp2, boolean paramBoolean);
/*       */   
/*       */   public static final native int CkFtp2_get_BandwidthThrottleDown(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native void CkFtp2_put_BandwidthThrottleDown(long paramLong, CkFtp2 paramCkFtp2, int paramInt);
/*       */   
/*       */   public static final native int CkFtp2_get_BandwidthThrottleUp(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native void CkFtp2_put_BandwidthThrottleUp(long paramLong, CkFtp2 paramCkFtp2, int paramInt);
/*       */   
/*       */   public static final native void CkFtp2_get_ClientIpAddress(long paramLong1, CkFtp2 paramCkFtp2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkFtp2_clientIpAddress(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native void CkFtp2_put_ClientIpAddress(long paramLong, CkFtp2 paramCkFtp2, String paramString);
/*       */   
/*       */   public static final native void CkFtp2_get_CommandCharset(long paramLong1, CkFtp2 paramCkFtp2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkFtp2_commandCharset(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native void CkFtp2_put_CommandCharset(long paramLong, CkFtp2 paramCkFtp2, String paramString);
/*       */   
/*       */   public static final native int CkFtp2_get_ConnectFailReason(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native int CkFtp2_get_ConnectTimeout(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native void CkFtp2_put_ConnectTimeout(long paramLong, CkFtp2 paramCkFtp2, int paramInt);
/*       */   
/*       */   public static final native boolean CkFtp2_get_ConnectVerified(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native int CkFtp2_get_CrlfMode(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native void CkFtp2_put_CrlfMode(long paramLong, CkFtp2 paramCkFtp2, int paramInt);
/*       */   
/*       */   public static final native void CkFtp2_get_DataProtection(long paramLong1, CkFtp2 paramCkFtp2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkFtp2_dataProtection(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native void CkFtp2_put_DataProtection(long paramLong, CkFtp2 paramCkFtp2, String paramString);
/*       */   
/*       */   public static final native void CkFtp2_get_DebugLogFilePath(long paramLong1, CkFtp2 paramCkFtp2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkFtp2_debugLogFilePath(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native void CkFtp2_put_DebugLogFilePath(long paramLong, CkFtp2 paramCkFtp2, String paramString);
/*       */   
/*       */   public static final native void CkFtp2_get_DirListingCharset(long paramLong1, CkFtp2 paramCkFtp2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkFtp2_dirListingCharset(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native void CkFtp2_put_DirListingCharset(long paramLong, CkFtp2 paramCkFtp2, String paramString);
/*       */   
/*       */   public static final native int CkFtp2_get_DownloadTransferRate(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native void CkFtp2_get_ForcePortIpAddress(long paramLong1, CkFtp2 paramCkFtp2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkFtp2_forcePortIpAddress(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native void CkFtp2_put_ForcePortIpAddress(long paramLong, CkFtp2 paramCkFtp2, String paramString);
/*       */   
/*       */   public static final native void CkFtp2_get_Greeting(long paramLong1, CkFtp2 paramCkFtp2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkFtp2_greeting(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native boolean CkFtp2_get_HasModeZ(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native int CkFtp2_get_HeartbeatMs(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native void CkFtp2_put_HeartbeatMs(long paramLong, CkFtp2 paramCkFtp2, int paramInt);
/*       */   
/*       */   public static final native void CkFtp2_get_Hostname(long paramLong1, CkFtp2 paramCkFtp2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkFtp2_hostname(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native void CkFtp2_put_Hostname(long paramLong, CkFtp2 paramCkFtp2, String paramString);
/*       */   
/*       */   public static final native void CkFtp2_get_HttpProxyAuthMethod(long paramLong1, CkFtp2 paramCkFtp2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkFtp2_httpProxyAuthMethod(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native void CkFtp2_put_HttpProxyAuthMethod(long paramLong, CkFtp2 paramCkFtp2, String paramString);
/*       */   
/*       */   public static final native void CkFtp2_get_HttpProxyDomain(long paramLong1, CkFtp2 paramCkFtp2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkFtp2_httpProxyDomain(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native void CkFtp2_put_HttpProxyDomain(long paramLong, CkFtp2 paramCkFtp2, String paramString);
/*       */   
/*       */   public static final native void CkFtp2_get_HttpProxyHostname(long paramLong1, CkFtp2 paramCkFtp2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkFtp2_httpProxyHostname(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native void CkFtp2_put_HttpProxyHostname(long paramLong, CkFtp2 paramCkFtp2, String paramString);
/*       */   
/*       */   public static final native void CkFtp2_get_HttpProxyPassword(long paramLong1, CkFtp2 paramCkFtp2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkFtp2_httpProxyPassword(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native void CkFtp2_put_HttpProxyPassword(long paramLong, CkFtp2 paramCkFtp2, String paramString);
/*       */   
/*       */   public static final native int CkFtp2_get_HttpProxyPort(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native void CkFtp2_put_HttpProxyPort(long paramLong, CkFtp2 paramCkFtp2, int paramInt);
/*       */   
/*       */   public static final native void CkFtp2_get_HttpProxyUsername(long paramLong1, CkFtp2 paramCkFtp2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkFtp2_httpProxyUsername(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native void CkFtp2_put_HttpProxyUsername(long paramLong, CkFtp2 paramCkFtp2, String paramString);
/*       */   
/*       */   public static final native int CkFtp2_get_IdleTimeoutMs(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native void CkFtp2_put_IdleTimeoutMs(long paramLong, CkFtp2 paramCkFtp2, int paramInt);
/*       */   
/*       */   public static final native boolean CkFtp2_get_IsConnected(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native boolean CkFtp2_get_KeepSessionLog(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native void CkFtp2_put_KeepSessionLog(long paramLong, CkFtp2 paramCkFtp2, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkFtp2_get_LargeFileMeasures(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native void CkFtp2_put_LargeFileMeasures(long paramLong, CkFtp2 paramCkFtp2, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkFtp2_get_LastErrorHtml(long paramLong1, CkFtp2 paramCkFtp2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkFtp2_lastErrorHtml(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native void CkFtp2_get_LastErrorText(long paramLong1, CkFtp2 paramCkFtp2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkFtp2_lastErrorText(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native void CkFtp2_get_LastErrorXml(long paramLong1, CkFtp2 paramCkFtp2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkFtp2_lastErrorXml(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native boolean CkFtp2_get_LastMethodSuccess(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native void CkFtp2_put_LastMethodSuccess(long paramLong, CkFtp2 paramCkFtp2, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkFtp2_get_LastReply(long paramLong1, CkFtp2 paramCkFtp2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkFtp2_lastReply(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native void CkFtp2_get_ListPattern(long paramLong1, CkFtp2 paramCkFtp2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkFtp2_listPattern(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native void CkFtp2_put_ListPattern(long paramLong, CkFtp2 paramCkFtp2, String paramString);
/*       */   
/*       */   public static final native boolean CkFtp2_get_LoginVerified(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native int CkFtp2_get_NumFilesAndDirs(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native boolean CkFtp2_get_PartialTransfer(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native boolean CkFtp2_get_Passive(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native void CkFtp2_put_Passive(long paramLong, CkFtp2 paramCkFtp2, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkFtp2_get_PassiveUseHostAddr(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native void CkFtp2_put_PassiveUseHostAddr(long paramLong, CkFtp2 paramCkFtp2, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkFtp2_get_Password(long paramLong1, CkFtp2 paramCkFtp2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkFtp2_password(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native void CkFtp2_put_Password(long paramLong, CkFtp2 paramCkFtp2, String paramString);
/*       */   
/*       */   public static final native int CkFtp2_get_PercentDoneScale(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native void CkFtp2_put_PercentDoneScale(long paramLong, CkFtp2 paramCkFtp2, int paramInt);
/*       */   
/*       */   public static final native int CkFtp2_get_Port(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native void CkFtp2_put_Port(long paramLong, CkFtp2 paramCkFtp2, int paramInt);
/*       */   
/*       */   public static final native boolean CkFtp2_get_PreferIpv6(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native void CkFtp2_put_PreferIpv6(long paramLong, CkFtp2 paramCkFtp2, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkFtp2_get_PreferNlst(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native void CkFtp2_put_PreferNlst(long paramLong, CkFtp2 paramCkFtp2, boolean paramBoolean);
/*       */   
/*       */   public static final native int CkFtp2_get_ProgressMonSize(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native void CkFtp2_put_ProgressMonSize(long paramLong, CkFtp2 paramCkFtp2, int paramInt);
/*       */   
/*       */   public static final native void CkFtp2_get_ProxyHostname(long paramLong1, CkFtp2 paramCkFtp2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkFtp2_proxyHostname(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native void CkFtp2_put_ProxyHostname(long paramLong, CkFtp2 paramCkFtp2, String paramString);
/*       */   
/*       */   public static final native int CkFtp2_get_ProxyMethod(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native void CkFtp2_put_ProxyMethod(long paramLong, CkFtp2 paramCkFtp2, int paramInt);
/*       */   
/*       */   public static final native void CkFtp2_get_ProxyPassword(long paramLong1, CkFtp2 paramCkFtp2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkFtp2_proxyPassword(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native void CkFtp2_put_ProxyPassword(long paramLong, CkFtp2 paramCkFtp2, String paramString);
/*       */   
/*       */   public static final native int CkFtp2_get_ProxyPort(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native void CkFtp2_put_ProxyPort(long paramLong, CkFtp2 paramCkFtp2, int paramInt);
/*       */   
/*       */   public static final native void CkFtp2_get_ProxyUsername(long paramLong1, CkFtp2 paramCkFtp2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkFtp2_proxyUsername(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native void CkFtp2_put_ProxyUsername(long paramLong, CkFtp2 paramCkFtp2, String paramString);
/*       */   
/*       */   public static final native int CkFtp2_get_ReadTimeout(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native void CkFtp2_put_ReadTimeout(long paramLong, CkFtp2 paramCkFtp2, int paramInt);
/*       */   
/*       */   public static final native boolean CkFtp2_get_RequireSslCertVerify(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native void CkFtp2_put_RequireSslCertVerify(long paramLong, CkFtp2 paramCkFtp2, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkFtp2_get_RestartNext(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native void CkFtp2_put_RestartNext(long paramLong, CkFtp2 paramCkFtp2, boolean paramBoolean);
/*       */   
/*       */   public static final native int CkFtp2_get_SendBufferSize(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native void CkFtp2_put_SendBufferSize(long paramLong, CkFtp2 paramCkFtp2, int paramInt);
/*       */   
/*       */   public static final native void CkFtp2_get_SessionLog(long paramLong1, CkFtp2 paramCkFtp2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkFtp2_sessionLog(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native boolean CkFtp2_get_SkipFinalReply(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native void CkFtp2_put_SkipFinalReply(long paramLong, CkFtp2 paramCkFtp2, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkFtp2_get_SocksHostname(long paramLong1, CkFtp2 paramCkFtp2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkFtp2_socksHostname(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native void CkFtp2_put_SocksHostname(long paramLong, CkFtp2 paramCkFtp2, String paramString);
/*       */   
/*       */   public static final native void CkFtp2_get_SocksPassword(long paramLong1, CkFtp2 paramCkFtp2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkFtp2_socksPassword(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native void CkFtp2_put_SocksPassword(long paramLong, CkFtp2 paramCkFtp2, String paramString);
/*       */   
/*       */   public static final native int CkFtp2_get_SocksPort(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native void CkFtp2_put_SocksPort(long paramLong, CkFtp2 paramCkFtp2, int paramInt);
/*       */   
/*       */   public static final native void CkFtp2_get_SocksUsername(long paramLong1, CkFtp2 paramCkFtp2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkFtp2_socksUsername(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native void CkFtp2_put_SocksUsername(long paramLong, CkFtp2 paramCkFtp2, String paramString);
/*       */   
/*       */   public static final native int CkFtp2_get_SocksVersion(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native void CkFtp2_put_SocksVersion(long paramLong, CkFtp2 paramCkFtp2, int paramInt);
/*       */   
/*       */   public static final native int CkFtp2_get_SoRcvBuf(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native void CkFtp2_put_SoRcvBuf(long paramLong, CkFtp2 paramCkFtp2, int paramInt);
/*       */   
/*       */   public static final native int CkFtp2_get_SoSndBuf(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native void CkFtp2_put_SoSndBuf(long paramLong, CkFtp2 paramCkFtp2, int paramInt);
/*       */   
/*       */   public static final native boolean CkFtp2_get_Ssl(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native void CkFtp2_put_Ssl(long paramLong, CkFtp2 paramCkFtp2, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkFtp2_get_SslAllowedCiphers(long paramLong1, CkFtp2 paramCkFtp2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkFtp2_sslAllowedCiphers(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native void CkFtp2_put_SslAllowedCiphers(long paramLong, CkFtp2 paramCkFtp2, String paramString);
/*       */   
/*       */   public static final native void CkFtp2_get_SslProtocol(long paramLong1, CkFtp2 paramCkFtp2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkFtp2_sslProtocol(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native void CkFtp2_put_SslProtocol(long paramLong, CkFtp2 paramCkFtp2, String paramString);
/*       */   
/*       */   public static final native boolean CkFtp2_get_SslServerCertVerified(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native void CkFtp2_get_SyncedFiles(long paramLong1, CkFtp2 paramCkFtp2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkFtp2_syncedFiles(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native void CkFtp2_put_SyncedFiles(long paramLong, CkFtp2 paramCkFtp2, String paramString);
/*       */   
/*       */   public static final native void CkFtp2_get_SyncMustMatch(long paramLong1, CkFtp2 paramCkFtp2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkFtp2_syncMustMatch(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native void CkFtp2_put_SyncMustMatch(long paramLong, CkFtp2 paramCkFtp2, String paramString);
/*       */   
/*       */   public static final native void CkFtp2_get_SyncMustNotMatch(long paramLong1, CkFtp2 paramCkFtp2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkFtp2_syncMustNotMatch(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native void CkFtp2_put_SyncMustNotMatch(long paramLong, CkFtp2 paramCkFtp2, String paramString);
/*       */   
/*       */   public static final native void CkFtp2_get_SyncPreview(long paramLong1, CkFtp2 paramCkFtp2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkFtp2_syncPreview(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native void CkFtp2_get_TlsCipherSuite(long paramLong1, CkFtp2 paramCkFtp2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkFtp2_tlsCipherSuite(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native void CkFtp2_get_TlsPinSet(long paramLong1, CkFtp2 paramCkFtp2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkFtp2_tlsPinSet(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native void CkFtp2_put_TlsPinSet(long paramLong, CkFtp2 paramCkFtp2, String paramString);
/*       */   
/*       */   public static final native void CkFtp2_get_TlsVersion(long paramLong1, CkFtp2 paramCkFtp2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkFtp2_tlsVersion(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native int CkFtp2_get_UploadTransferRate(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native boolean CkFtp2_get_UseEpsv(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native void CkFtp2_put_UseEpsv(long paramLong, CkFtp2 paramCkFtp2, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkFtp2_get_Username(long paramLong1, CkFtp2 paramCkFtp2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkFtp2_username(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native void CkFtp2_put_Username(long paramLong, CkFtp2 paramCkFtp2, String paramString);
/*       */   
/*       */   public static final native boolean CkFtp2_get_VerboseLogging(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native void CkFtp2_put_VerboseLogging(long paramLong, CkFtp2 paramCkFtp2, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkFtp2_get_Version(long paramLong1, CkFtp2 paramCkFtp2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkFtp2_version(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native boolean CkFtp2_AppendFile(long paramLong, CkFtp2 paramCkFtp2, String paramString1, String paramString2);
/*       */   
/*       */   public static final native long CkFtp2_AppendFileAsync(long paramLong, CkFtp2 paramCkFtp2, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkFtp2_AppendFileFromBinaryData(long paramLong1, CkFtp2 paramCkFtp2, String paramString, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native long CkFtp2_AppendFileFromBinaryDataAsync(long paramLong1, CkFtp2 paramCkFtp2, String paramString, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkFtp2_AppendFileFromTextData(long paramLong, CkFtp2 paramCkFtp2, String paramString1, String paramString2, String paramString3);
/*       */   
/*       */   public static final native long CkFtp2_AppendFileFromTextDataAsync(long paramLong, CkFtp2 paramCkFtp2, String paramString1, String paramString2, String paramString3);
/*       */   
/*       */   public static final native void CkFtp2_AsyncAbort(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native boolean CkFtp2_AsyncAppendFileStart(long paramLong, CkFtp2 paramCkFtp2, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkFtp2_AsyncGetFileStart(long paramLong, CkFtp2 paramCkFtp2, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkFtp2_AsyncPutFileStart(long paramLong, CkFtp2 paramCkFtp2, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkFtp2_ChangeRemoteDir(long paramLong, CkFtp2 paramCkFtp2, String paramString);
/*       */   
/*       */   public static final native long CkFtp2_ChangeRemoteDirAsync(long paramLong, CkFtp2 paramCkFtp2, String paramString);
/*       */   
/*       */   public static final native boolean CkFtp2_CheckConnection(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native long CkFtp2_CheckConnectionAsync(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native boolean CkFtp2_ClearControlChannel(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native long CkFtp2_ClearControlChannelAsync(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native void CkFtp2_ClearDirCache(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native void CkFtp2_ClearSessionLog(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native boolean CkFtp2_Connect(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native long CkFtp2_ConnectAsync(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native boolean CkFtp2_ConnectOnly(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native long CkFtp2_ConnectOnlyAsync(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native boolean CkFtp2_ConvertToTls(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native long CkFtp2_ConvertToTlsAsync(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native boolean CkFtp2_CreatePlan(long paramLong1, CkFtp2 paramCkFtp2, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkFtp2_createPlan(long paramLong, CkFtp2 paramCkFtp2, String paramString);
/*       */   
/*       */   public static final native long CkFtp2_CreatePlanAsync(long paramLong, CkFtp2 paramCkFtp2, String paramString);
/*       */   
/*       */   public static final native boolean CkFtp2_CreateRemoteDir(long paramLong, CkFtp2 paramCkFtp2, String paramString);
/*       */   
/*       */   public static final native long CkFtp2_CreateRemoteDirAsync(long paramLong, CkFtp2 paramCkFtp2, String paramString);
/*       */   
/*       */   public static final native int CkFtp2_DeleteMatching(long paramLong, CkFtp2 paramCkFtp2, String paramString);
/*       */   
/*       */   public static final native long CkFtp2_DeleteMatchingAsync(long paramLong, CkFtp2 paramCkFtp2, String paramString);
/*       */   
/*       */   public static final native boolean CkFtp2_DeleteRemoteFile(long paramLong, CkFtp2 paramCkFtp2, String paramString);
/*       */   
/*       */   public static final native long CkFtp2_DeleteRemoteFileAsync(long paramLong, CkFtp2 paramCkFtp2, String paramString);
/*       */   
/*       */   public static final native boolean CkFtp2_DeleteTree(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native long CkFtp2_DeleteTreeAsync(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native int CkFtp2_DetermineProxyMethod(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native long CkFtp2_DetermineProxyMethodAsync(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native boolean CkFtp2_DetermineSettings(long paramLong1, CkFtp2 paramCkFtp2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkFtp2_determineSettings(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native long CkFtp2_DetermineSettingsAsync(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native boolean CkFtp2_DirTreeXml(long paramLong1, CkFtp2 paramCkFtp2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkFtp2_dirTreeXml(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native long CkFtp2_DirTreeXmlAsync(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native boolean CkFtp2_Disconnect(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native long CkFtp2_DisconnectAsync(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native boolean CkFtp2_DownloadTree(long paramLong, CkFtp2 paramCkFtp2, String paramString);
/*       */   
/*       */   public static final native long CkFtp2_DownloadTreeAsync(long paramLong, CkFtp2 paramCkFtp2, String paramString);
/*       */   
/*       */   public static final native boolean CkFtp2_Feat(long paramLong1, CkFtp2 paramCkFtp2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkFtp2_feat(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native long CkFtp2_FeatAsync(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native long CkFtp2_GetCreateDt(long paramLong, CkFtp2 paramCkFtp2, int paramInt);
/*       */   
/*       */   public static final native long CkFtp2_GetCreateDtAsync(long paramLong, CkFtp2 paramCkFtp2, int paramInt);
/*       */   
/*       */   public static final native long CkFtp2_GetCreateDtByName(long paramLong, CkFtp2 paramCkFtp2, String paramString);
/*       */   
/*       */   public static final native long CkFtp2_GetCreateDtByNameAsync(long paramLong, CkFtp2 paramCkFtp2, String paramString);
/*       */   
/*       */   public static final native boolean CkFtp2_GetCreateTime(long paramLong1, CkFtp2 paramCkFtp2, int paramInt, long paramLong2, SYSTEMTIME paramSYSTEMTIME);
/*       */   
/*       */   public static final native boolean CkFtp2_GetCreateTimeByName(long paramLong1, CkFtp2 paramCkFtp2, String paramString, long paramLong2, SYSTEMTIME paramSYSTEMTIME);
/*       */   
/*       */   public static final native boolean CkFtp2_GetCreateTimeByNameStr(long paramLong1, CkFtp2 paramCkFtp2, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkFtp2_getCreateTimeByNameStr(long paramLong, CkFtp2 paramCkFtp2, String paramString);
/*       */   
/*       */   public static final native String CkFtp2_createTimeByNameStr(long paramLong, CkFtp2 paramCkFtp2, String paramString);
/*       */   
/*       */   public static final native long CkFtp2_GetCreateTimeByNameStrAsync(long paramLong, CkFtp2 paramCkFtp2, String paramString);
/*       */   
/*       */   public static final native boolean CkFtp2_GetCreateTimeStr(long paramLong1, CkFtp2 paramCkFtp2, int paramInt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkFtp2_getCreateTimeStr(long paramLong, CkFtp2 paramCkFtp2, int paramInt);
/*       */   
/*       */   public static final native String CkFtp2_createTimeStr(long paramLong, CkFtp2 paramCkFtp2, int paramInt);
/*       */   
/*       */   public static final native long CkFtp2_GetCreateTimeStrAsync(long paramLong, CkFtp2 paramCkFtp2, int paramInt);
/*       */   
/*       */   public static final native boolean CkFtp2_GetCurrentRemoteDir(long paramLong1, CkFtp2 paramCkFtp2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkFtp2_getCurrentRemoteDir(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native String CkFtp2_currentRemoteDir(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native long CkFtp2_GetCurrentRemoteDirAsync(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native int CkFtp2_GetDirCount(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native long CkFtp2_GetDirCountAsync(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native boolean CkFtp2_GetFile(long paramLong, CkFtp2 paramCkFtp2, String paramString1, String paramString2);
/*       */   
/*       */   public static final native long CkFtp2_GetFileAsync(long paramLong, CkFtp2 paramCkFtp2, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkFtp2_GetFileBd(long paramLong1, CkFtp2 paramCkFtp2, String paramString, long paramLong2, CkBinData paramCkBinData);
/*       */   
/*       */   public static final native long CkFtp2_GetFileBdAsync(long paramLong1, CkFtp2 paramCkFtp2, String paramString, long paramLong2, CkBinData paramCkBinData);
/*       */   
/*       */   public static final native boolean CkFtp2_GetFilename(long paramLong1, CkFtp2 paramCkFtp2, int paramInt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkFtp2_getFilename(long paramLong, CkFtp2 paramCkFtp2, int paramInt);
/*       */   
/*       */   public static final native String CkFtp2_filename(long paramLong, CkFtp2 paramCkFtp2, int paramInt);
/*       */   
/*       */   public static final native long CkFtp2_GetFilenameAsync(long paramLong, CkFtp2 paramCkFtp2, int paramInt);
/*       */   
/*       */   public static final native boolean CkFtp2_GetFileSb(long paramLong1, CkFtp2 paramCkFtp2, String paramString1, String paramString2, long paramLong2, CkStringBuilder paramCkStringBuilder);
/*       */   
/*       */   public static final native long CkFtp2_GetFileSbAsync(long paramLong1, CkFtp2 paramCkFtp2, String paramString1, String paramString2, long paramLong2, CkStringBuilder paramCkStringBuilder);
/*       */   
/*       */   public static final native boolean CkFtp2_GetFileToStream(long paramLong1, CkFtp2 paramCkFtp2, String paramString, long paramLong2, CkStream paramCkStream);
/*       */   
/*       */   public static final native long CkFtp2_GetFileToStreamAsync(long paramLong1, CkFtp2 paramCkFtp2, String paramString, long paramLong2, CkStream paramCkStream);
/*       */   
/*       */   public static final native boolean CkFtp2_GetGroup(long paramLong1, CkFtp2 paramCkFtp2, int paramInt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkFtp2_getGroup(long paramLong, CkFtp2 paramCkFtp2, int paramInt);
/*       */   
/*       */   public static final native String CkFtp2_group(long paramLong, CkFtp2 paramCkFtp2, int paramInt);
/*       */   
/*       */   public static final native long CkFtp2_GetGroupAsync(long paramLong, CkFtp2 paramCkFtp2, int paramInt);
/*       */   
/*       */   public static final native boolean CkFtp2_GetIsDirectory(long paramLong, CkFtp2 paramCkFtp2, int paramInt);
/*       */   
/*       */   public static final native long CkFtp2_GetIsDirectoryAsync(long paramLong, CkFtp2 paramCkFtp2, int paramInt);
/*       */   
/*       */   public static final native boolean CkFtp2_GetIsSymbolicLink(long paramLong, CkFtp2 paramCkFtp2, int paramInt);
/*       */   
/*       */   public static final native long CkFtp2_GetIsSymbolicLinkAsync(long paramLong, CkFtp2 paramCkFtp2, int paramInt);
/*       */   
/*       */   public static final native long CkFtp2_GetLastAccessDt(long paramLong, CkFtp2 paramCkFtp2, int paramInt);
/*       */   
/*       */   public static final native long CkFtp2_GetLastAccessDtAsync(long paramLong, CkFtp2 paramCkFtp2, int paramInt);
/*       */   
/*       */   public static final native long CkFtp2_GetLastAccessDtByName(long paramLong, CkFtp2 paramCkFtp2, String paramString);
/*       */   
/*       */   public static final native long CkFtp2_GetLastAccessDtByNameAsync(long paramLong, CkFtp2 paramCkFtp2, String paramString);
/*       */   
/*       */   public static final native boolean CkFtp2_GetLastAccessTime(long paramLong1, CkFtp2 paramCkFtp2, int paramInt, long paramLong2, SYSTEMTIME paramSYSTEMTIME);
/*       */   
/*       */   public static final native boolean CkFtp2_GetLastAccessTimeByName(long paramLong1, CkFtp2 paramCkFtp2, String paramString, long paramLong2, SYSTEMTIME paramSYSTEMTIME);
/*       */   
/*       */   public static final native boolean CkFtp2_GetLastAccessTimeByNameStr(long paramLong1, CkFtp2 paramCkFtp2, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkFtp2_getLastAccessTimeByNameStr(long paramLong, CkFtp2 paramCkFtp2, String paramString);
/*       */   
/*       */   public static final native String CkFtp2_lastAccessTimeByNameStr(long paramLong, CkFtp2 paramCkFtp2, String paramString);
/*       */   
/*       */   public static final native long CkFtp2_GetLastAccessTimeByNameStrAsync(long paramLong, CkFtp2 paramCkFtp2, String paramString);
/*       */   
/*       */   public static final native boolean CkFtp2_GetLastAccessTimeStr(long paramLong1, CkFtp2 paramCkFtp2, int paramInt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkFtp2_getLastAccessTimeStr(long paramLong, CkFtp2 paramCkFtp2, int paramInt);
/*       */   
/*       */   public static final native String CkFtp2_lastAccessTimeStr(long paramLong, CkFtp2 paramCkFtp2, int paramInt);
/*       */   
/*       */   public static final native long CkFtp2_GetLastAccessTimeStrAsync(long paramLong, CkFtp2 paramCkFtp2, int paramInt);
/*       */   
/*       */   public static final native long CkFtp2_GetLastModDt(long paramLong, CkFtp2 paramCkFtp2, int paramInt);
/*       */   
/*       */   public static final native long CkFtp2_GetLastModDtAsync(long paramLong, CkFtp2 paramCkFtp2, int paramInt);
/*       */   
/*       */   public static final native long CkFtp2_GetLastModDtByName(long paramLong, CkFtp2 paramCkFtp2, String paramString);
/*       */   
/*       */   public static final native long CkFtp2_GetLastModDtByNameAsync(long paramLong, CkFtp2 paramCkFtp2, String paramString);
/*       */   
/*       */   public static final native boolean CkFtp2_GetLastModifiedTime(long paramLong1, CkFtp2 paramCkFtp2, int paramInt, long paramLong2, SYSTEMTIME paramSYSTEMTIME);
/*       */   
/*       */   public static final native boolean CkFtp2_GetLastModifiedTimeByName(long paramLong1, CkFtp2 paramCkFtp2, String paramString, long paramLong2, SYSTEMTIME paramSYSTEMTIME);
/*       */   
/*       */   public static final native boolean CkFtp2_GetLastModifiedTimeByNameStr(long paramLong1, CkFtp2 paramCkFtp2, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkFtp2_getLastModifiedTimeByNameStr(long paramLong, CkFtp2 paramCkFtp2, String paramString);
/*       */   
/*       */   public static final native String CkFtp2_lastModifiedTimeByNameStr(long paramLong, CkFtp2 paramCkFtp2, String paramString);
/*       */   
/*       */   public static final native long CkFtp2_GetLastModifiedTimeByNameStrAsync(long paramLong, CkFtp2 paramCkFtp2, String paramString);
/*       */   
/*       */   public static final native boolean CkFtp2_GetLastModifiedTimeStr(long paramLong1, CkFtp2 paramCkFtp2, int paramInt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkFtp2_getLastModifiedTimeStr(long paramLong, CkFtp2 paramCkFtp2, int paramInt);
/*       */   
/*       */   public static final native String CkFtp2_lastModifiedTimeStr(long paramLong, CkFtp2 paramCkFtp2, int paramInt);
/*       */   
/*       */   public static final native long CkFtp2_GetLastModifiedTimeStrAsync(long paramLong, CkFtp2 paramCkFtp2, int paramInt);
/*       */   
/*       */   public static final native boolean CkFtp2_GetOwner(long paramLong1, CkFtp2 paramCkFtp2, int paramInt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkFtp2_getOwner(long paramLong, CkFtp2 paramCkFtp2, int paramInt);
/*       */   
/*       */   public static final native String CkFtp2_owner(long paramLong, CkFtp2 paramCkFtp2, int paramInt);
/*       */   
/*       */   public static final native long CkFtp2_GetOwnerAsync(long paramLong, CkFtp2 paramCkFtp2, int paramInt);
/*       */   
/*       */   public static final native boolean CkFtp2_GetPermissions(long paramLong1, CkFtp2 paramCkFtp2, int paramInt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkFtp2_getPermissions(long paramLong, CkFtp2 paramCkFtp2, int paramInt);
/*       */   
/*       */   public static final native String CkFtp2_permissions(long paramLong, CkFtp2 paramCkFtp2, int paramInt);
/*       */   
/*       */   public static final native long CkFtp2_GetPermissionsAsync(long paramLong, CkFtp2 paramCkFtp2, int paramInt);
/*       */   
/*       */   public static final native boolean CkFtp2_GetPermType(long paramLong1, CkFtp2 paramCkFtp2, int paramInt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkFtp2_getPermType(long paramLong, CkFtp2 paramCkFtp2, int paramInt);
/*       */   
/*       */   public static final native String CkFtp2_permType(long paramLong, CkFtp2 paramCkFtp2, int paramInt);
/*       */   
/*       */   public static final native long CkFtp2_GetPermTypeAsync(long paramLong, CkFtp2 paramCkFtp2, int paramInt);
/*       */   
/*       */   public static final native boolean CkFtp2_GetRemoteFileBinaryData(long paramLong1, CkFtp2 paramCkFtp2, String paramString, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native long CkFtp2_GetRemoteFileBinaryDataAsync(long paramLong, CkFtp2 paramCkFtp2, String paramString);
/*       */   
/*       */   public static final native boolean CkFtp2_GetRemoteFileTextC(long paramLong1, CkFtp2 paramCkFtp2, String paramString1, String paramString2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkFtp2_getRemoteFileTextC(long paramLong, CkFtp2 paramCkFtp2, String paramString1, String paramString2);
/*       */   
/*       */   public static final native String CkFtp2_remoteFileTextC(long paramLong, CkFtp2 paramCkFtp2, String paramString1, String paramString2);
/*       */   
/*       */   public static final native long CkFtp2_GetRemoteFileTextCAsync(long paramLong, CkFtp2 paramCkFtp2, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkFtp2_GetRemoteFileTextData(long paramLong1, CkFtp2 paramCkFtp2, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkFtp2_getRemoteFileTextData(long paramLong, CkFtp2 paramCkFtp2, String paramString);
/*       */   
/*       */   public static final native String CkFtp2_remoteFileTextData(long paramLong, CkFtp2 paramCkFtp2, String paramString);
/*       */   
/*       */   public static final native long CkFtp2_GetRemoteFileTextDataAsync(long paramLong, CkFtp2 paramCkFtp2, String paramString);
/*       */   
/*       */   public static final native int CkFtp2_GetSize(long paramLong, CkFtp2 paramCkFtp2, int paramInt);
/*       */   
/*       */   public static final native long CkFtp2_GetSizeAsync(long paramLong, CkFtp2 paramCkFtp2, int paramInt);
/*       */   
/*       */   public static final native long CkFtp2_GetSize64(long paramLong, CkFtp2 paramCkFtp2, int paramInt);
/*       */   
/*       */   public static final native int CkFtp2_GetSizeByName(long paramLong, CkFtp2 paramCkFtp2, String paramString);
/*       */   
/*       */   public static final native long CkFtp2_GetSizeByNameAsync(long paramLong, CkFtp2 paramCkFtp2, String paramString);
/*       */   
/*       */   public static final native long CkFtp2_GetSizeByName64(long paramLong, CkFtp2 paramCkFtp2, String paramString);
/*       */   
/*       */   public static final native boolean CkFtp2_GetSizeStr(long paramLong1, CkFtp2 paramCkFtp2, int paramInt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkFtp2_getSizeStr(long paramLong, CkFtp2 paramCkFtp2, int paramInt);
/*       */   
/*       */   public static final native String CkFtp2_sizeStr(long paramLong, CkFtp2 paramCkFtp2, int paramInt);
/*       */   
/*       */   public static final native long CkFtp2_GetSizeStrAsync(long paramLong, CkFtp2 paramCkFtp2, int paramInt);
/*       */   
/*       */   public static final native boolean CkFtp2_GetSizeStrByName(long paramLong1, CkFtp2 paramCkFtp2, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkFtp2_getSizeStrByName(long paramLong, CkFtp2 paramCkFtp2, String paramString);
/*       */   
/*       */   public static final native String CkFtp2_sizeStrByName(long paramLong, CkFtp2 paramCkFtp2, String paramString);
/*       */   
/*       */   public static final native long CkFtp2_GetSizeStrByNameAsync(long paramLong, CkFtp2 paramCkFtp2, String paramString);
/*       */   
/*       */   public static final native long CkFtp2_GetSslServerCert(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native boolean CkFtp2_GetTextDirListing(long paramLong1, CkFtp2 paramCkFtp2, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkFtp2_getTextDirListing(long paramLong, CkFtp2 paramCkFtp2, String paramString);
/*       */   
/*       */   public static final native String CkFtp2_textDirListing(long paramLong, CkFtp2 paramCkFtp2, String paramString);
/*       */   
/*       */   public static final native long CkFtp2_GetTextDirListingAsync(long paramLong, CkFtp2 paramCkFtp2, String paramString);
/*       */   
/*       */   public static final native boolean CkFtp2_GetXmlDirListing(long paramLong1, CkFtp2 paramCkFtp2, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkFtp2_getXmlDirListing(long paramLong, CkFtp2 paramCkFtp2, String paramString);
/*       */   
/*       */   public static final native String CkFtp2_xmlDirListing(long paramLong, CkFtp2 paramCkFtp2, String paramString);
/*       */   
/*       */   public static final native long CkFtp2_GetXmlDirListingAsync(long paramLong, CkFtp2 paramCkFtp2, String paramString);
/*       */   
/*       */   public static final native boolean CkFtp2_IsUnlocked(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native boolean CkFtp2_LargeFileUpload(long paramLong, CkFtp2 paramCkFtp2, String paramString1, String paramString2, int paramInt);
/*       */   
/*       */   public static final native long CkFtp2_LargeFileUploadAsync(long paramLong, CkFtp2 paramCkFtp2, String paramString1, String paramString2, int paramInt);
/*       */   
/*       */   public static final native boolean CkFtp2_LoginAfterConnectOnly(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native long CkFtp2_LoginAfterConnectOnlyAsync(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native int CkFtp2_MGetFiles(long paramLong, CkFtp2 paramCkFtp2, String paramString1, String paramString2);
/*       */   
/*       */   public static final native long CkFtp2_MGetFilesAsync(long paramLong, CkFtp2 paramCkFtp2, String paramString1, String paramString2);
/*       */   
/*       */   public static final native int CkFtp2_MPutFiles(long paramLong, CkFtp2 paramCkFtp2, String paramString);
/*       */   
/*       */   public static final native long CkFtp2_MPutFilesAsync(long paramLong, CkFtp2 paramCkFtp2, String paramString);
/*       */   
/*       */   public static final native boolean CkFtp2_NlstXml(long paramLong1, CkFtp2 paramCkFtp2, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkFtp2_nlstXml(long paramLong, CkFtp2 paramCkFtp2, String paramString);
/*       */   
/*       */   public static final native long CkFtp2_NlstXmlAsync(long paramLong, CkFtp2 paramCkFtp2, String paramString);
/*       */   
/*       */   public static final native boolean CkFtp2_Noop(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native long CkFtp2_NoopAsync(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native boolean CkFtp2_PutFile(long paramLong, CkFtp2 paramCkFtp2, String paramString1, String paramString2);
/*       */   
/*       */   public static final native long CkFtp2_PutFileAsync(long paramLong, CkFtp2 paramCkFtp2, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkFtp2_PutFileBd(long paramLong1, CkFtp2 paramCkFtp2, long paramLong2, CkBinData paramCkBinData, String paramString);
/*       */   
/*       */   public static final native long CkFtp2_PutFileBdAsync(long paramLong1, CkFtp2 paramCkFtp2, long paramLong2, CkBinData paramCkBinData, String paramString);
/*       */   
/*       */   public static final native boolean CkFtp2_PutFileFromBinaryData(long paramLong1, CkFtp2 paramCkFtp2, String paramString, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native long CkFtp2_PutFileFromBinaryDataAsync(long paramLong1, CkFtp2 paramCkFtp2, String paramString, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkFtp2_PutFileFromTextData(long paramLong, CkFtp2 paramCkFtp2, String paramString1, String paramString2, String paramString3);
/*       */   
/*       */   public static final native long CkFtp2_PutFileFromTextDataAsync(long paramLong, CkFtp2 paramCkFtp2, String paramString1, String paramString2, String paramString3);
/*       */   
/*       */   public static final native boolean CkFtp2_PutFileSb(long paramLong1, CkFtp2 paramCkFtp2, long paramLong2, CkStringBuilder paramCkStringBuilder, String paramString1, boolean paramBoolean, String paramString2);
/*       */   
/*       */   public static final native long CkFtp2_PutFileSbAsync(long paramLong1, CkFtp2 paramCkFtp2, long paramLong2, CkStringBuilder paramCkStringBuilder, String paramString1, boolean paramBoolean, String paramString2);
/*       */   
/*       */   public static final native boolean CkFtp2_PutPlan(long paramLong, CkFtp2 paramCkFtp2, String paramString1, String paramString2);
/*       */   
/*       */   public static final native long CkFtp2_PutPlanAsync(long paramLong, CkFtp2 paramCkFtp2, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkFtp2_PutTree(long paramLong, CkFtp2 paramCkFtp2, String paramString);
/*       */   
/*       */   public static final native long CkFtp2_PutTreeAsync(long paramLong, CkFtp2 paramCkFtp2, String paramString);
/*       */   
/*       */   public static final native boolean CkFtp2_Quote(long paramLong, CkFtp2 paramCkFtp2, String paramString);
/*       */   
/*       */   public static final native long CkFtp2_QuoteAsync(long paramLong, CkFtp2 paramCkFtp2, String paramString);
/*       */   
/*       */   public static final native boolean CkFtp2_RemoveRemoteDir(long paramLong, CkFtp2 paramCkFtp2, String paramString);
/*       */   
/*       */   public static final native long CkFtp2_RemoveRemoteDirAsync(long paramLong, CkFtp2 paramCkFtp2, String paramString);
/*       */   
/*       */   public static final native boolean CkFtp2_RenameRemoteFile(long paramLong, CkFtp2 paramCkFtp2, String paramString1, String paramString2);
/*       */   
/*       */   public static final native long CkFtp2_RenameRemoteFileAsync(long paramLong, CkFtp2 paramCkFtp2, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkFtp2_SaveLastError(long paramLong, CkFtp2 paramCkFtp2, String paramString);
/*       */   
/*       */   public static final native boolean CkFtp2_SendCommand(long paramLong1, CkFtp2 paramCkFtp2, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkFtp2_sendCommand(long paramLong, CkFtp2 paramCkFtp2, String paramString);
/*       */   
/*       */   public static final native long CkFtp2_SendCommandAsync(long paramLong, CkFtp2 paramCkFtp2, String paramString);
/*       */   
/*       */   public static final native boolean CkFtp2_SetModeZ(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native long CkFtp2_SetModeZAsync(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native void CkFtp2_SetOldestDate(long paramLong1, CkFtp2 paramCkFtp2, long paramLong2, SYSTEMTIME paramSYSTEMTIME);
/*       */   
/*       */   public static final native void CkFtp2_SetOldestDateStr(long paramLong, CkFtp2 paramCkFtp2, String paramString);
/*       */   
/*       */   public static final native boolean CkFtp2_SetOption(long paramLong, CkFtp2 paramCkFtp2, String paramString);
/*       */   
/*       */   public static final native boolean CkFtp2_SetPassword(long paramLong1, CkFtp2 paramCkFtp2, long paramLong2, CkSecureString paramCkSecureString);
/*       */   
/*       */   public static final native boolean CkFtp2_SetRemoteFileDateTime(long paramLong1, CkFtp2 paramCkFtp2, long paramLong2, SYSTEMTIME paramSYSTEMTIME, String paramString);
/*       */   
/*       */   public static final native boolean CkFtp2_SetRemoteFileDateTimeStr(long paramLong, CkFtp2 paramCkFtp2, String paramString1, String paramString2);
/*       */   
/*       */   public static final native long CkFtp2_SetRemoteFileDateTimeStrAsync(long paramLong, CkFtp2 paramCkFtp2, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkFtp2_SetRemoteFileDt(long paramLong1, CkFtp2 paramCkFtp2, long paramLong2, CkDateTime paramCkDateTime, String paramString);
/*       */   
/*       */   public static final native long CkFtp2_SetRemoteFileDtAsync(long paramLong1, CkFtp2 paramCkFtp2, long paramLong2, CkDateTime paramCkDateTime, String paramString);
/*       */   
/*       */   public static final native void CkFtp2_SetSslCertRequirement(long paramLong, CkFtp2 paramCkFtp2, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkFtp2_SetSslClientCert(long paramLong1, CkFtp2 paramCkFtp2, long paramLong2, CkCert paramCkCert);
/*       */   
/*       */   public static final native boolean CkFtp2_SetSslClientCertPem(long paramLong, CkFtp2 paramCkFtp2, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkFtp2_SetSslClientCertPfx(long paramLong, CkFtp2 paramCkFtp2, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkFtp2_SetTypeAscii(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native long CkFtp2_SetTypeAsciiAsync(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native boolean CkFtp2_SetTypeBinary(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native long CkFtp2_SetTypeBinaryAsync(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native boolean CkFtp2_Site(long paramLong, CkFtp2 paramCkFtp2, String paramString);
/*       */   
/*       */   public static final native long CkFtp2_SiteAsync(long paramLong, CkFtp2 paramCkFtp2, String paramString);
/*       */   
/*       */   public static final native void CkFtp2_SleepMs(long paramLong, CkFtp2 paramCkFtp2, int paramInt);
/*       */   
/*       */   public static final native boolean CkFtp2_Stat(long paramLong1, CkFtp2 paramCkFtp2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkFtp2_ck_stat(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native long CkFtp2_StatAsync(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native boolean CkFtp2_SyncDeleteRemote(long paramLong, CkFtp2 paramCkFtp2, String paramString);
/*       */   
/*       */   public static final native long CkFtp2_SyncDeleteRemoteAsync(long paramLong, CkFtp2 paramCkFtp2, String paramString);
/*       */   
/*       */   public static final native boolean CkFtp2_SyncLocalDir(long paramLong, CkFtp2 paramCkFtp2, String paramString, int paramInt);
/*       */   
/*       */   public static final native long CkFtp2_SyncLocalDirAsync(long paramLong, CkFtp2 paramCkFtp2, String paramString, int paramInt);
/*       */   
/*       */   public static final native boolean CkFtp2_SyncLocalTree(long paramLong, CkFtp2 paramCkFtp2, String paramString, int paramInt);
/*       */   
/*       */   public static final native long CkFtp2_SyncLocalTreeAsync(long paramLong, CkFtp2 paramCkFtp2, String paramString, int paramInt);
/*       */   
/*       */   public static final native boolean CkFtp2_SyncRemoteTree(long paramLong, CkFtp2 paramCkFtp2, String paramString, int paramInt);
/*       */   
/*       */   public static final native long CkFtp2_SyncRemoteTreeAsync(long paramLong, CkFtp2 paramCkFtp2, String paramString, int paramInt);
/*       */   
/*       */   public static final native boolean CkFtp2_SyncRemoteTree2(long paramLong, CkFtp2 paramCkFtp2, String paramString, int paramInt, boolean paramBoolean1, boolean paramBoolean2);
/*       */   
/*       */   public static final native long CkFtp2_SyncRemoteTree2Async(long paramLong, CkFtp2 paramCkFtp2, String paramString, int paramInt, boolean paramBoolean1, boolean paramBoolean2);
/*       */   
/*       */   public static final native boolean CkFtp2_Syst(long paramLong1, CkFtp2 paramCkFtp2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkFtp2_syst(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native long CkFtp2_SystAsync(long paramLong, CkFtp2 paramCkFtp2);
/*       */   
/*       */   public static final native boolean CkFtp2_UnlockComponent(long paramLong, CkFtp2 paramCkFtp2, String paramString);
/*       */   
/*       */   public static final native long new_CkGlobal();
/*       */   
/*       */   public static final native void delete_CkGlobal(long paramLong);
/*       */   
/*       */   public static final native void CkGlobal_LastErrorXml(long paramLong1, CkGlobal paramCkGlobal, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkGlobal_LastErrorHtml(long paramLong1, CkGlobal paramCkGlobal, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkGlobal_LastErrorText(long paramLong1, CkGlobal paramCkGlobal, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native int CkGlobal_get_AnsiCodePage(long paramLong, CkGlobal paramCkGlobal);
/*       */   
/*       */   public static final native void CkGlobal_put_AnsiCodePage(long paramLong, CkGlobal paramCkGlobal, int paramInt);
/*       */   
/*       */   public static final native void CkGlobal_get_DebugLogFilePath(long paramLong1, CkGlobal paramCkGlobal, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkGlobal_debugLogFilePath(long paramLong, CkGlobal paramCkGlobal);
/*       */   
/*       */   public static final native void CkGlobal_put_DebugLogFilePath(long paramLong, CkGlobal paramCkGlobal, String paramString);
/*       */   
/*       */   public static final native int CkGlobal_get_DefaultNtlmVersion(long paramLong, CkGlobal paramCkGlobal);
/*       */   
/*       */   public static final native void CkGlobal_put_DefaultNtlmVersion(long paramLong, CkGlobal paramCkGlobal, int paramInt);
/*       */   
/*       */   public static final native boolean CkGlobal_get_DefaultUtf8(long paramLong, CkGlobal paramCkGlobal);
/*       */   
/*       */   public static final native void CkGlobal_put_DefaultUtf8(long paramLong, CkGlobal paramCkGlobal, boolean paramBoolean);
/*       */   
/*       */   public static final native int CkGlobal_get_DnsTimeToLive(long paramLong, CkGlobal paramCkGlobal);
/*       */   
/*       */   public static final native void CkGlobal_put_DnsTimeToLive(long paramLong, CkGlobal paramCkGlobal, int paramInt);
/*       */   
/*       */   public static final native boolean CkGlobal_get_EnableDnsCaching(long paramLong, CkGlobal paramCkGlobal);
/*       */   
/*       */   public static final native void CkGlobal_put_EnableDnsCaching(long paramLong, CkGlobal paramCkGlobal, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkGlobal_get_LastErrorHtml(long paramLong1, CkGlobal paramCkGlobal, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkGlobal_lastErrorHtml(long paramLong, CkGlobal paramCkGlobal);
/*       */   
/*       */   public static final native void CkGlobal_get_LastErrorText(long paramLong1, CkGlobal paramCkGlobal, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkGlobal_lastErrorText(long paramLong, CkGlobal paramCkGlobal);
/*       */   
/*       */   public static final native void CkGlobal_get_LastErrorXml(long paramLong1, CkGlobal paramCkGlobal, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkGlobal_lastErrorXml(long paramLong, CkGlobal paramCkGlobal);
/*       */   
/*       */   public static final native boolean CkGlobal_get_LastMethodSuccess(long paramLong, CkGlobal paramCkGlobal);
/*       */   
/*       */   public static final native void CkGlobal_put_LastMethodSuccess(long paramLong, CkGlobal paramCkGlobal, boolean paramBoolean);
/*       */   
/*       */   public static final native int CkGlobal_get_MaxThreads(long paramLong, CkGlobal paramCkGlobal);
/*       */   
/*       */   public static final native void CkGlobal_put_MaxThreads(long paramLong, CkGlobal paramCkGlobal, int paramInt);
/*       */   
/*       */   public static final native boolean CkGlobal_get_PreferIpv6(long paramLong, CkGlobal paramCkGlobal);
/*       */   
/*       */   public static final native void CkGlobal_put_PreferIpv6(long paramLong, CkGlobal paramCkGlobal, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkGlobal_get_ThreadPoolLogPath(long paramLong1, CkGlobal paramCkGlobal, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkGlobal_threadPoolLogPath(long paramLong, CkGlobal paramCkGlobal);
/*       */   
/*       */   public static final native void CkGlobal_put_ThreadPoolLogPath(long paramLong, CkGlobal paramCkGlobal, String paramString);
/*       */   
/*       */   public static final native int CkGlobal_get_UnlockStatus(long paramLong, CkGlobal paramCkGlobal);
/*       */   
/*       */   public static final native boolean CkGlobal_get_UsePkcsConstructedEncoding(long paramLong, CkGlobal paramCkGlobal);
/*       */   
/*       */   public static final native void CkGlobal_put_UsePkcsConstructedEncoding(long paramLong, CkGlobal paramCkGlobal, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkGlobal_get_VerboseLogging(long paramLong, CkGlobal paramCkGlobal);
/*       */   
/*       */   public static final native void CkGlobal_put_VerboseLogging(long paramLong, CkGlobal paramCkGlobal, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkGlobal_get_Version(long paramLong1, CkGlobal paramCkGlobal, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkGlobal_version(long paramLong, CkGlobal paramCkGlobal);
/*       */   
/*       */   public static final native boolean CkGlobal_DnsClearCache(long paramLong, CkGlobal paramCkGlobal);
/*       */   
/*       */   public static final native boolean CkGlobal_FinalizeThreadPool(long paramLong, CkGlobal paramCkGlobal);
/*       */   
/*       */   public static final native boolean CkGlobal_SaveLastError(long paramLong, CkGlobal paramCkGlobal, String paramString);
/*       */   
/*       */   public static final native boolean CkGlobal_UnlockBundle(long paramLong, CkGlobal paramCkGlobal, String paramString);
/*       */   
/*       */   public static final native long new_CkGzip();
/*       */   
/*       */   public static final native void delete_CkGzip(long paramLong);
/*       */   
/*       */   public static final native void CkGzip_LastErrorXml(long paramLong1, CkGzip paramCkGzip, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkGzip_LastErrorHtml(long paramLong1, CkGzip paramCkGzip, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkGzip_LastErrorText(long paramLong1, CkGzip paramCkGzip, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkGzip_put_EventCallbackObject(long paramLong1, CkGzip paramCkGzip, long paramLong2, CkBaseProgress paramCkBaseProgress);
/*       */   
/*       */   public static final native boolean CkGzip_get_AbortCurrent(long paramLong, CkGzip paramCkGzip);
/*       */   
/*       */   public static final native void CkGzip_put_AbortCurrent(long paramLong, CkGzip paramCkGzip, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkGzip_get_Comment(long paramLong1, CkGzip paramCkGzip, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkGzip_comment(long paramLong, CkGzip paramCkGzip);
/*       */   
/*       */   public static final native void CkGzip_put_Comment(long paramLong, CkGzip paramCkGzip, String paramString);
/*       */   
/*       */   public static final native int CkGzip_get_CompressionLevel(long paramLong, CkGzip paramCkGzip);
/*       */   
/*       */   public static final native void CkGzip_put_CompressionLevel(long paramLong, CkGzip paramCkGzip, int paramInt);
/*       */   
/*       */   public static final native void CkGzip_get_DebugLogFilePath(long paramLong1, CkGzip paramCkGzip, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkGzip_debugLogFilePath(long paramLong, CkGzip paramCkGzip);
/*       */   
/*       */   public static final native void CkGzip_put_DebugLogFilePath(long paramLong, CkGzip paramCkGzip, String paramString);
/*       */   
/*       */   public static final native void CkGzip_get_ExtraData(long paramLong1, CkGzip paramCkGzip, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native void CkGzip_put_ExtraData(long paramLong1, CkGzip paramCkGzip, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native void CkGzip_get_Filename(long paramLong1, CkGzip paramCkGzip, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkGzip_filename(long paramLong, CkGzip paramCkGzip);
/*       */   
/*       */   public static final native void CkGzip_put_Filename(long paramLong, CkGzip paramCkGzip, String paramString);
/*       */   
/*       */   public static final native int CkGzip_get_HeartbeatMs(long paramLong, CkGzip paramCkGzip);
/*       */   
/*       */   public static final native void CkGzip_put_HeartbeatMs(long paramLong, CkGzip paramCkGzip, int paramInt);
/*       */   
/*       */   public static final native void CkGzip_get_LastErrorHtml(long paramLong1, CkGzip paramCkGzip, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkGzip_lastErrorHtml(long paramLong, CkGzip paramCkGzip);
/*       */   
/*       */   public static final native void CkGzip_get_LastErrorText(long paramLong1, CkGzip paramCkGzip, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkGzip_lastErrorText(long paramLong, CkGzip paramCkGzip);
/*       */   
/*       */   public static final native void CkGzip_get_LastErrorXml(long paramLong1, CkGzip paramCkGzip, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkGzip_lastErrorXml(long paramLong, CkGzip paramCkGzip);
/*       */   
/*       */   public static final native boolean CkGzip_get_LastMethodSuccess(long paramLong, CkGzip paramCkGzip);
/*       */   
/*       */   public static final native void CkGzip_put_LastMethodSuccess(long paramLong, CkGzip paramCkGzip, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkGzip_get_LastMod(long paramLong1, CkGzip paramCkGzip, long paramLong2, SYSTEMTIME paramSYSTEMTIME);
/*       */   
/*       */   public static final native void CkGzip_put_LastMod(long paramLong1, CkGzip paramCkGzip, long paramLong2, SYSTEMTIME paramSYSTEMTIME);
/*       */   
/*       */   public static final native void CkGzip_get_LastModStr(long paramLong1, CkGzip paramCkGzip, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkGzip_lastModStr(long paramLong, CkGzip paramCkGzip);
/*       */   
/*       */   public static final native void CkGzip_put_LastModStr(long paramLong, CkGzip paramCkGzip, String paramString);
/*       */   
/*       */   public static final native boolean CkGzip_get_UseCurrentDate(long paramLong, CkGzip paramCkGzip);
/*       */   
/*       */   public static final native void CkGzip_put_UseCurrentDate(long paramLong, CkGzip paramCkGzip, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkGzip_get_VerboseLogging(long paramLong, CkGzip paramCkGzip);
/*       */   
/*       */   public static final native void CkGzip_put_VerboseLogging(long paramLong, CkGzip paramCkGzip, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkGzip_get_Version(long paramLong1, CkGzip paramCkGzip, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkGzip_version(long paramLong, CkGzip paramCkGzip);
/*       */   
/*       */   public static final native boolean CkGzip_CompressBd(long paramLong1, CkGzip paramCkGzip, long paramLong2, CkBinData paramCkBinData);
/*       */   
/*       */   public static final native long CkGzip_CompressBdAsync(long paramLong1, CkGzip paramCkGzip, long paramLong2, CkBinData paramCkBinData);
/*       */   
/*       */   public static final native boolean CkGzip_CompressFile(long paramLong, CkGzip paramCkGzip, String paramString1, String paramString2);
/*       */   
/*       */   public static final native long CkGzip_CompressFileAsync(long paramLong, CkGzip paramCkGzip, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkGzip_CompressFile2(long paramLong, CkGzip paramCkGzip, String paramString1, String paramString2, String paramString3);
/*       */   
/*       */   public static final native long CkGzip_CompressFile2Async(long paramLong, CkGzip paramCkGzip, String paramString1, String paramString2, String paramString3);
/*       */   
/*       */   public static final native boolean CkGzip_CompressFileToMem(long paramLong1, CkGzip paramCkGzip, String paramString, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native long CkGzip_CompressFileToMemAsync(long paramLong, CkGzip paramCkGzip, String paramString);
/*       */   
/*       */   public static final native boolean CkGzip_CompressMemory(long paramLong1, CkGzip paramCkGzip, long paramLong2, CkByteData paramCkByteData1, long paramLong3, CkByteData paramCkByteData2);
/*       */   
/*       */   public static final native long CkGzip_CompressMemoryAsync(long paramLong1, CkGzip paramCkGzip, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkGzip_CompressMemToFile(long paramLong1, CkGzip paramCkGzip, long paramLong2, CkByteData paramCkByteData, String paramString);
/*       */   
/*       */   public static final native long CkGzip_CompressMemToFileAsync(long paramLong1, CkGzip paramCkGzip, long paramLong2, CkByteData paramCkByteData, String paramString);
/*       */   
/*       */   public static final native boolean CkGzip_CompressString(long paramLong1, CkGzip paramCkGzip, String paramString1, String paramString2, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native long CkGzip_CompressStringAsync(long paramLong, CkGzip paramCkGzip, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkGzip_CompressStringENC(long paramLong1, CkGzip paramCkGzip, String paramString1, String paramString2, String paramString3, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkGzip_compressStringENC(long paramLong, CkGzip paramCkGzip, String paramString1, String paramString2, String paramString3);
/*       */   
/*       */   public static final native boolean CkGzip_CompressStringToFile(long paramLong, CkGzip paramCkGzip, String paramString1, String paramString2, String paramString3);
/*       */   
/*       */   public static final native long CkGzip_CompressStringToFileAsync(long paramLong, CkGzip paramCkGzip, String paramString1, String paramString2, String paramString3);
/*       */   
/*       */   public static final native boolean CkGzip_Decode(long paramLong1, CkGzip paramCkGzip, String paramString1, String paramString2, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkGzip_DeflateStringENC(long paramLong1, CkGzip paramCkGzip, String paramString1, String paramString2, String paramString3, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkGzip_deflateStringENC(long paramLong, CkGzip paramCkGzip, String paramString1, String paramString2, String paramString3);
/*       */   
/*       */   public static final native boolean CkGzip_Encode(long paramLong1, CkGzip paramCkGzip, long paramLong2, CkByteData paramCkByteData, String paramString, long paramLong3, CkString paramCkString);
/*       */   
/*       */   public static final native String CkGzip_encode(long paramLong1, CkGzip paramCkGzip, long paramLong2, CkByteData paramCkByteData, String paramString);
/*       */   
/*       */   public static final native boolean CkGzip_ExamineFile(long paramLong, CkGzip paramCkGzip, String paramString);
/*       */   
/*       */   public static final native boolean CkGzip_ExamineMemory(long paramLong1, CkGzip paramCkGzip, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native long CkGzip_GetDt(long paramLong, CkGzip paramCkGzip);
/*       */   
/*       */   public static final native boolean CkGzip_InflateStringENC(long paramLong1, CkGzip paramCkGzip, String paramString1, String paramString2, String paramString3, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkGzip_inflateStringENC(long paramLong, CkGzip paramCkGzip, String paramString1, String paramString2, String paramString3);
/*       */   
/*       */   public static final native boolean CkGzip_IsUnlocked(long paramLong, CkGzip paramCkGzip);
/*       */   
/*       */   public static final native boolean CkGzip_ReadFile(long paramLong1, CkGzip paramCkGzip, String paramString, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkGzip_SaveLastError(long paramLong, CkGzip paramCkGzip, String paramString);
/*       */   
/*       */   public static final native boolean CkGzip_SetDt(long paramLong1, CkGzip paramCkGzip, long paramLong2, CkDateTime paramCkDateTime);
/*       */   
/*       */   public static final native boolean CkGzip_UncompressBd(long paramLong1, CkGzip paramCkGzip, long paramLong2, CkBinData paramCkBinData);
/*       */   
/*       */   public static final native long CkGzip_UncompressBdAsync(long paramLong1, CkGzip paramCkGzip, long paramLong2, CkBinData paramCkBinData);
/*       */   
/*       */   public static final native boolean CkGzip_UncompressFile(long paramLong, CkGzip paramCkGzip, String paramString1, String paramString2);
/*       */   
/*       */   public static final native long CkGzip_UncompressFileAsync(long paramLong, CkGzip paramCkGzip, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkGzip_UncompressFileToMem(long paramLong1, CkGzip paramCkGzip, String paramString, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native long CkGzip_UncompressFileToMemAsync(long paramLong, CkGzip paramCkGzip, String paramString);
/*       */   
/*       */   public static final native boolean CkGzip_UncompressFileToString(long paramLong1, CkGzip paramCkGzip, String paramString1, String paramString2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkGzip_uncompressFileToString(long paramLong, CkGzip paramCkGzip, String paramString1, String paramString2);
/*       */   
/*       */   public static final native long CkGzip_UncompressFileToStringAsync(long paramLong, CkGzip paramCkGzip, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkGzip_UncompressMemory(long paramLong1, CkGzip paramCkGzip, long paramLong2, CkByteData paramCkByteData1, long paramLong3, CkByteData paramCkByteData2);
/*       */   
/*       */   public static final native long CkGzip_UncompressMemoryAsync(long paramLong1, CkGzip paramCkGzip, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkGzip_UncompressMemToFile(long paramLong1, CkGzip paramCkGzip, long paramLong2, CkByteData paramCkByteData, String paramString);
/*       */   
/*       */   public static final native long CkGzip_UncompressMemToFileAsync(long paramLong1, CkGzip paramCkGzip, long paramLong2, CkByteData paramCkByteData, String paramString);
/*       */   
/*       */   public static final native boolean CkGzip_UncompressString(long paramLong1, CkGzip paramCkGzip, long paramLong2, CkByteData paramCkByteData, String paramString, long paramLong3, CkString paramCkString);
/*       */   
/*       */   public static final native String CkGzip_uncompressString(long paramLong1, CkGzip paramCkGzip, long paramLong2, CkByteData paramCkByteData, String paramString);
/*       */   
/*       */   public static final native long CkGzip_UncompressStringAsync(long paramLong1, CkGzip paramCkGzip, long paramLong2, CkByteData paramCkByteData, String paramString);
/*       */   
/*       */   public static final native boolean CkGzip_UncompressStringENC(long paramLong1, CkGzip paramCkGzip, String paramString1, String paramString2, String paramString3, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkGzip_uncompressStringENC(long paramLong, CkGzip paramCkGzip, String paramString1, String paramString2, String paramString3);
/*       */   
/*       */   public static final native boolean CkGzip_UnlockComponent(long paramLong, CkGzip paramCkGzip, String paramString);
/*       */   
/*       */   public static final native boolean CkGzip_UnTarGz(long paramLong, CkGzip paramCkGzip, String paramString1, String paramString2, boolean paramBoolean);
/*       */   
/*       */   public static final native long CkGzip_UnTarGzAsync(long paramLong, CkGzip paramCkGzip, String paramString1, String paramString2, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkGzip_WriteFile(long paramLong1, CkGzip paramCkGzip, String paramString, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkGzip_XfdlToXml(long paramLong1, CkGzip paramCkGzip, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkGzip_xfdlToXml(long paramLong, CkGzip paramCkGzip, String paramString);
/*       */   
/*       */   public static final native long new_CkHashtable();
/*       */   
/*       */   public static final native void delete_CkHashtable(long paramLong);
/*       */   
/*       */   public static final native boolean CkHashtable_get_LastMethodSuccess(long paramLong, CkHashtable paramCkHashtable);
/*       */   
/*       */   public static final native void CkHashtable_put_LastMethodSuccess(long paramLong, CkHashtable paramCkHashtable, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkHashtable_AddFromXmlSb(long paramLong1, CkHashtable paramCkHashtable, long paramLong2, CkStringBuilder paramCkStringBuilder);
/*       */   
/*       */   public static final native boolean CkHashtable_AddInt(long paramLong, CkHashtable paramCkHashtable, String paramString, int paramInt);
/*       */   
/*       */   public static final native boolean CkHashtable_AddQueryParams(long paramLong, CkHashtable paramCkHashtable, String paramString);
/*       */   
/*       */   public static final native boolean CkHashtable_AddStr(long paramLong, CkHashtable paramCkHashtable, String paramString1, String paramString2);
/*       */   
/*       */   public static final native void CkHashtable_Clear(long paramLong, CkHashtable paramCkHashtable);
/*       */   
/*       */   public static final native boolean CkHashtable_ClearWithNewCapacity(long paramLong, CkHashtable paramCkHashtable, int paramInt);
/*       */   
/*       */   public static final native boolean CkHashtable_Contains(long paramLong, CkHashtable paramCkHashtable, String paramString);
/*       */   
/*       */   public static final native boolean CkHashtable_ContainsIntKey(long paramLong, CkHashtable paramCkHashtable, int paramInt);
/*       */   
/*       */   public static final native boolean CkHashtable_GetKeys(long paramLong1, CkHashtable paramCkHashtable, long paramLong2, CkStringTable paramCkStringTable);
/*       */   
/*       */   public static final native int CkHashtable_LookupInt(long paramLong, CkHashtable paramCkHashtable, String paramString);
/*       */   
/*       */   public static final native boolean CkHashtable_LookupStr(long paramLong1, CkHashtable paramCkHashtable, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHashtable_lookupStr(long paramLong, CkHashtable paramCkHashtable, String paramString);
/*       */   
/*       */   public static final native boolean CkHashtable_Remove(long paramLong, CkHashtable paramCkHashtable, String paramString);
/*       */   
/*       */   public static final native boolean CkHashtable_ToXmlSb(long paramLong1, CkHashtable paramCkHashtable, long paramLong2, CkStringBuilder paramCkStringBuilder);
/*       */   
/*       */   public static final native long new_CkHtmlToText();
/*       */   
/*       */   public static final native void delete_CkHtmlToText(long paramLong);
/*       */   
/*       */   public static final native void CkHtmlToText_LastErrorXml(long paramLong1, CkHtmlToText paramCkHtmlToText, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkHtmlToText_LastErrorHtml(long paramLong1, CkHtmlToText paramCkHtmlToText, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkHtmlToText_LastErrorText(long paramLong1, CkHtmlToText paramCkHtmlToText, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkHtmlToText_get_DebugLogFilePath(long paramLong1, CkHtmlToText paramCkHtmlToText, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHtmlToText_debugLogFilePath(long paramLong, CkHtmlToText paramCkHtmlToText);
/*       */   
/*       */   public static final native void CkHtmlToText_put_DebugLogFilePath(long paramLong, CkHtmlToText paramCkHtmlToText, String paramString);
/*       */   
/*       */   public static final native boolean CkHtmlToText_get_DecodeHtmlEntities(long paramLong, CkHtmlToText paramCkHtmlToText);
/*       */   
/*       */   public static final native void CkHtmlToText_put_DecodeHtmlEntities(long paramLong, CkHtmlToText paramCkHtmlToText, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkHtmlToText_get_LastErrorHtml(long paramLong1, CkHtmlToText paramCkHtmlToText, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHtmlToText_lastErrorHtml(long paramLong, CkHtmlToText paramCkHtmlToText);
/*       */   
/*       */   public static final native void CkHtmlToText_get_LastErrorText(long paramLong1, CkHtmlToText paramCkHtmlToText, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHtmlToText_lastErrorText(long paramLong, CkHtmlToText paramCkHtmlToText);
/*       */   
/*       */   public static final native void CkHtmlToText_get_LastErrorXml(long paramLong1, CkHtmlToText paramCkHtmlToText, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHtmlToText_lastErrorXml(long paramLong, CkHtmlToText paramCkHtmlToText);
/*       */   
/*       */   public static final native boolean CkHtmlToText_get_LastMethodSuccess(long paramLong, CkHtmlToText paramCkHtmlToText);
/*       */   
/*       */   public static final native void CkHtmlToText_put_LastMethodSuccess(long paramLong, CkHtmlToText paramCkHtmlToText, boolean paramBoolean);
/*       */   
/*       */   public static final native int CkHtmlToText_get_RightMargin(long paramLong, CkHtmlToText paramCkHtmlToText);
/*       */   
/*       */   public static final native void CkHtmlToText_put_RightMargin(long paramLong, CkHtmlToText paramCkHtmlToText, int paramInt);
/*       */   
/*       */   public static final native boolean CkHtmlToText_get_SuppressLinks(long paramLong, CkHtmlToText paramCkHtmlToText);
/*       */   
/*       */   public static final native void CkHtmlToText_put_SuppressLinks(long paramLong, CkHtmlToText paramCkHtmlToText, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkHtmlToText_get_VerboseLogging(long paramLong, CkHtmlToText paramCkHtmlToText);
/*       */   
/*       */   public static final native void CkHtmlToText_put_VerboseLogging(long paramLong, CkHtmlToText paramCkHtmlToText, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkHtmlToText_get_Version(long paramLong1, CkHtmlToText paramCkHtmlToText, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHtmlToText_version(long paramLong, CkHtmlToText paramCkHtmlToText);
/*       */   
/*       */   public static final native boolean CkHtmlToText_IsUnlocked(long paramLong, CkHtmlToText paramCkHtmlToText);
/*       */   
/*       */   public static final native boolean CkHtmlToText_ReadFileToString(long paramLong1, CkHtmlToText paramCkHtmlToText, String paramString1, String paramString2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHtmlToText_readFileToString(long paramLong, CkHtmlToText paramCkHtmlToText, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkHtmlToText_SaveLastError(long paramLong, CkHtmlToText paramCkHtmlToText, String paramString);
/*       */   
/*       */   public static final native boolean CkHtmlToText_ToText(long paramLong1, CkHtmlToText paramCkHtmlToText, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHtmlToText_toText(long paramLong, CkHtmlToText paramCkHtmlToText, String paramString);
/*       */   
/*       */   public static final native boolean CkHtmlToText_UnlockComponent(long paramLong, CkHtmlToText paramCkHtmlToText, String paramString);
/*       */   
/*       */   public static final native boolean CkHtmlToText_WriteStringToFile(long paramLong, CkHtmlToText paramCkHtmlToText, String paramString1, String paramString2, String paramString3);
/*       */   
/*       */   public static final native long new_CkHtmlToXml();
/*       */   
/*       */   public static final native void delete_CkHtmlToXml(long paramLong);
/*       */   
/*       */   public static final native void CkHtmlToXml_LastErrorXml(long paramLong1, CkHtmlToXml paramCkHtmlToXml, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkHtmlToXml_LastErrorHtml(long paramLong1, CkHtmlToXml paramCkHtmlToXml, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkHtmlToXml_LastErrorText(long paramLong1, CkHtmlToXml paramCkHtmlToXml, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkHtmlToXml_get_DebugLogFilePath(long paramLong1, CkHtmlToXml paramCkHtmlToXml, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHtmlToXml_debugLogFilePath(long paramLong, CkHtmlToXml paramCkHtmlToXml);
/*       */   
/*       */   public static final native void CkHtmlToXml_put_DebugLogFilePath(long paramLong, CkHtmlToXml paramCkHtmlToXml, String paramString);
/*       */   
/*       */   public static final native boolean CkHtmlToXml_get_DropCustomTags(long paramLong, CkHtmlToXml paramCkHtmlToXml);
/*       */   
/*       */   public static final native void CkHtmlToXml_put_DropCustomTags(long paramLong, CkHtmlToXml paramCkHtmlToXml, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkHtmlToXml_get_Html(long paramLong1, CkHtmlToXml paramCkHtmlToXml, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHtmlToXml_html(long paramLong, CkHtmlToXml paramCkHtmlToXml);
/*       */   
/*       */   public static final native void CkHtmlToXml_put_Html(long paramLong, CkHtmlToXml paramCkHtmlToXml, String paramString);
/*       */   
/*       */   public static final native void CkHtmlToXml_get_LastErrorHtml(long paramLong1, CkHtmlToXml paramCkHtmlToXml, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHtmlToXml_lastErrorHtml(long paramLong, CkHtmlToXml paramCkHtmlToXml);
/*       */   
/*       */   public static final native void CkHtmlToXml_get_LastErrorText(long paramLong1, CkHtmlToXml paramCkHtmlToXml, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHtmlToXml_lastErrorText(long paramLong, CkHtmlToXml paramCkHtmlToXml);
/*       */   
/*       */   public static final native void CkHtmlToXml_get_LastErrorXml(long paramLong1, CkHtmlToXml paramCkHtmlToXml, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHtmlToXml_lastErrorXml(long paramLong, CkHtmlToXml paramCkHtmlToXml);
/*       */   
/*       */   public static final native boolean CkHtmlToXml_get_LastMethodSuccess(long paramLong, CkHtmlToXml paramCkHtmlToXml);
/*       */   
/*       */   public static final native void CkHtmlToXml_put_LastMethodSuccess(long paramLong, CkHtmlToXml paramCkHtmlToXml, boolean paramBoolean);
/*       */   
/*       */   public static final native int CkHtmlToXml_get_Nbsp(long paramLong, CkHtmlToXml paramCkHtmlToXml);
/*       */   
/*       */   public static final native void CkHtmlToXml_put_Nbsp(long paramLong, CkHtmlToXml paramCkHtmlToXml, int paramInt);
/*       */   
/*       */   public static final native boolean CkHtmlToXml_get_VerboseLogging(long paramLong, CkHtmlToXml paramCkHtmlToXml);
/*       */   
/*       */   public static final native void CkHtmlToXml_put_VerboseLogging(long paramLong, CkHtmlToXml paramCkHtmlToXml, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkHtmlToXml_get_Version(long paramLong1, CkHtmlToXml paramCkHtmlToXml, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHtmlToXml_version(long paramLong, CkHtmlToXml paramCkHtmlToXml);
/*       */   
/*       */   public static final native void CkHtmlToXml_get_XmlCharset(long paramLong1, CkHtmlToXml paramCkHtmlToXml, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHtmlToXml_xmlCharset(long paramLong, CkHtmlToXml paramCkHtmlToXml);
/*       */   
/*       */   public static final native void CkHtmlToXml_put_XmlCharset(long paramLong, CkHtmlToXml paramCkHtmlToXml, String paramString);
/*       */   
/*       */   public static final native boolean CkHtmlToXml_ConvertFile(long paramLong, CkHtmlToXml paramCkHtmlToXml, String paramString1, String paramString2);
/*       */   
/*       */   public static final native void CkHtmlToXml_DropTagType(long paramLong, CkHtmlToXml paramCkHtmlToXml, String paramString);
/*       */   
/*       */   public static final native void CkHtmlToXml_DropTextFormattingTags(long paramLong, CkHtmlToXml paramCkHtmlToXml);
/*       */   
/*       */   public static final native boolean CkHtmlToXml_IsUnlocked(long paramLong, CkHtmlToXml paramCkHtmlToXml);
/*       */   
/*       */   public static final native boolean CkHtmlToXml_ReadFile(long paramLong1, CkHtmlToXml paramCkHtmlToXml, String paramString, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkHtmlToXml_ReadFileToString(long paramLong1, CkHtmlToXml paramCkHtmlToXml, String paramString1, String paramString2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHtmlToXml_readFileToString(long paramLong, CkHtmlToXml paramCkHtmlToXml, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkHtmlToXml_SaveLastError(long paramLong, CkHtmlToXml paramCkHtmlToXml, String paramString);
/*       */   
/*       */   public static final native void CkHtmlToXml_SetHtmlBytes(long paramLong1, CkHtmlToXml paramCkHtmlToXml, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkHtmlToXml_SetHtmlFromFile(long paramLong, CkHtmlToXml paramCkHtmlToXml, String paramString);
/*       */   
/*       */   public static final native boolean CkHtmlToXml_ToXml(long paramLong1, CkHtmlToXml paramCkHtmlToXml, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHtmlToXml_toXml(long paramLong, CkHtmlToXml paramCkHtmlToXml);
/*       */   
/*       */   public static final native void CkHtmlToXml_UndropTagType(long paramLong, CkHtmlToXml paramCkHtmlToXml, String paramString);
/*       */   
/*       */   public static final native void CkHtmlToXml_UndropTextFormattingTags(long paramLong, CkHtmlToXml paramCkHtmlToXml);
/*       */   
/*       */   public static final native boolean CkHtmlToXml_UnlockComponent(long paramLong, CkHtmlToXml paramCkHtmlToXml, String paramString);
/*       */   
/*       */   public static final native boolean CkHtmlToXml_WriteFile(long paramLong1, CkHtmlToXml paramCkHtmlToXml, String paramString, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkHtmlToXml_WriteStringToFile(long paramLong, CkHtmlToXml paramCkHtmlToXml, String paramString1, String paramString2, String paramString3);
/*       */   
/*       */   public static final native boolean CkHtmlToXml_Xml(long paramLong1, CkHtmlToXml paramCkHtmlToXml, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHtmlToXml_xml(long paramLong, CkHtmlToXml paramCkHtmlToXml);
/*       */   
/*       */   public static final native long new_CkHttp();
/*       */   
/*       */   public static final native void delete_CkHttp(long paramLong);
/*       */   
/*       */   public static final native void CkHttp_LastErrorXml(long paramLong1, CkHttp paramCkHttp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkHttp_LastErrorHtml(long paramLong1, CkHttp paramCkHttp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkHttp_LastErrorText(long paramLong1, CkHttp paramCkHttp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkHttp_put_EventCallbackObject(long paramLong1, CkHttp paramCkHttp, long paramLong2, CkHttpProgress paramCkHttpProgress);
/*       */   
/*       */   public static final native boolean CkHttp_get_AbortCurrent(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native void CkHttp_put_AbortCurrent(long paramLong, CkHttp paramCkHttp, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkHttp_get_Accept(long paramLong1, CkHttp paramCkHttp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttp_ck_accept(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native void CkHttp_put_Accept(long paramLong, CkHttp paramCkHttp, String paramString);
/*       */   
/*       */   public static final native void CkHttp_get_AcceptCharset(long paramLong1, CkHttp paramCkHttp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttp_acceptCharset(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native void CkHttp_put_AcceptCharset(long paramLong, CkHttp paramCkHttp, String paramString);
/*       */   
/*       */   public static final native void CkHttp_get_AcceptLanguage(long paramLong1, CkHttp paramCkHttp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttp_acceptLanguage(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native void CkHttp_put_AcceptLanguage(long paramLong, CkHttp paramCkHttp, String paramString);
/*       */   
/*       */   public static final native boolean CkHttp_get_AllowGzip(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native void CkHttp_put_AllowGzip(long paramLong, CkHttp paramCkHttp, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkHttp_get_AllowHeaderFolding(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native void CkHttp_put_AllowHeaderFolding(long paramLong, CkHttp paramCkHttp, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkHttp_get_AuthToken(long paramLong1, CkHttp paramCkHttp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttp_authToken(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native void CkHttp_put_AuthToken(long paramLong, CkHttp paramCkHttp, String paramString);
/*       */   
/*       */   public static final native boolean CkHttp_get_AutoAddHostHeader(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native void CkHttp_put_AutoAddHostHeader(long paramLong, CkHttp paramCkHttp, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkHttp_get_AwsAccessKey(long paramLong1, CkHttp paramCkHttp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttp_awsAccessKey(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native void CkHttp_put_AwsAccessKey(long paramLong, CkHttp paramCkHttp, String paramString);
/*       */   
/*       */   public static final native void CkHttp_get_AwsEndpoint(long paramLong1, CkHttp paramCkHttp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttp_awsEndpoint(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native void CkHttp_put_AwsEndpoint(long paramLong, CkHttp paramCkHttp, String paramString);
/*       */   
/*       */   public static final native void CkHttp_get_AwsRegion(long paramLong1, CkHttp paramCkHttp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttp_awsRegion(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native void CkHttp_put_AwsRegion(long paramLong, CkHttp paramCkHttp, String paramString);
/*       */   
/*       */   public static final native void CkHttp_get_AwsSecretKey(long paramLong1, CkHttp paramCkHttp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttp_awsSecretKey(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native void CkHttp_put_AwsSecretKey(long paramLong, CkHttp paramCkHttp, String paramString);
/*       */   
/*       */   public static final native int CkHttp_get_AwsSignatureVersion(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native void CkHttp_put_AwsSignatureVersion(long paramLong, CkHttp paramCkHttp, int paramInt);
/*       */   
/*       */   public static final native void CkHttp_get_AwsSubResources(long paramLong1, CkHttp paramCkHttp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttp_awsSubResources(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native void CkHttp_put_AwsSubResources(long paramLong, CkHttp paramCkHttp, String paramString);
/*       */   
/*       */   public static final native int CkHttp_get_BandwidthThrottleDown(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native void CkHttp_put_BandwidthThrottleDown(long paramLong, CkHttp paramCkHttp, int paramInt);
/*       */   
/*       */   public static final native int CkHttp_get_BandwidthThrottleUp(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native void CkHttp_put_BandwidthThrottleUp(long paramLong, CkHttp paramCkHttp, int paramInt);
/*       */   
/*       */   public static final native boolean CkHttp_get_BasicAuth(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native void CkHttp_put_BasicAuth(long paramLong, CkHttp paramCkHttp, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkHttp_get_BgLastErrorText(long paramLong1, CkHttp paramCkHttp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttp_bgLastErrorText(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native int CkHttp_get_BgPercentDone(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native void CkHttp_get_BgResultData(long paramLong1, CkHttp paramCkHttp, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native int CkHttp_get_BgResultInt(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native void CkHttp_get_BgResultString(long paramLong1, CkHttp paramCkHttp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttp_bgResultString(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native boolean CkHttp_get_BgTaskFinished(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native boolean CkHttp_get_BgTaskRunning(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native boolean CkHttp_get_BgTaskSuccess(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native void CkHttp_get_ClientIpAddress(long paramLong1, CkHttp paramCkHttp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttp_clientIpAddress(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native void CkHttp_put_ClientIpAddress(long paramLong, CkHttp paramCkHttp, String paramString);
/*       */   
/*       */   public static final native int CkHttp_get_ConnectFailReason(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native void CkHttp_get_Connection(long paramLong1, CkHttp paramCkHttp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttp_connection(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native void CkHttp_put_Connection(long paramLong, CkHttp paramCkHttp, String paramString);
/*       */   
/*       */   public static final native int CkHttp_get_ConnectTimeout(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native void CkHttp_put_ConnectTimeout(long paramLong, CkHttp paramCkHttp, int paramInt);
/*       */   
/*       */   public static final native void CkHttp_get_CookieDir(long paramLong1, CkHttp paramCkHttp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttp_cookieDir(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native void CkHttp_put_CookieDir(long paramLong, CkHttp paramCkHttp, String paramString);
/*       */   
/*       */   public static final native void CkHttp_get_DebugLogFilePath(long paramLong1, CkHttp paramCkHttp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttp_debugLogFilePath(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native void CkHttp_put_DebugLogFilePath(long paramLong, CkHttp paramCkHttp, String paramString);
/*       */   
/*       */   public static final native int CkHttp_get_DefaultFreshPeriod(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native void CkHttp_put_DefaultFreshPeriod(long paramLong, CkHttp paramCkHttp, int paramInt);
/*       */   
/*       */   public static final native boolean CkHttp_get_DigestAuth(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native void CkHttp_put_DigestAuth(long paramLong, CkHttp paramCkHttp, boolean paramBoolean);
/*       */   
/*       */   public static final native int CkHttp_get_EventLogCount(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native boolean CkHttp_get_FetchFromCache(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native void CkHttp_put_FetchFromCache(long paramLong, CkHttp paramCkHttp, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkHttp_get_FinalRedirectUrl(long paramLong1, CkHttp paramCkHttp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttp_finalRedirectUrl(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native boolean CkHttp_get_FollowRedirects(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native void CkHttp_put_FollowRedirects(long paramLong, CkHttp paramCkHttp, boolean paramBoolean);
/*       */   
/*       */   public static final native int CkHttp_get_FreshnessAlgorithm(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native void CkHttp_put_FreshnessAlgorithm(long paramLong, CkHttp paramCkHttp, int paramInt);
/*       */   
/*       */   public static final native int CkHttp_get_HeartbeatMs(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native void CkHttp_put_HeartbeatMs(long paramLong, CkHttp paramCkHttp, int paramInt);
/*       */   
/*       */   public static final native boolean CkHttp_get_IgnoreMustRevalidate(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native void CkHttp_put_IgnoreMustRevalidate(long paramLong, CkHttp paramCkHttp, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkHttp_get_IgnoreNoCache(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native void CkHttp_put_IgnoreNoCache(long paramLong, CkHttp paramCkHttp, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkHttp_get_KeepEventLog(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native void CkHttp_put_KeepEventLog(long paramLong, CkHttp paramCkHttp, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkHttp_get_KeepResponseBody(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native void CkHttp_put_KeepResponseBody(long paramLong, CkHttp paramCkHttp, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkHttp_get_LastContentType(long paramLong1, CkHttp paramCkHttp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttp_lastContentType(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native void CkHttp_get_LastErrorHtml(long paramLong1, CkHttp paramCkHttp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttp_lastErrorHtml(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native void CkHttp_get_LastErrorText(long paramLong1, CkHttp paramCkHttp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttp_lastErrorText(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native void CkHttp_get_LastErrorXml(long paramLong1, CkHttp paramCkHttp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttp_lastErrorXml(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native void CkHttp_get_LastHeader(long paramLong1, CkHttp paramCkHttp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttp_lastHeader(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native boolean CkHttp_get_LastMethodSuccess(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native void CkHttp_put_LastMethodSuccess(long paramLong, CkHttp paramCkHttp, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkHttp_get_LastModDate(long paramLong1, CkHttp paramCkHttp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttp_lastModDate(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native void CkHttp_get_LastResponseBody(long paramLong1, CkHttp paramCkHttp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttp_lastResponseBody(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native void CkHttp_get_LastResponseHeader(long paramLong1, CkHttp paramCkHttp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttp_lastResponseHeader(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native int CkHttp_get_LastStatus(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native void CkHttp_get_LastStatusText(long paramLong1, CkHttp paramCkHttp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttp_lastStatusText(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native int CkHttp_get_LMFactor(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native void CkHttp_put_LMFactor(long paramLong, CkHttp paramCkHttp, int paramInt);
/*       */   
/*       */   public static final native void CkHttp_get_Login(long paramLong1, CkHttp paramCkHttp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttp_login(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native void CkHttp_put_Login(long paramLong, CkHttp paramCkHttp, String paramString);
/*       */   
/*       */   public static final native void CkHttp_get_LoginDomain(long paramLong1, CkHttp paramCkHttp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttp_loginDomain(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native void CkHttp_put_LoginDomain(long paramLong, CkHttp paramCkHttp, String paramString);
/*       */   
/*       */   public static final native int CkHttp_get_MaxConnections(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native void CkHttp_put_MaxConnections(long paramLong, CkHttp paramCkHttp, int paramInt);
/*       */   
/*       */   public static final native int CkHttp_get_MaxFreshPeriod(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native void CkHttp_put_MaxFreshPeriod(long paramLong, CkHttp paramCkHttp, int paramInt);
/*       */   
/*       */   public static final native long CkHttp_get_MaxResponseSize(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native void CkHttp_put_MaxResponseSize(long paramLong1, CkHttp paramCkHttp, long paramLong2);
/*       */   
/*       */   public static final native int CkHttp_get_MaxUrlLen(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native void CkHttp_put_MaxUrlLen(long paramLong, CkHttp paramCkHttp, int paramInt);
/*       */   
/*       */   public static final native boolean CkHttp_get_MimicFireFox(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native void CkHttp_put_MimicFireFox(long paramLong, CkHttp paramCkHttp, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkHttp_get_MimicIE(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native void CkHttp_put_MimicIE(long paramLong, CkHttp paramCkHttp, boolean paramBoolean);
/*       */   
/*       */   public static final native int CkHttp_get_MinFreshPeriod(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native void CkHttp_put_MinFreshPeriod(long paramLong, CkHttp paramCkHttp, int paramInt);
/*       */   
/*       */   public static final native boolean CkHttp_get_NegotiateAuth(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native void CkHttp_put_NegotiateAuth(long paramLong, CkHttp paramCkHttp, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkHttp_get_NtlmAuth(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native void CkHttp_put_NtlmAuth(long paramLong, CkHttp paramCkHttp, boolean paramBoolean);
/*       */   
/*       */   public static final native int CkHttp_get_NumCacheLevels(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native void CkHttp_put_NumCacheLevels(long paramLong, CkHttp paramCkHttp, int paramInt);
/*       */   
/*       */   public static final native int CkHttp_get_NumCacheRoots(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native boolean CkHttp_get_OAuth1(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native void CkHttp_put_OAuth1(long paramLong, CkHttp paramCkHttp, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkHttp_get_OAuthCallback(long paramLong1, CkHttp paramCkHttp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttp_oAuthCallback(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native void CkHttp_put_OAuthCallback(long paramLong, CkHttp paramCkHttp, String paramString);
/*       */   
/*       */   public static final native void CkHttp_get_OAuthConsumerKey(long paramLong1, CkHttp paramCkHttp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttp_oAuthConsumerKey(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native void CkHttp_put_OAuthConsumerKey(long paramLong, CkHttp paramCkHttp, String paramString);
/*       */   
/*       */   public static final native void CkHttp_get_OAuthConsumerSecret(long paramLong1, CkHttp paramCkHttp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttp_oAuthConsumerSecret(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native void CkHttp_put_OAuthConsumerSecret(long paramLong, CkHttp paramCkHttp, String paramString);
/*       */   
/*       */   public static final native void CkHttp_get_OAuthRealm(long paramLong1, CkHttp paramCkHttp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttp_oAuthRealm(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native void CkHttp_put_OAuthRealm(long paramLong, CkHttp paramCkHttp, String paramString);
/*       */   
/*       */   public static final native void CkHttp_get_OAuthSigMethod(long paramLong1, CkHttp paramCkHttp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttp_oAuthSigMethod(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native void CkHttp_put_OAuthSigMethod(long paramLong, CkHttp paramCkHttp, String paramString);
/*       */   
/*       */   public static final native void CkHttp_get_OAuthToken(long paramLong1, CkHttp paramCkHttp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttp_oAuthToken(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native void CkHttp_put_OAuthToken(long paramLong, CkHttp paramCkHttp, String paramString);
/*       */   
/*       */   public static final native void CkHttp_get_OAuthTokenSecret(long paramLong1, CkHttp paramCkHttp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttp_oAuthTokenSecret(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native void CkHttp_put_OAuthTokenSecret(long paramLong, CkHttp paramCkHttp, String paramString);
/*       */   
/*       */   public static final native void CkHttp_get_OAuthVerifier(long paramLong1, CkHttp paramCkHttp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttp_oAuthVerifier(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native void CkHttp_put_OAuthVerifier(long paramLong, CkHttp paramCkHttp, String paramString);
/*       */   
/*       */   public static final native void CkHttp_get_Password(long paramLong1, CkHttp paramCkHttp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttp_password(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native void CkHttp_put_Password(long paramLong, CkHttp paramCkHttp, String paramString);
/*       */   
/*       */   public static final native int CkHttp_get_PercentDoneScale(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native void CkHttp_put_PercentDoneScale(long paramLong, CkHttp paramCkHttp, int paramInt);
/*       */   
/*       */   public static final native boolean CkHttp_get_PreferIpv6(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native void CkHttp_put_PreferIpv6(long paramLong, CkHttp paramCkHttp, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkHttp_get_ProxyAuthMethod(long paramLong1, CkHttp paramCkHttp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttp_proxyAuthMethod(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native void CkHttp_put_ProxyAuthMethod(long paramLong, CkHttp paramCkHttp, String paramString);
/*       */   
/*       */   public static final native void CkHttp_get_ProxyDomain(long paramLong1, CkHttp paramCkHttp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttp_proxyDomain(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native void CkHttp_put_ProxyDomain(long paramLong, CkHttp paramCkHttp, String paramString);
/*       */   
/*       */   public static final native void CkHttp_get_ProxyLogin(long paramLong1, CkHttp paramCkHttp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttp_proxyLogin(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native void CkHttp_put_ProxyLogin(long paramLong, CkHttp paramCkHttp, String paramString);
/*       */   
/*       */   public static final native void CkHttp_get_ProxyLoginDomain(long paramLong1, CkHttp paramCkHttp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttp_proxyLoginDomain(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native void CkHttp_put_ProxyLoginDomain(long paramLong, CkHttp paramCkHttp, String paramString);
/*       */   
/*       */   public static final native void CkHttp_get_ProxyPassword(long paramLong1, CkHttp paramCkHttp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttp_proxyPassword(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native void CkHttp_put_ProxyPassword(long paramLong, CkHttp paramCkHttp, String paramString);
/*       */   
/*       */   public static final native int CkHttp_get_ProxyPort(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native void CkHttp_put_ProxyPort(long paramLong, CkHttp paramCkHttp, int paramInt);
/*       */   
/*       */   public static final native int CkHttp_get_ReadTimeout(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native void CkHttp_put_ReadTimeout(long paramLong, CkHttp paramCkHttp, int paramInt);
/*       */   
/*       */   public static final native void CkHttp_get_RedirectVerb(long paramLong1, CkHttp paramCkHttp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttp_redirectVerb(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native void CkHttp_put_RedirectVerb(long paramLong, CkHttp paramCkHttp, String paramString);
/*       */   
/*       */   public static final native void CkHttp_get_Referer(long paramLong1, CkHttp paramCkHttp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttp_referer(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native void CkHttp_put_Referer(long paramLong, CkHttp paramCkHttp, String paramString);
/*       */   
/*       */   public static final native void CkHttp_get_RequiredContentType(long paramLong1, CkHttp paramCkHttp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttp_requiredContentType(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native void CkHttp_put_RequiredContentType(long paramLong, CkHttp paramCkHttp, String paramString);
/*       */   
/*       */   public static final native boolean CkHttp_get_RequireSslCertVerify(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native void CkHttp_put_RequireSslCertVerify(long paramLong, CkHttp paramCkHttp, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkHttp_get_S3Ssl(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native void CkHttp_put_S3Ssl(long paramLong, CkHttp paramCkHttp, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkHttp_get_SaveCookies(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native void CkHttp_put_SaveCookies(long paramLong, CkHttp paramCkHttp, boolean paramBoolean);
/*       */   
/*       */   public static final native int CkHttp_get_SendBufferSize(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native void CkHttp_put_SendBufferSize(long paramLong, CkHttp paramCkHttp, int paramInt);
/*       */   
/*       */   public static final native boolean CkHttp_get_SendCookies(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native void CkHttp_put_SendCookies(long paramLong, CkHttp paramCkHttp, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkHttp_get_SessionLogFilename(long paramLong1, CkHttp paramCkHttp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttp_sessionLogFilename(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native void CkHttp_put_SessionLogFilename(long paramLong, CkHttp paramCkHttp, String paramString);
/*       */   
/*       */   public static final native void CkHttp_get_SocksHostname(long paramLong1, CkHttp paramCkHttp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttp_socksHostname(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native void CkHttp_put_SocksHostname(long paramLong, CkHttp paramCkHttp, String paramString);
/*       */   
/*       */   public static final native void CkHttp_get_SocksPassword(long paramLong1, CkHttp paramCkHttp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttp_socksPassword(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native void CkHttp_put_SocksPassword(long paramLong, CkHttp paramCkHttp, String paramString);
/*       */   
/*       */   public static final native int CkHttp_get_SocksPort(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native void CkHttp_put_SocksPort(long paramLong, CkHttp paramCkHttp, int paramInt);
/*       */   
/*       */   public static final native void CkHttp_get_SocksUsername(long paramLong1, CkHttp paramCkHttp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttp_socksUsername(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native void CkHttp_put_SocksUsername(long paramLong, CkHttp paramCkHttp, String paramString);
/*       */   
/*       */   public static final native int CkHttp_get_SocksVersion(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native void CkHttp_put_SocksVersion(long paramLong, CkHttp paramCkHttp, int paramInt);
/*       */   
/*       */   public static final native int CkHttp_get_SoRcvBuf(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native void CkHttp_put_SoRcvBuf(long paramLong, CkHttp paramCkHttp, int paramInt);
/*       */   
/*       */   public static final native int CkHttp_get_SoSndBuf(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native void CkHttp_put_SoSndBuf(long paramLong, CkHttp paramCkHttp, int paramInt);
/*       */   
/*       */   public static final native void CkHttp_get_SslAllowedCiphers(long paramLong1, CkHttp paramCkHttp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttp_sslAllowedCiphers(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native void CkHttp_put_SslAllowedCiphers(long paramLong, CkHttp paramCkHttp, String paramString);
/*       */   
/*       */   public static final native void CkHttp_get_SslProtocol(long paramLong1, CkHttp paramCkHttp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttp_sslProtocol(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native void CkHttp_put_SslProtocol(long paramLong, CkHttp paramCkHttp, String paramString);
/*       */   
/*       */   public static final native void CkHttp_get_StreamResponseBodyPath(long paramLong1, CkHttp paramCkHttp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttp_streamResponseBodyPath(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native void CkHttp_put_StreamResponseBodyPath(long paramLong, CkHttp paramCkHttp, String paramString);
/*       */   
/*       */   public static final native void CkHttp_get_TlsCipherSuite(long paramLong1, CkHttp paramCkHttp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttp_tlsCipherSuite(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native void CkHttp_get_TlsPinSet(long paramLong1, CkHttp paramCkHttp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttp_tlsPinSet(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native void CkHttp_put_TlsPinSet(long paramLong, CkHttp paramCkHttp, String paramString);
/*       */   
/*       */   public static final native void CkHttp_get_TlsVersion(long paramLong1, CkHttp paramCkHttp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttp_tlsVersion(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native boolean CkHttp_get_UpdateCache(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native void CkHttp_put_UpdateCache(long paramLong, CkHttp paramCkHttp, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkHttp_get_UseBgThread(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native void CkHttp_put_UseBgThread(long paramLong, CkHttp paramCkHttp, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkHttp_get_UseIEProxy(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native void CkHttp_put_UseIEProxy(long paramLong, CkHttp paramCkHttp, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkHttp_get_UserAgent(long paramLong1, CkHttp paramCkHttp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttp_userAgent(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native void CkHttp_put_UserAgent(long paramLong, CkHttp paramCkHttp, String paramString);
/*       */   
/*       */   public static final native boolean CkHttp_get_VerboseLogging(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native void CkHttp_put_VerboseLogging(long paramLong, CkHttp paramCkHttp, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkHttp_get_Version(long paramLong1, CkHttp paramCkHttp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttp_version(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native boolean CkHttp_get_WasRedirected(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native void CkHttp_AddCacheRoot(long paramLong, CkHttp paramCkHttp, String paramString);
/*       */   
/*       */   public static final native boolean CkHttp_AddQuickHeader(long paramLong, CkHttp paramCkHttp, String paramString1, String paramString2);
/*       */   
/*       */   public static final native long CkHttp_BgResponseObject(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native void CkHttp_BgTaskAbort(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native void CkHttp_ClearBgEventLog(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native void CkHttp_ClearInMemoryCookies(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native void CkHttp_ClearUrlVars(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native boolean CkHttp_CloseAllConnections(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native long CkHttp_CloseAllConnectionsAsync(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native boolean CkHttp_CreateOcspRequest(long paramLong1, CkHttp paramCkHttp, long paramLong2, CkJsonObject paramCkJsonObject, long paramLong3, CkBinData paramCkBinData);
/*       */   
/*       */   public static final native boolean CkHttp_CreateTimestampRequest(long paramLong1, CkHttp paramCkHttp, String paramString1, String paramString2, String paramString3, boolean paramBoolean1, boolean paramBoolean2, long paramLong2, CkBinData paramCkBinData);
/*       */   
/*       */   public static final native void CkHttp_DnsCacheClear(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native boolean CkHttp_Download(long paramLong, CkHttp paramCkHttp, String paramString1, String paramString2);
/*       */   
/*       */   public static final native long CkHttp_DownloadAsync(long paramLong, CkHttp paramCkHttp, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkHttp_DownloadAppend(long paramLong, CkHttp paramCkHttp, String paramString1, String paramString2);
/*       */   
/*       */   public static final native long CkHttp_DownloadAppendAsync(long paramLong, CkHttp paramCkHttp, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkHttp_DownloadBd(long paramLong1, CkHttp paramCkHttp, String paramString, long paramLong2, CkBinData paramCkBinData);
/*       */   
/*       */   public static final native long CkHttp_DownloadBdAsync(long paramLong1, CkHttp paramCkHttp, String paramString, long paramLong2, CkBinData paramCkBinData);
/*       */   
/*       */   public static final native boolean CkHttp_DownloadHash(long paramLong1, CkHttp paramCkHttp, String paramString1, String paramString2, String paramString3, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttp_downloadHash(long paramLong, CkHttp paramCkHttp, String paramString1, String paramString2, String paramString3);
/*       */   
/*       */   public static final native long CkHttp_DownloadHashAsync(long paramLong, CkHttp paramCkHttp, String paramString1, String paramString2, String paramString3);
/*       */   
/*       */   public static final native boolean CkHttp_DownloadSb(long paramLong1, CkHttp paramCkHttp, String paramString1, String paramString2, long paramLong2, CkStringBuilder paramCkStringBuilder);
/*       */   
/*       */   public static final native long CkHttp_DownloadSbAsync(long paramLong1, CkHttp paramCkHttp, String paramString1, String paramString2, long paramLong2, CkStringBuilder paramCkStringBuilder);
/*       */   
/*       */   public static final native boolean CkHttp_EventLogName(long paramLong1, CkHttp paramCkHttp, int paramInt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttp_eventLogName(long paramLong, CkHttp paramCkHttp, int paramInt);
/*       */   
/*       */   public static final native boolean CkHttp_EventLogValue(long paramLong1, CkHttp paramCkHttp, int paramInt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttp_eventLogValue(long paramLong, CkHttp paramCkHttp, int paramInt);
/*       */   
/*       */   public static final native boolean CkHttp_ExtractMetaRefreshUrl(long paramLong1, CkHttp paramCkHttp, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttp_extractMetaRefreshUrl(long paramLong, CkHttp paramCkHttp, String paramString);
/*       */   
/*       */   public static final native boolean CkHttp_G_SvcOauthAccessToken(long paramLong1, CkHttp paramCkHttp, String paramString1, String paramString2, String paramString3, int paramInt, long paramLong2, CkCert paramCkCert, long paramLong3, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttp_g_SvcOauthAccessToken(long paramLong1, CkHttp paramCkHttp, String paramString1, String paramString2, String paramString3, int paramInt, long paramLong2, CkCert paramCkCert);
/*       */   
/*       */   public static final native long CkHttp_G_SvcOauthAccessTokenAsync(long paramLong1, CkHttp paramCkHttp, String paramString1, String paramString2, String paramString3, int paramInt, long paramLong2, CkCert paramCkCert);
/*       */   
/*       */   public static final native boolean CkHttp_G_SvcOauthAccessToken2(long paramLong1, CkHttp paramCkHttp, long paramLong2, CkHashtable paramCkHashtable, int paramInt, long paramLong3, CkCert paramCkCert, long paramLong4, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttp_g_SvcOauthAccessToken2(long paramLong1, CkHttp paramCkHttp, long paramLong2, CkHashtable paramCkHashtable, int paramInt, long paramLong3, CkCert paramCkCert);
/*       */   
/*       */   public static final native long CkHttp_G_SvcOauthAccessToken2Async(long paramLong1, CkHttp paramCkHttp, long paramLong2, CkHashtable paramCkHashtable, int paramInt, long paramLong3, CkCert paramCkCert);
/*       */   
/*       */   public static final native boolean CkHttp_GenTimeStamp(long paramLong1, CkHttp paramCkHttp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttp_genTimeStamp(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native boolean CkHttp_GetCacheRoot(long paramLong1, CkHttp paramCkHttp, int paramInt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttp_getCacheRoot(long paramLong, CkHttp paramCkHttp, int paramInt);
/*       */   
/*       */   public static final native String CkHttp_cacheRoot(long paramLong, CkHttp paramCkHttp, int paramInt);
/*       */   
/*       */   public static final native boolean CkHttp_GetCookieXml(long paramLong1, CkHttp paramCkHttp, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttp_getCookieXml(long paramLong, CkHttp paramCkHttp, String paramString);
/*       */   
/*       */   public static final native String CkHttp_cookieXml(long paramLong, CkHttp paramCkHttp, String paramString);
/*       */   
/*       */   public static final native boolean CkHttp_GetDomain(long paramLong1, CkHttp paramCkHttp, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttp_getDomain(long paramLong, CkHttp paramCkHttp, String paramString);
/*       */   
/*       */   public static final native String CkHttp_domain(long paramLong, CkHttp paramCkHttp, String paramString);
/*       */   
/*       */   public static final native long CkHttp_GetHead(long paramLong, CkHttp paramCkHttp, String paramString);
/*       */   
/*       */   public static final native long CkHttp_GetHeadAsync(long paramLong, CkHttp paramCkHttp, String paramString);
/*       */   
/*       */   public static final native boolean CkHttp_GetRequestHeader(long paramLong1, CkHttp paramCkHttp, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttp_getRequestHeader(long paramLong, CkHttp paramCkHttp, String paramString);
/*       */   
/*       */   public static final native String CkHttp_requestHeader(long paramLong, CkHttp paramCkHttp, String paramString);
/*       */   
/*       */   public static final native long CkHttp_GetServerSslCert(long paramLong, CkHttp paramCkHttp, String paramString, int paramInt);
/*       */   
/*       */   public static final native long CkHttp_GetServerSslCertAsync(long paramLong, CkHttp paramCkHttp, String paramString, int paramInt);
/*       */   
/*       */   public static final native boolean CkHttp_GetUrlPath(long paramLong1, CkHttp paramCkHttp, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttp_getUrlPath(long paramLong, CkHttp paramCkHttp, String paramString);
/*       */   
/*       */   public static final native String CkHttp_urlPath(long paramLong, CkHttp paramCkHttp, String paramString);
/*       */   
/*       */   public static final native boolean CkHttp_HasRequestHeader(long paramLong, CkHttp paramCkHttp, String paramString);
/*       */   
/*       */   public static final native boolean CkHttp_IsUnlocked(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native int CkHttp_ParseOcspReply(long paramLong1, CkHttp paramCkHttp, long paramLong2, CkBinData paramCkBinData, long paramLong3, CkJsonObject paramCkJsonObject);
/*       */   
/*       */   public static final native long CkHttp_PBinary(long paramLong1, CkHttp paramCkHttp, String paramString1, String paramString2, long paramLong2, CkByteData paramCkByteData, String paramString3, boolean paramBoolean1, boolean paramBoolean2);
/*       */   
/*       */   public static final native long CkHttp_PBinaryAsync(long paramLong1, CkHttp paramCkHttp, String paramString1, String paramString2, long paramLong2, CkByteData paramCkByteData, String paramString3, boolean paramBoolean1, boolean paramBoolean2);
/*       */   
/*       */   public static final native long CkHttp_PBinaryBd(long paramLong1, CkHttp paramCkHttp, String paramString1, String paramString2, long paramLong2, CkBinData paramCkBinData, String paramString3, boolean paramBoolean1, boolean paramBoolean2);
/*       */   
/*       */   public static final native long CkHttp_PBinaryBdAsync(long paramLong1, CkHttp paramCkHttp, String paramString1, String paramString2, long paramLong2, CkBinData paramCkBinData, String paramString3, boolean paramBoolean1, boolean paramBoolean2);
/*       */   
/*       */   public static final native boolean CkHttp_PostBinary(long paramLong1, CkHttp paramCkHttp, String paramString1, long paramLong2, CkByteData paramCkByteData, String paramString2, boolean paramBoolean1, boolean paramBoolean2, long paramLong3, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttp_postBinary(long paramLong1, CkHttp paramCkHttp, String paramString1, long paramLong2, CkByteData paramCkByteData, String paramString2, boolean paramBoolean1, boolean paramBoolean2);
/*       */   
/*       */   public static final native long CkHttp_PostBinaryAsync(long paramLong1, CkHttp paramCkHttp, String paramString1, long paramLong2, CkByteData paramCkByteData, String paramString2, boolean paramBoolean1, boolean paramBoolean2);
/*       */   
/*       */   public static final native long CkHttp_PostJson(long paramLong, CkHttp paramCkHttp, String paramString1, String paramString2);
/*       */   
/*       */   public static final native long CkHttp_PostJsonAsync(long paramLong, CkHttp paramCkHttp, String paramString1, String paramString2);
/*       */   
/*       */   public static final native long CkHttp_PostJson2(long paramLong, CkHttp paramCkHttp, String paramString1, String paramString2, String paramString3);
/*       */   
/*       */   public static final native long CkHttp_PostJson2Async(long paramLong, CkHttp paramCkHttp, String paramString1, String paramString2, String paramString3);
/*       */   
/*       */   public static final native long CkHttp_PostJson3(long paramLong1, CkHttp paramCkHttp, String paramString1, String paramString2, long paramLong2, CkJsonObject paramCkJsonObject);
/*       */   
/*       */   public static final native long CkHttp_PostJson3Async(long paramLong1, CkHttp paramCkHttp, String paramString1, String paramString2, long paramLong2, CkJsonObject paramCkJsonObject);
/*       */   
/*       */   public static final native long CkHttp_PostUrlEncoded(long paramLong1, CkHttp paramCkHttp, String paramString, long paramLong2, CkHttpRequest paramCkHttpRequest);
/*       */   
/*       */   public static final native long CkHttp_PostUrlEncodedAsync(long paramLong1, CkHttp paramCkHttp, String paramString, long paramLong2, CkHttpRequest paramCkHttpRequest);
/*       */   
/*       */   public static final native long CkHttp_PostXml(long paramLong, CkHttp paramCkHttp, String paramString1, String paramString2, String paramString3);
/*       */   
/*       */   public static final native long CkHttp_PostXmlAsync(long paramLong, CkHttp paramCkHttp, String paramString1, String paramString2, String paramString3);
/*       */   
/*       */   public static final native long CkHttp_PText(long paramLong, CkHttp paramCkHttp, String paramString1, String paramString2, String paramString3, String paramString4, String paramString5, boolean paramBoolean1, boolean paramBoolean2);
/*       */   
/*       */   public static final native long CkHttp_PTextAsync(long paramLong, CkHttp paramCkHttp, String paramString1, String paramString2, String paramString3, String paramString4, String paramString5, boolean paramBoolean1, boolean paramBoolean2);
/*       */   
/*       */   public static final native long CkHttp_PTextSb(long paramLong1, CkHttp paramCkHttp, String paramString1, String paramString2, long paramLong2, CkStringBuilder paramCkStringBuilder, String paramString3, String paramString4, boolean paramBoolean1, boolean paramBoolean2);
/*       */   
/*       */   public static final native long CkHttp_PTextSbAsync(long paramLong1, CkHttp paramCkHttp, String paramString1, String paramString2, long paramLong2, CkStringBuilder paramCkStringBuilder, String paramString3, String paramString4, boolean paramBoolean1, boolean paramBoolean2);
/*       */   
/*       */   public static final native boolean CkHttp_PutBinary(long paramLong1, CkHttp paramCkHttp, String paramString1, long paramLong2, CkByteData paramCkByteData, String paramString2, boolean paramBoolean1, boolean paramBoolean2, long paramLong3, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttp_putBinary(long paramLong1, CkHttp paramCkHttp, String paramString1, long paramLong2, CkByteData paramCkByteData, String paramString2, boolean paramBoolean1, boolean paramBoolean2);
/*       */   
/*       */   public static final native long CkHttp_PutBinaryAsync(long paramLong1, CkHttp paramCkHttp, String paramString1, long paramLong2, CkByteData paramCkByteData, String paramString2, boolean paramBoolean1, boolean paramBoolean2);
/*       */   
/*       */   public static final native boolean CkHttp_PutText(long paramLong1, CkHttp paramCkHttp, String paramString1, String paramString2, String paramString3, String paramString4, boolean paramBoolean1, boolean paramBoolean2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttp_putText(long paramLong, CkHttp paramCkHttp, String paramString1, String paramString2, String paramString3, String paramString4, boolean paramBoolean1, boolean paramBoolean2);
/*       */   
/*       */   public static final native long CkHttp_PutTextAsync(long paramLong, CkHttp paramCkHttp, String paramString1, String paramString2, String paramString3, String paramString4, boolean paramBoolean1, boolean paramBoolean2);
/*       */   
/*       */   public static final native boolean CkHttp_QuickDeleteStr(long paramLong1, CkHttp paramCkHttp, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttp_quickDeleteStr(long paramLong, CkHttp paramCkHttp, String paramString);
/*       */   
/*       */   public static final native long CkHttp_QuickDeleteStrAsync(long paramLong, CkHttp paramCkHttp, String paramString);
/*       */   
/*       */   public static final native boolean CkHttp_QuickGet(long paramLong1, CkHttp paramCkHttp, String paramString, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native long CkHttp_QuickGetAsync(long paramLong, CkHttp paramCkHttp, String paramString);
/*       */   
/*       */   public static final native boolean CkHttp_QuickGetBd(long paramLong1, CkHttp paramCkHttp, String paramString, long paramLong2, CkBinData paramCkBinData);
/*       */   
/*       */   public static final native long CkHttp_QuickGetBdAsync(long paramLong1, CkHttp paramCkHttp, String paramString, long paramLong2, CkBinData paramCkBinData);
/*       */   
/*       */   public static final native long CkHttp_QuickGetObj(long paramLong, CkHttp paramCkHttp, String paramString);
/*       */   
/*       */   public static final native long CkHttp_QuickGetObjAsync(long paramLong, CkHttp paramCkHttp, String paramString);
/*       */   
/*       */   public static final native boolean CkHttp_QuickGetSb(long paramLong1, CkHttp paramCkHttp, String paramString, long paramLong2, CkStringBuilder paramCkStringBuilder);
/*       */   
/*       */   public static final native long CkHttp_QuickGetSbAsync(long paramLong1, CkHttp paramCkHttp, String paramString, long paramLong2, CkStringBuilder paramCkStringBuilder);
/*       */   
/*       */   public static final native boolean CkHttp_QuickGetStr(long paramLong1, CkHttp paramCkHttp, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttp_quickGetStr(long paramLong, CkHttp paramCkHttp, String paramString);
/*       */   
/*       */   public static final native long CkHttp_QuickGetStrAsync(long paramLong, CkHttp paramCkHttp, String paramString);
/*       */   
/*       */   public static final native boolean CkHttp_QuickPutStr(long paramLong1, CkHttp paramCkHttp, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttp_quickPutStr(long paramLong, CkHttp paramCkHttp, String paramString);
/*       */   
/*       */   public static final native long CkHttp_QuickPutStrAsync(long paramLong, CkHttp paramCkHttp, String paramString);
/*       */   
/*       */   public static final native boolean CkHttp_RemoveQuickHeader(long paramLong, CkHttp paramCkHttp, String paramString);
/*       */   
/*       */   public static final native void CkHttp_RemoveRequestHeader(long paramLong, CkHttp paramCkHttp, String paramString);
/*       */   
/*       */   public static final native boolean CkHttp_RenderGet(long paramLong1, CkHttp paramCkHttp, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttp_renderGet(long paramLong, CkHttp paramCkHttp, String paramString);
/*       */   
/*       */   public static final native boolean CkHttp_ResumeDownload(long paramLong, CkHttp paramCkHttp, String paramString1, String paramString2);
/*       */   
/*       */   public static final native long CkHttp_ResumeDownloadAsync(long paramLong, CkHttp paramCkHttp, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkHttp_ResumeDownloadBd(long paramLong1, CkHttp paramCkHttp, String paramString, long paramLong2, CkBinData paramCkBinData);
/*       */   
/*       */   public static final native long CkHttp_ResumeDownloadBdAsync(long paramLong1, CkHttp paramCkHttp, String paramString, long paramLong2, CkBinData paramCkBinData);
/*       */   
/*       */   public static final native boolean CkHttp_S3_CreateBucket(long paramLong, CkHttp paramCkHttp, String paramString);
/*       */   
/*       */   public static final native long CkHttp_S3_CreateBucketAsync(long paramLong, CkHttp paramCkHttp, String paramString);
/*       */   
/*       */   public static final native boolean CkHttp_S3_DeleteBucket(long paramLong, CkHttp paramCkHttp, String paramString);
/*       */   
/*       */   public static final native long CkHttp_S3_DeleteBucketAsync(long paramLong, CkHttp paramCkHttp, String paramString);
/*       */   
/*       */   public static final native long CkHttp_S3_DeleteMultipleObjects(long paramLong1, CkHttp paramCkHttp, String paramString, long paramLong2, CkStringArray paramCkStringArray);
/*       */   
/*       */   public static final native long CkHttp_S3_DeleteMultipleObjectsAsync(long paramLong1, CkHttp paramCkHttp, String paramString, long paramLong2, CkStringArray paramCkStringArray);
/*       */   
/*       */   public static final native boolean CkHttp_S3_DeleteObject(long paramLong, CkHttp paramCkHttp, String paramString1, String paramString2);
/*       */   
/*       */   public static final native long CkHttp_S3_DeleteObjectAsync(long paramLong, CkHttp paramCkHttp, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkHttp_S3_DownloadBytes(long paramLong1, CkHttp paramCkHttp, String paramString1, String paramString2, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native long CkHttp_S3_DownloadBytesAsync(long paramLong, CkHttp paramCkHttp, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkHttp_S3_DownloadFile(long paramLong, CkHttp paramCkHttp, String paramString1, String paramString2, String paramString3);
/*       */   
/*       */   public static final native long CkHttp_S3_DownloadFileAsync(long paramLong, CkHttp paramCkHttp, String paramString1, String paramString2, String paramString3);
/*       */   
/*       */   public static final native boolean CkHttp_S3_DownloadString(long paramLong1, CkHttp paramCkHttp, String paramString1, String paramString2, String paramString3, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttp_s3_DownloadString(long paramLong, CkHttp paramCkHttp, String paramString1, String paramString2, String paramString3);
/*       */   
/*       */   public static final native long CkHttp_S3_DownloadStringAsync(long paramLong, CkHttp paramCkHttp, String paramString1, String paramString2, String paramString3);
/*       */   
/*       */   public static final native int CkHttp_S3_FileExists(long paramLong, CkHttp paramCkHttp, String paramString1, String paramString2);
/*       */   
/*       */   public static final native long CkHttp_S3_FileExistsAsync(long paramLong, CkHttp paramCkHttp, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkHttp_S3_GenerateUrl(long paramLong1, CkHttp paramCkHttp, String paramString1, String paramString2, long paramLong2, CkDateTime paramCkDateTime, long paramLong3, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttp_s3_GenerateUrl(long paramLong1, CkHttp paramCkHttp, String paramString1, String paramString2, long paramLong2, CkDateTime paramCkDateTime);
/*       */   
/*       */   public static final native boolean CkHttp_S3_GenerateUrlV4(long paramLong1, CkHttp paramCkHttp, boolean paramBoolean, String paramString1, String paramString2, int paramInt, String paramString3, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttp_s3_GenerateUrlV4(long paramLong, CkHttp paramCkHttp, boolean paramBoolean, String paramString1, String paramString2, int paramInt, String paramString3);
/*       */   
/*       */   public static final native boolean CkHttp_S3_ListBucketObjects(long paramLong1, CkHttp paramCkHttp, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttp_s3_ListBucketObjects(long paramLong, CkHttp paramCkHttp, String paramString);
/*       */   
/*       */   public static final native long CkHttp_S3_ListBucketObjectsAsync(long paramLong, CkHttp paramCkHttp, String paramString);
/*       */   
/*       */   public static final native boolean CkHttp_S3_ListBuckets(long paramLong1, CkHttp paramCkHttp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttp_s3_ListBuckets(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native long CkHttp_S3_ListBucketsAsync(long paramLong, CkHttp paramCkHttp);
/*       */   
/*       */   public static final native boolean CkHttp_S3_UploadBytes(long paramLong1, CkHttp paramCkHttp, long paramLong2, CkByteData paramCkByteData, String paramString1, String paramString2, String paramString3);
/*       */   
/*       */   public static final native long CkHttp_S3_UploadBytesAsync(long paramLong1, CkHttp paramCkHttp, long paramLong2, CkByteData paramCkByteData, String paramString1, String paramString2, String paramString3);
/*       */   
/*       */   public static final native boolean CkHttp_S3_UploadFile(long paramLong, CkHttp paramCkHttp, String paramString1, String paramString2, String paramString3, String paramString4);
/*       */   
/*       */   public static final native long CkHttp_S3_UploadFileAsync(long paramLong, CkHttp paramCkHttp, String paramString1, String paramString2, String paramString3, String paramString4);
/*       */   
/*       */   public static final native boolean CkHttp_S3_UploadString(long paramLong, CkHttp paramCkHttp, String paramString1, String paramString2, String paramString3, String paramString4, String paramString5);
/*       */   
/*       */   public static final native long CkHttp_S3_UploadStringAsync(long paramLong, CkHttp paramCkHttp, String paramString1, String paramString2, String paramString3, String paramString4, String paramString5);
/*       */   
/*       */   public static final native boolean CkHttp_SaveLastError(long paramLong, CkHttp paramCkHttp, String paramString);
/*       */   
/*       */   public static final native boolean CkHttp_SetCookieXml(long paramLong, CkHttp paramCkHttp, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkHttp_SetOAuthRsaKey(long paramLong1, CkHttp paramCkHttp, long paramLong2, CkPrivateKey paramCkPrivateKey);
/*       */   
/*       */   public static final native boolean CkHttp_SetPassword(long paramLong1, CkHttp paramCkHttp, long paramLong2, CkSecureString paramCkSecureString);
/*       */   
/*       */   public static final native void CkHttp_SetRequestHeader(long paramLong, CkHttp paramCkHttp, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkHttp_SetSslClientCert(long paramLong1, CkHttp paramCkHttp, long paramLong2, CkCert paramCkCert);
/*       */   
/*       */   public static final native boolean CkHttp_SetSslClientCertPem(long paramLong, CkHttp paramCkHttp, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkHttp_SetSslClientCertPfx(long paramLong, CkHttp paramCkHttp, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkHttp_SetUrlVar(long paramLong, CkHttp paramCkHttp, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkHttp_SharePointOnlineAuth(long paramLong1, CkHttp paramCkHttp, String paramString1, String paramString2, long paramLong2, CkSecureString paramCkSecureString, long paramLong3, CkJsonObject paramCkJsonObject);
/*       */   
/*       */   public static final native long CkHttp_SharePointOnlineAuthAsync(long paramLong1, CkHttp paramCkHttp, String paramString1, String paramString2, long paramLong2, CkSecureString paramCkSecureString, long paramLong3, CkJsonObject paramCkJsonObject);
/*       */   
/*       */   public static final native void CkHttp_SleepMs(long paramLong, CkHttp paramCkHttp, int paramInt);
/*       */   
/*       */   public static final native long CkHttp_SynchronousRequest(long paramLong1, CkHttp paramCkHttp, String paramString, int paramInt, boolean paramBoolean, long paramLong2, CkHttpRequest paramCkHttpRequest);
/*       */   
/*       */   public static final native long CkHttp_SynchronousRequestAsync(long paramLong1, CkHttp paramCkHttp, String paramString, int paramInt, boolean paramBoolean, long paramLong2, CkHttpRequest paramCkHttpRequest);
/*       */   
/*       */   public static final native boolean CkHttp_UnlockComponent(long paramLong, CkHttp paramCkHttp, String paramString);
/*       */   
/*       */   public static final native boolean CkHttp_UrlDecode(long paramLong1, CkHttp paramCkHttp, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttp_urlDecode(long paramLong, CkHttp paramCkHttp, String paramString);
/*       */   
/*       */   public static final native boolean CkHttp_UrlEncode(long paramLong1, CkHttp paramCkHttp, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttp_urlEncode(long paramLong, CkHttp paramCkHttp, String paramString);
/*       */   
/*       */   public static final native int CkHttp_VerifyTimestampReply(long paramLong1, CkHttp paramCkHttp, long paramLong2, CkBinData paramCkBinData, long paramLong3, CkCert paramCkCert);
/*       */   
/*       */   public static final native boolean CkHttp_XmlRpc(long paramLong1, CkHttp paramCkHttp, String paramString1, String paramString2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttp_xmlRpc(long paramLong, CkHttp paramCkHttp, String paramString1, String paramString2);
/*       */   
/*       */   public static final native long CkHttp_XmlRpcAsync(long paramLong, CkHttp paramCkHttp, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkHttp_XmlRpcPut(long paramLong1, CkHttp paramCkHttp, String paramString1, String paramString2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttp_xmlRpcPut(long paramLong, CkHttp paramCkHttp, String paramString1, String paramString2);
/*       */   
/*       */   public static final native long CkHttp_XmlRpcPutAsync(long paramLong, CkHttp paramCkHttp, String paramString1, String paramString2);
/*       */   
/*       */   public static final native long new_CkHttpRequest();
/*       */   
/*       */   public static final native void delete_CkHttpRequest(long paramLong);
/*       */   
/*       */   public static final native void CkHttpRequest_LastErrorXml(long paramLong1, CkHttpRequest paramCkHttpRequest, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkHttpRequest_LastErrorHtml(long paramLong1, CkHttpRequest paramCkHttpRequest, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkHttpRequest_LastErrorText(long paramLong1, CkHttpRequest paramCkHttpRequest, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkHttpRequest_get_Boundary(long paramLong1, CkHttpRequest paramCkHttpRequest, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttpRequest_boundary(long paramLong, CkHttpRequest paramCkHttpRequest);
/*       */   
/*       */   public static final native void CkHttpRequest_put_Boundary(long paramLong, CkHttpRequest paramCkHttpRequest, String paramString);
/*       */   
/*       */   public static final native void CkHttpRequest_get_Charset(long paramLong1, CkHttpRequest paramCkHttpRequest, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttpRequest_charset(long paramLong, CkHttpRequest paramCkHttpRequest);
/*       */   
/*       */   public static final native void CkHttpRequest_put_Charset(long paramLong, CkHttpRequest paramCkHttpRequest, String paramString);
/*       */   
/*       */   public static final native void CkHttpRequest_get_ContentType(long paramLong1, CkHttpRequest paramCkHttpRequest, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttpRequest_contentType(long paramLong, CkHttpRequest paramCkHttpRequest);
/*       */   
/*       */   public static final native void CkHttpRequest_put_ContentType(long paramLong, CkHttpRequest paramCkHttpRequest, String paramString);
/*       */   
/*       */   public static final native void CkHttpRequest_get_DebugLogFilePath(long paramLong1, CkHttpRequest paramCkHttpRequest, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttpRequest_debugLogFilePath(long paramLong, CkHttpRequest paramCkHttpRequest);
/*       */   
/*       */   public static final native void CkHttpRequest_put_DebugLogFilePath(long paramLong, CkHttpRequest paramCkHttpRequest, String paramString);
/*       */   
/*       */   public static final native void CkHttpRequest_get_EntireHeader(long paramLong1, CkHttpRequest paramCkHttpRequest, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttpRequest_entireHeader(long paramLong, CkHttpRequest paramCkHttpRequest);
/*       */   
/*       */   public static final native void CkHttpRequest_put_EntireHeader(long paramLong, CkHttpRequest paramCkHttpRequest, String paramString);
/*       */   
/*       */   public static final native void CkHttpRequest_get_HttpVerb(long paramLong1, CkHttpRequest paramCkHttpRequest, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttpRequest_httpVerb(long paramLong, CkHttpRequest paramCkHttpRequest);
/*       */   
/*       */   public static final native void CkHttpRequest_put_HttpVerb(long paramLong, CkHttpRequest paramCkHttpRequest, String paramString);
/*       */   
/*       */   public static final native void CkHttpRequest_get_HttpVersion(long paramLong1, CkHttpRequest paramCkHttpRequest, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttpRequest_httpVersion(long paramLong, CkHttpRequest paramCkHttpRequest);
/*       */   
/*       */   public static final native void CkHttpRequest_put_HttpVersion(long paramLong, CkHttpRequest paramCkHttpRequest, String paramString);
/*       */   
/*       */   public static final native void CkHttpRequest_get_LastErrorHtml(long paramLong1, CkHttpRequest paramCkHttpRequest, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttpRequest_lastErrorHtml(long paramLong, CkHttpRequest paramCkHttpRequest);
/*       */   
/*       */   public static final native void CkHttpRequest_get_LastErrorText(long paramLong1, CkHttpRequest paramCkHttpRequest, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttpRequest_lastErrorText(long paramLong, CkHttpRequest paramCkHttpRequest);
/*       */   
/*       */   public static final native void CkHttpRequest_get_LastErrorXml(long paramLong1, CkHttpRequest paramCkHttpRequest, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttpRequest_lastErrorXml(long paramLong, CkHttpRequest paramCkHttpRequest);
/*       */   
/*       */   public static final native boolean CkHttpRequest_get_LastMethodSuccess(long paramLong, CkHttpRequest paramCkHttpRequest);
/*       */   
/*       */   public static final native void CkHttpRequest_put_LastMethodSuccess(long paramLong, CkHttpRequest paramCkHttpRequest, boolean paramBoolean);
/*       */   
/*       */   public static final native int CkHttpRequest_get_NumHeaderFields(long paramLong, CkHttpRequest paramCkHttpRequest);
/*       */   
/*       */   public static final native int CkHttpRequest_get_NumParams(long paramLong, CkHttpRequest paramCkHttpRequest);
/*       */   
/*       */   public static final native void CkHttpRequest_get_Path(long paramLong1, CkHttpRequest paramCkHttpRequest, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttpRequest_path(long paramLong, CkHttpRequest paramCkHttpRequest);
/*       */   
/*       */   public static final native void CkHttpRequest_put_Path(long paramLong, CkHttpRequest paramCkHttpRequest, String paramString);
/*       */   
/*       */   public static final native boolean CkHttpRequest_get_SendCharset(long paramLong, CkHttpRequest paramCkHttpRequest);
/*       */   
/*       */   public static final native void CkHttpRequest_put_SendCharset(long paramLong, CkHttpRequest paramCkHttpRequest, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkHttpRequest_get_VerboseLogging(long paramLong, CkHttpRequest paramCkHttpRequest);
/*       */   
/*       */   public static final native void CkHttpRequest_put_VerboseLogging(long paramLong, CkHttpRequest paramCkHttpRequest, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkHttpRequest_get_Version(long paramLong1, CkHttpRequest paramCkHttpRequest, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttpRequest_version(long paramLong, CkHttpRequest paramCkHttpRequest);
/*       */   
/*       */   public static final native boolean CkHttpRequest_AddBytesForUpload(long paramLong1, CkHttpRequest paramCkHttpRequest, String paramString1, String paramString2, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkHttpRequest_AddBytesForUpload2(long paramLong1, CkHttpRequest paramCkHttpRequest, String paramString1, String paramString2, long paramLong2, CkByteData paramCkByteData, String paramString3);
/*       */   
/*       */   public static final native boolean CkHttpRequest_AddFileForUpload(long paramLong, CkHttpRequest paramCkHttpRequest, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkHttpRequest_AddFileForUpload2(long paramLong, CkHttpRequest paramCkHttpRequest, String paramString1, String paramString2, String paramString3);
/*       */   
/*       */   public static final native void CkHttpRequest_AddHeader(long paramLong, CkHttpRequest paramCkHttpRequest, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkHttpRequest_AddMwsSignature(long paramLong, CkHttpRequest paramCkHttpRequest, String paramString1, String paramString2);
/*       */   
/*       */   public static final native void CkHttpRequest_AddParam(long paramLong, CkHttpRequest paramCkHttpRequest, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkHttpRequest_AddStringForUpload(long paramLong, CkHttpRequest paramCkHttpRequest, String paramString1, String paramString2, String paramString3, String paramString4);
/*       */   
/*       */   public static final native boolean CkHttpRequest_AddStringForUpload2(long paramLong, CkHttpRequest paramCkHttpRequest, String paramString1, String paramString2, String paramString3, String paramString4, String paramString5);
/*       */   
/*       */   public static final native boolean CkHttpRequest_AddSubHeader(long paramLong, CkHttpRequest paramCkHttpRequest, int paramInt, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkHttpRequest_GenerateRequestFile(long paramLong, CkHttpRequest paramCkHttpRequest, String paramString);
/*       */   
/*       */   public static final native boolean CkHttpRequest_GenerateRequestText(long paramLong1, CkHttpRequest paramCkHttpRequest, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttpRequest_generateRequestText(long paramLong, CkHttpRequest paramCkHttpRequest);
/*       */   
/*       */   public static final native boolean CkHttpRequest_GetHeaderField(long paramLong1, CkHttpRequest paramCkHttpRequest, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttpRequest_getHeaderField(long paramLong, CkHttpRequest paramCkHttpRequest, String paramString);
/*       */   
/*       */   public static final native String CkHttpRequest_headerField(long paramLong, CkHttpRequest paramCkHttpRequest, String paramString);
/*       */   
/*       */   public static final native boolean CkHttpRequest_GetHeaderName(long paramLong1, CkHttpRequest paramCkHttpRequest, int paramInt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttpRequest_getHeaderName(long paramLong, CkHttpRequest paramCkHttpRequest, int paramInt);
/*       */   
/*       */   public static final native String CkHttpRequest_headerName(long paramLong, CkHttpRequest paramCkHttpRequest, int paramInt);
/*       */   
/*       */   public static final native boolean CkHttpRequest_GetHeaderValue(long paramLong1, CkHttpRequest paramCkHttpRequest, int paramInt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttpRequest_getHeaderValue(long paramLong, CkHttpRequest paramCkHttpRequest, int paramInt);
/*       */   
/*       */   public static final native String CkHttpRequest_headerValue(long paramLong, CkHttpRequest paramCkHttpRequest, int paramInt);
/*       */   
/*       */   public static final native boolean CkHttpRequest_GetParam(long paramLong1, CkHttpRequest paramCkHttpRequest, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttpRequest_getParam(long paramLong, CkHttpRequest paramCkHttpRequest, String paramString);
/*       */   
/*       */   public static final native String CkHttpRequest_param(long paramLong, CkHttpRequest paramCkHttpRequest, String paramString);
/*       */   
/*       */   public static final native boolean CkHttpRequest_GetParamName(long paramLong1, CkHttpRequest paramCkHttpRequest, int paramInt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttpRequest_getParamName(long paramLong, CkHttpRequest paramCkHttpRequest, int paramInt);
/*       */   
/*       */   public static final native String CkHttpRequest_paramName(long paramLong, CkHttpRequest paramCkHttpRequest, int paramInt);
/*       */   
/*       */   public static final native boolean CkHttpRequest_GetParamValue(long paramLong1, CkHttpRequest paramCkHttpRequest, int paramInt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttpRequest_getParamValue(long paramLong, CkHttpRequest paramCkHttpRequest, int paramInt);
/*       */   
/*       */   public static final native String CkHttpRequest_paramValue(long paramLong, CkHttpRequest paramCkHttpRequest, int paramInt);
/*       */   
/*       */   public static final native boolean CkHttpRequest_GetUrlEncodedParams(long paramLong1, CkHttpRequest paramCkHttpRequest, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttpRequest_getUrlEncodedParams(long paramLong, CkHttpRequest paramCkHttpRequest);
/*       */   
/*       */   public static final native String CkHttpRequest_urlEncodedParams(long paramLong, CkHttpRequest paramCkHttpRequest);
/*       */   
/*       */   public static final native boolean CkHttpRequest_LoadBodyFromBd(long paramLong1, CkHttpRequest paramCkHttpRequest, long paramLong2, CkBinData paramCkBinData);
/*       */   
/*       */   public static final native boolean CkHttpRequest_LoadBodyFromBytes(long paramLong1, CkHttpRequest paramCkHttpRequest, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkHttpRequest_LoadBodyFromFile(long paramLong, CkHttpRequest paramCkHttpRequest, String paramString);
/*       */   
/*       */   public static final native boolean CkHttpRequest_LoadBodyFromSb(long paramLong1, CkHttpRequest paramCkHttpRequest, long paramLong2, CkStringBuilder paramCkStringBuilder, String paramString);
/*       */   
/*       */   public static final native boolean CkHttpRequest_LoadBodyFromString(long paramLong, CkHttpRequest paramCkHttpRequest, String paramString1, String paramString2);
/*       */   
/*       */   public static final native void CkHttpRequest_RemoveAllParams(long paramLong, CkHttpRequest paramCkHttpRequest);
/*       */   
/*       */   public static final native boolean CkHttpRequest_RemoveHeader(long paramLong, CkHttpRequest paramCkHttpRequest, String paramString);
/*       */   
/*       */   public static final native void CkHttpRequest_RemoveParam(long paramLong, CkHttpRequest paramCkHttpRequest, String paramString);
/*       */   
/*       */   public static final native boolean CkHttpRequest_SaveLastError(long paramLong, CkHttpRequest paramCkHttpRequest, String paramString);
/*       */   
/*       */   public static final native void CkHttpRequest_SetFromUrl(long paramLong, CkHttpRequest paramCkHttpRequest, String paramString);
/*       */   
/*       */   public static final native boolean CkHttpRequest_StreamBodyFromFile(long paramLong, CkHttpRequest paramCkHttpRequest, String paramString);
/*       */   
/*       */   public static final native boolean CkHttpRequest_StreamChunkFromFile(long paramLong, CkHttpRequest paramCkHttpRequest, String paramString1, String paramString2, String paramString3);
/*       */   
/*       */   public static final native void CkHttpRequest_UseGet(long paramLong, CkHttpRequest paramCkHttpRequest);
/*       */   
/*       */   public static final native void CkHttpRequest_UseHead(long paramLong, CkHttpRequest paramCkHttpRequest);
/*       */   
/*       */   public static final native void CkHttpRequest_UsePost(long paramLong, CkHttpRequest paramCkHttpRequest);
/*       */   
/*       */   public static final native void CkHttpRequest_UsePostMultipartForm(long paramLong, CkHttpRequest paramCkHttpRequest);
/*       */   
/*       */   public static final native void CkHttpRequest_UsePut(long paramLong, CkHttpRequest paramCkHttpRequest);
/*       */   
/*       */   public static final native void CkHttpRequest_UseUpload(long paramLong, CkHttpRequest paramCkHttpRequest);
/*       */   
/*       */   public static final native void CkHttpRequest_UseUploadPut(long paramLong, CkHttpRequest paramCkHttpRequest);
/*       */   
/*       */   public static final native void CkHttpRequest_UseXmlHttp(long paramLong, CkHttpRequest paramCkHttpRequest, String paramString);
/*       */   
/*       */   public static final native long new_CkHttpResponse();
/*       */   
/*       */   public static final native void delete_CkHttpResponse(long paramLong);
/*       */   
/*       */   public static final native void CkHttpResponse_LastErrorXml(long paramLong1, CkHttpResponse paramCkHttpResponse, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkHttpResponse_LastErrorHtml(long paramLong1, CkHttpResponse paramCkHttpResponse, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkHttpResponse_LastErrorText(long paramLong1, CkHttpResponse paramCkHttpResponse, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkHttpResponse_get_Body(long paramLong1, CkHttpResponse paramCkHttpResponse, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native void CkHttpResponse_get_BodyQP(long paramLong1, CkHttpResponse paramCkHttpResponse, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttpResponse_bodyQP(long paramLong, CkHttpResponse paramCkHttpResponse);
/*       */   
/*       */   public static final native void CkHttpResponse_get_BodyStr(long paramLong1, CkHttpResponse paramCkHttpResponse, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttpResponse_bodyStr(long paramLong, CkHttpResponse paramCkHttpResponse);
/*       */   
/*       */   public static final native void CkHttpResponse_get_Charset(long paramLong1, CkHttpResponse paramCkHttpResponse, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttpResponse_charset(long paramLong, CkHttpResponse paramCkHttpResponse);
/*       */   
/*       */   public static final native long CkHttpResponse_get_ContentLength(long paramLong, CkHttpResponse paramCkHttpResponse);
/*       */   
/*       */   public static final native void CkHttpResponse_get_Date(long paramLong1, CkHttpResponse paramCkHttpResponse, long paramLong2, SYSTEMTIME paramSYSTEMTIME);
/*       */   
/*       */   public static final native void CkHttpResponse_get_DateStr(long paramLong1, CkHttpResponse paramCkHttpResponse, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttpResponse_dateStr(long paramLong, CkHttpResponse paramCkHttpResponse);
/*       */   
/*       */   public static final native void CkHttpResponse_get_DebugLogFilePath(long paramLong1, CkHttpResponse paramCkHttpResponse, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttpResponse_debugLogFilePath(long paramLong, CkHttpResponse paramCkHttpResponse);
/*       */   
/*       */   public static final native void CkHttpResponse_put_DebugLogFilePath(long paramLong, CkHttpResponse paramCkHttpResponse, String paramString);
/*       */   
/*       */   public static final native void CkHttpResponse_get_Domain(long paramLong1, CkHttpResponse paramCkHttpResponse, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttpResponse_domain(long paramLong, CkHttpResponse paramCkHttpResponse);
/*       */   
/*       */   public static final native void CkHttpResponse_get_FinalRedirectUrl(long paramLong1, CkHttpResponse paramCkHttpResponse, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttpResponse_finalRedirectUrl(long paramLong, CkHttpResponse paramCkHttpResponse);
/*       */   
/*       */   public static final native void CkHttpResponse_get_FullMime(long paramLong1, CkHttpResponse paramCkHttpResponse, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttpResponse_fullMime(long paramLong, CkHttpResponse paramCkHttpResponse);
/*       */   
/*       */   public static final native void CkHttpResponse_get_Header(long paramLong1, CkHttpResponse paramCkHttpResponse, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttpResponse_header(long paramLong, CkHttpResponse paramCkHttpResponse);
/*       */   
/*       */   public static final native void CkHttpResponse_get_LastErrorHtml(long paramLong1, CkHttpResponse paramCkHttpResponse, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttpResponse_lastErrorHtml(long paramLong, CkHttpResponse paramCkHttpResponse);
/*       */   
/*       */   public static final native void CkHttpResponse_get_LastErrorText(long paramLong1, CkHttpResponse paramCkHttpResponse, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttpResponse_lastErrorText(long paramLong, CkHttpResponse paramCkHttpResponse);
/*       */   
/*       */   public static final native void CkHttpResponse_get_LastErrorXml(long paramLong1, CkHttpResponse paramCkHttpResponse, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttpResponse_lastErrorXml(long paramLong, CkHttpResponse paramCkHttpResponse);
/*       */   
/*       */   public static final native boolean CkHttpResponse_get_LastMethodSuccess(long paramLong, CkHttpResponse paramCkHttpResponse);
/*       */   
/*       */   public static final native void CkHttpResponse_put_LastMethodSuccess(long paramLong, CkHttpResponse paramCkHttpResponse, boolean paramBoolean);
/*       */   
/*       */   public static final native int CkHttpResponse_get_NumCookies(long paramLong, CkHttpResponse paramCkHttpResponse);
/*       */   
/*       */   public static final native int CkHttpResponse_get_NumHeaderFields(long paramLong, CkHttpResponse paramCkHttpResponse);
/*       */   
/*       */   public static final native int CkHttpResponse_get_StatusCode(long paramLong, CkHttpResponse paramCkHttpResponse);
/*       */   
/*       */   public static final native void CkHttpResponse_get_StatusLine(long paramLong1, CkHttpResponse paramCkHttpResponse, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttpResponse_statusLine(long paramLong, CkHttpResponse paramCkHttpResponse);
/*       */   
/*       */   public static final native void CkHttpResponse_get_StatusText(long paramLong1, CkHttpResponse paramCkHttpResponse, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttpResponse_statusText(long paramLong, CkHttpResponse paramCkHttpResponse);
/*       */   
/*       */   public static final native boolean CkHttpResponse_get_VerboseLogging(long paramLong, CkHttpResponse paramCkHttpResponse);
/*       */   
/*       */   public static final native void CkHttpResponse_put_VerboseLogging(long paramLong, CkHttpResponse paramCkHttpResponse, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkHttpResponse_get_Version(long paramLong1, CkHttpResponse paramCkHttpResponse, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttpResponse_version(long paramLong, CkHttpResponse paramCkHttpResponse);
/*       */   
/*       */   public static final native boolean CkHttpResponse_GetBodyBd(long paramLong1, CkHttpResponse paramCkHttpResponse, long paramLong2, CkBinData paramCkBinData);
/*       */   
/*       */   public static final native boolean CkHttpResponse_GetBodySb(long paramLong1, CkHttpResponse paramCkHttpResponse, long paramLong2, CkStringBuilder paramCkStringBuilder);
/*       */   
/*       */   public static final native boolean CkHttpResponse_GetCookieDomain(long paramLong1, CkHttpResponse paramCkHttpResponse, int paramInt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttpResponse_getCookieDomain(long paramLong, CkHttpResponse paramCkHttpResponse, int paramInt);
/*       */   
/*       */   public static final native String CkHttpResponse_cookieDomain(long paramLong, CkHttpResponse paramCkHttpResponse, int paramInt);
/*       */   
/*       */   public static final native boolean CkHttpResponse_GetCookieExpires(long paramLong1, CkHttpResponse paramCkHttpResponse, int paramInt, long paramLong2, SYSTEMTIME paramSYSTEMTIME);
/*       */   
/*       */   public static final native boolean CkHttpResponse_GetCookieExpiresStr(long paramLong1, CkHttpResponse paramCkHttpResponse, int paramInt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttpResponse_getCookieExpiresStr(long paramLong, CkHttpResponse paramCkHttpResponse, int paramInt);
/*       */   
/*       */   public static final native String CkHttpResponse_cookieExpiresStr(long paramLong, CkHttpResponse paramCkHttpResponse, int paramInt);
/*       */   
/*       */   public static final native boolean CkHttpResponse_GetCookieName(long paramLong1, CkHttpResponse paramCkHttpResponse, int paramInt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttpResponse_getCookieName(long paramLong, CkHttpResponse paramCkHttpResponse, int paramInt);
/*       */   
/*       */   public static final native String CkHttpResponse_cookieName(long paramLong, CkHttpResponse paramCkHttpResponse, int paramInt);
/*       */   
/*       */   public static final native boolean CkHttpResponse_GetCookiePath(long paramLong1, CkHttpResponse paramCkHttpResponse, int paramInt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttpResponse_getCookiePath(long paramLong, CkHttpResponse paramCkHttpResponse, int paramInt);
/*       */   
/*       */   public static final native String CkHttpResponse_cookiePath(long paramLong, CkHttpResponse paramCkHttpResponse, int paramInt);
/*       */   
/*       */   public static final native boolean CkHttpResponse_GetCookieValue(long paramLong1, CkHttpResponse paramCkHttpResponse, int paramInt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttpResponse_getCookieValue(long paramLong, CkHttpResponse paramCkHttpResponse, int paramInt);
/*       */   
/*       */   public static final native String CkHttpResponse_cookieValue(long paramLong, CkHttpResponse paramCkHttpResponse, int paramInt);
/*       */   
/*       */   public static final native boolean CkHttpResponse_GetHeaderField(long paramLong1, CkHttpResponse paramCkHttpResponse, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttpResponse_getHeaderField(long paramLong, CkHttpResponse paramCkHttpResponse, String paramString);
/*       */   
/*       */   public static final native String CkHttpResponse_headerField(long paramLong, CkHttpResponse paramCkHttpResponse, String paramString);
/*       */   
/*       */   public static final native boolean CkHttpResponse_GetHeaderFieldAttr(long paramLong1, CkHttpResponse paramCkHttpResponse, String paramString1, String paramString2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttpResponse_getHeaderFieldAttr(long paramLong, CkHttpResponse paramCkHttpResponse, String paramString1, String paramString2);
/*       */   
/*       */   public static final native String CkHttpResponse_headerFieldAttr(long paramLong, CkHttpResponse paramCkHttpResponse, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkHttpResponse_GetHeaderName(long paramLong1, CkHttpResponse paramCkHttpResponse, int paramInt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttpResponse_getHeaderName(long paramLong, CkHttpResponse paramCkHttpResponse, int paramInt);
/*       */   
/*       */   public static final native String CkHttpResponse_headerName(long paramLong, CkHttpResponse paramCkHttpResponse, int paramInt);
/*       */   
/*       */   public static final native boolean CkHttpResponse_GetHeaderValue(long paramLong1, CkHttpResponse paramCkHttpResponse, int paramInt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttpResponse_getHeaderValue(long paramLong, CkHttpResponse paramCkHttpResponse, int paramInt);
/*       */   
/*       */   public static final native String CkHttpResponse_headerValue(long paramLong, CkHttpResponse paramCkHttpResponse, int paramInt);
/*       */   
/*       */   public static final native boolean CkHttpResponse_LoadTaskResult(long paramLong1, CkHttpResponse paramCkHttpResponse, long paramLong2, CkTask paramCkTask);
/*       */   
/*       */   public static final native boolean CkHttpResponse_SaveBodyBinary(long paramLong, CkHttpResponse paramCkHttpResponse, String paramString);
/*       */   
/*       */   public static final native boolean CkHttpResponse_SaveBodyText(long paramLong, CkHttpResponse paramCkHttpResponse, boolean paramBoolean, String paramString);
/*       */   
/*       */   public static final native boolean CkHttpResponse_SaveLastError(long paramLong, CkHttpResponse paramCkHttpResponse, String paramString);
/*       */   
/*       */   public static final native boolean CkHttpResponse_UrlEncParamValue(long paramLong1, CkHttpResponse paramCkHttpResponse, String paramString1, String paramString2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkHttpResponse_urlEncParamValue(long paramLong, CkHttpResponse paramCkHttpResponse, String paramString1, String paramString2);
/*       */   
/*       */   public static final native long new_CkImap();
/*       */   
/*       */   public static final native void delete_CkImap(long paramLong);
/*       */   
/*       */   public static final native void CkImap_LastErrorXml(long paramLong1, CkImap paramCkImap, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkImap_LastErrorHtml(long paramLong1, CkImap paramCkImap, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkImap_LastErrorText(long paramLong1, CkImap paramCkImap, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkImap_put_EventCallbackObject(long paramLong1, CkImap paramCkImap, long paramLong2, CkBaseProgress paramCkBaseProgress);
/*       */   
/*       */   public static final native boolean CkImap_get_AbortCurrent(long paramLong, CkImap paramCkImap);
/*       */   
/*       */   public static final native void CkImap_put_AbortCurrent(long paramLong, CkImap paramCkImap, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkImap_get_AppendSeen(long paramLong, CkImap paramCkImap);
/*       */   
/*       */   public static final native void CkImap_put_AppendSeen(long paramLong, CkImap paramCkImap, boolean paramBoolean);
/*       */   
/*       */   public static final native int CkImap_get_AppendUid(long paramLong, CkImap paramCkImap);
/*       */   
/*       */   public static final native void CkImap_get_AuthMethod(long paramLong1, CkImap paramCkImap, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkImap_authMethod(long paramLong, CkImap paramCkImap);
/*       */   
/*       */   public static final native void CkImap_put_AuthMethod(long paramLong, CkImap paramCkImap, String paramString);
/*       */   
/*       */   public static final native void CkImap_get_AuthzId(long paramLong1, CkImap paramCkImap, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkImap_authzId(long paramLong, CkImap paramCkImap);
/*       */   
/*       */   public static final native void CkImap_put_AuthzId(long paramLong, CkImap paramCkImap, String paramString);
/*       */   
/*       */   public static final native boolean CkImap_get_AutoDownloadAttachments(long paramLong, CkImap paramCkImap);
/*       */   
/*       */   public static final native void CkImap_put_AutoDownloadAttachments(long paramLong, CkImap paramCkImap, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkImap_get_AutoFix(long paramLong, CkImap paramCkImap);
/*       */   
/*       */   public static final native void CkImap_put_AutoFix(long paramLong, CkImap paramCkImap, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkImap_get_ClientIpAddress(long paramLong1, CkImap paramCkImap, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkImap_clientIpAddress(long paramLong, CkImap paramCkImap);
/*       */   
/*       */   public static final native void CkImap_put_ClientIpAddress(long paramLong, CkImap paramCkImap, String paramString);
/*       */   
/*       */   public static final native void CkImap_get_ConnectedToHost(long paramLong1, CkImap paramCkImap, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkImap_connectedToHost(long paramLong, CkImap paramCkImap);
/*       */   
/*       */   public static final native int CkImap_get_ConnectTimeout(long paramLong, CkImap paramCkImap);
/*       */   
/*       */   public static final native void CkImap_put_ConnectTimeout(long paramLong, CkImap paramCkImap, int paramInt);
/*       */   
/*       */   public static final native void CkImap_get_DebugLogFilePath(long paramLong1, CkImap paramCkImap, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkImap_debugLogFilePath(long paramLong, CkImap paramCkImap);
/*       */   
/*       */   public static final native void CkImap_put_DebugLogFilePath(long paramLong, CkImap paramCkImap, String paramString);
/*       */   
/*       */   public static final native void CkImap_get_Domain(long paramLong1, CkImap paramCkImap, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkImap_domain(long paramLong, CkImap paramCkImap);
/*       */   
/*       */   public static final native void CkImap_put_Domain(long paramLong, CkImap paramCkImap, String paramString);
/*       */   
/*       */   public static final native int CkImap_get_HeartbeatMs(long paramLong, CkImap paramCkImap);
/*       */   
/*       */   public static final native void CkImap_put_HeartbeatMs(long paramLong, CkImap paramCkImap, int paramInt);
/*       */   
/*       */   public static final native void CkImap_get_HttpProxyAuthMethod(long paramLong1, CkImap paramCkImap, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkImap_httpProxyAuthMethod(long paramLong, CkImap paramCkImap);
/*       */   
/*       */   public static final native void CkImap_put_HttpProxyAuthMethod(long paramLong, CkImap paramCkImap, String paramString);
/*       */   
/*       */   public static final native void CkImap_get_HttpProxyDomain(long paramLong1, CkImap paramCkImap, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkImap_httpProxyDomain(long paramLong, CkImap paramCkImap);
/*       */   
/*       */   public static final native void CkImap_put_HttpProxyDomain(long paramLong, CkImap paramCkImap, String paramString);
/*       */   
/*       */   public static final native void CkImap_get_HttpProxyHostname(long paramLong1, CkImap paramCkImap, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkImap_httpProxyHostname(long paramLong, CkImap paramCkImap);
/*       */   
/*       */   public static final native void CkImap_put_HttpProxyHostname(long paramLong, CkImap paramCkImap, String paramString);
/*       */   
/*       */   public static final native void CkImap_get_HttpProxyPassword(long paramLong1, CkImap paramCkImap, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkImap_httpProxyPassword(long paramLong, CkImap paramCkImap);
/*       */   
/*       */   public static final native void CkImap_put_HttpProxyPassword(long paramLong, CkImap paramCkImap, String paramString);
/*       */   
/*       */   public static final native int CkImap_get_HttpProxyPort(long paramLong, CkImap paramCkImap);
/*       */   
/*       */   public static final native void CkImap_put_HttpProxyPort(long paramLong, CkImap paramCkImap, int paramInt);
/*       */   
/*       */   public static final native void CkImap_get_HttpProxyUsername(long paramLong1, CkImap paramCkImap, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkImap_httpProxyUsername(long paramLong, CkImap paramCkImap);
/*       */   
/*       */   public static final native void CkImap_put_HttpProxyUsername(long paramLong, CkImap paramCkImap, String paramString);
/*       */   
/*       */   public static final native boolean CkImap_get_KeepSessionLog(long paramLong, CkImap paramCkImap);
/*       */   
/*       */   public static final native void CkImap_put_KeepSessionLog(long paramLong, CkImap paramCkImap, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkImap_get_LastAppendedMime(long paramLong1, CkImap paramCkImap, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkImap_lastAppendedMime(long paramLong, CkImap paramCkImap);
/*       */   
/*       */   public static final native void CkImap_get_LastCommand(long paramLong1, CkImap paramCkImap, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkImap_lastCommand(long paramLong, CkImap paramCkImap);
/*       */   
/*       */   public static final native void CkImap_get_LastErrorHtml(long paramLong1, CkImap paramCkImap, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkImap_lastErrorHtml(long paramLong, CkImap paramCkImap);
/*       */   
/*       */   public static final native void CkImap_get_LastErrorText(long paramLong1, CkImap paramCkImap, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkImap_lastErrorText(long paramLong, CkImap paramCkImap);
/*       */   
/*       */   public static final native void CkImap_get_LastErrorXml(long paramLong1, CkImap paramCkImap, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkImap_lastErrorXml(long paramLong, CkImap paramCkImap);
/*       */   
/*       */   public static final native void CkImap_get_LastIntermediateResponse(long paramLong1, CkImap paramCkImap, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkImap_lastIntermediateResponse(long paramLong, CkImap paramCkImap);
/*       */   
/*       */   public static final native boolean CkImap_get_LastMethodSuccess(long paramLong, CkImap paramCkImap);
/*       */   
/*       */   public static final native void CkImap_put_LastMethodSuccess(long paramLong, CkImap paramCkImap, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkImap_get_LastResponse(long paramLong1, CkImap paramCkImap, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkImap_lastResponse(long paramLong, CkImap paramCkImap);
/*       */   
/*       */   public static final native void CkImap_get_LastResponseCode(long paramLong1, CkImap paramCkImap, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkImap_lastResponseCode(long paramLong, CkImap paramCkImap);
/*       */   
/*       */   public static final native void CkImap_get_LoggedInUser(long paramLong1, CkImap paramCkImap, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkImap_loggedInUser(long paramLong, CkImap paramCkImap);
/*       */   
/*       */   public static final native int CkImap_get_NumMessages(long paramLong, CkImap paramCkImap);
/*       */   
/*       */   public static final native boolean CkImap_get_PeekMode(long paramLong, CkImap paramCkImap);
/*       */   
/*       */   public static final native void CkImap_put_PeekMode(long paramLong, CkImap paramCkImap, boolean paramBoolean);
/*       */   
/*       */   public static final native int CkImap_get_PercentDoneScale(long paramLong, CkImap paramCkImap);
/*       */   
/*       */   public static final native void CkImap_put_PercentDoneScale(long paramLong, CkImap paramCkImap, int paramInt);
/*       */   
/*       */   public static final native int CkImap_get_Port(long paramLong, CkImap paramCkImap);
/*       */   
/*       */   public static final native void CkImap_put_Port(long paramLong, CkImap paramCkImap, int paramInt);
/*       */   
/*       */   public static final native boolean CkImap_get_PreferIpv6(long paramLong, CkImap paramCkImap);
/*       */   
/*       */   public static final native void CkImap_put_PreferIpv6(long paramLong, CkImap paramCkImap, boolean paramBoolean);
/*       */   
/*       */   public static final native int CkImap_get_ReadTimeout(long paramLong, CkImap paramCkImap);
/*       */   
/*       */   public static final native void CkImap_put_ReadTimeout(long paramLong, CkImap paramCkImap, int paramInt);
/*       */   
/*       */   public static final native boolean CkImap_get_RequireSslCertVerify(long paramLong, CkImap paramCkImap);
/*       */   
/*       */   public static final native void CkImap_put_RequireSslCertVerify(long paramLong, CkImap paramCkImap, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkImap_get_SearchCharset(long paramLong1, CkImap paramCkImap, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkImap_searchCharset(long paramLong, CkImap paramCkImap);
/*       */   
/*       */   public static final native void CkImap_put_SearchCharset(long paramLong, CkImap paramCkImap, String paramString);
/*       */   
/*       */   public static final native void CkImap_get_SelectedMailbox(long paramLong1, CkImap paramCkImap, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkImap_selectedMailbox(long paramLong, CkImap paramCkImap);
/*       */   
/*       */   public static final native int CkImap_get_SendBufferSize(long paramLong, CkImap paramCkImap);
/*       */   
/*       */   public static final native void CkImap_put_SendBufferSize(long paramLong, CkImap paramCkImap, int paramInt);
/*       */   
/*       */   public static final native void CkImap_get_SeparatorChar(long paramLong1, CkImap paramCkImap, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkImap_separatorChar(long paramLong, CkImap paramCkImap);
/*       */   
/*       */   public static final native void CkImap_put_SeparatorChar(long paramLong, CkImap paramCkImap, String paramString);
/*       */   
/*       */   public static final native void CkImap_get_SessionLog(long paramLong1, CkImap paramCkImap, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkImap_sessionLog(long paramLong, CkImap paramCkImap);
/*       */   
/*       */   public static final native void CkImap_get_SocksHostname(long paramLong1, CkImap paramCkImap, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkImap_socksHostname(long paramLong, CkImap paramCkImap);
/*       */   
/*       */   public static final native void CkImap_put_SocksHostname(long paramLong, CkImap paramCkImap, String paramString);
/*       */   
/*       */   public static final native void CkImap_get_SocksPassword(long paramLong1, CkImap paramCkImap, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkImap_socksPassword(long paramLong, CkImap paramCkImap);
/*       */   
/*       */   public static final native void CkImap_put_SocksPassword(long paramLong, CkImap paramCkImap, String paramString);
/*       */   
/*       */   public static final native int CkImap_get_SocksPort(long paramLong, CkImap paramCkImap);
/*       */   
/*       */   public static final native void CkImap_put_SocksPort(long paramLong, CkImap paramCkImap, int paramInt);
/*       */   
/*       */   public static final native void CkImap_get_SocksUsername(long paramLong1, CkImap paramCkImap, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkImap_socksUsername(long paramLong, CkImap paramCkImap);
/*       */   
/*       */   public static final native void CkImap_put_SocksUsername(long paramLong, CkImap paramCkImap, String paramString);
/*       */   
/*       */   public static final native int CkImap_get_SocksVersion(long paramLong, CkImap paramCkImap);
/*       */   
/*       */   public static final native void CkImap_put_SocksVersion(long paramLong, CkImap paramCkImap, int paramInt);
/*       */   
/*       */   public static final native int CkImap_get_SoRcvBuf(long paramLong, CkImap paramCkImap);
/*       */   
/*       */   public static final native void CkImap_put_SoRcvBuf(long paramLong, CkImap paramCkImap, int paramInt);
/*       */   
/*       */   public static final native int CkImap_get_SoSndBuf(long paramLong, CkImap paramCkImap);
/*       */   
/*       */   public static final native void CkImap_put_SoSndBuf(long paramLong, CkImap paramCkImap, int paramInt);
/*       */   
/*       */   public static final native boolean CkImap_get_Ssl(long paramLong, CkImap paramCkImap);
/*       */   
/*       */   public static final native void CkImap_put_Ssl(long paramLong, CkImap paramCkImap, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkImap_get_SslAllowedCiphers(long paramLong1, CkImap paramCkImap, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkImap_sslAllowedCiphers(long paramLong, CkImap paramCkImap);
/*       */   
/*       */   public static final native void CkImap_put_SslAllowedCiphers(long paramLong, CkImap paramCkImap, String paramString);
/*       */   
/*       */   public static final native void CkImap_get_SslProtocol(long paramLong1, CkImap paramCkImap, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkImap_sslProtocol(long paramLong, CkImap paramCkImap);
/*       */   
/*       */   public static final native void CkImap_put_SslProtocol(long paramLong, CkImap paramCkImap, String paramString);
/*       */   
/*       */   public static final native boolean CkImap_get_SslServerCertVerified(long paramLong, CkImap paramCkImap);
/*       */   
/*       */   public static final native boolean CkImap_get_StartTls(long paramLong, CkImap paramCkImap);
/*       */   
/*       */   public static final native void CkImap_put_StartTls(long paramLong, CkImap paramCkImap, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkImap_get_TlsCipherSuite(long paramLong1, CkImap paramCkImap, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkImap_tlsCipherSuite(long paramLong, CkImap paramCkImap);
/*       */   
/*       */   public static final native void CkImap_get_TlsPinSet(long paramLong1, CkImap paramCkImap, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkImap_tlsPinSet(long paramLong, CkImap paramCkImap);
/*       */   
/*       */   public static final native void CkImap_put_TlsPinSet(long paramLong, CkImap paramCkImap, String paramString);
/*       */   
/*       */   public static final native void CkImap_get_TlsVersion(long paramLong1, CkImap paramCkImap, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkImap_tlsVersion(long paramLong, CkImap paramCkImap);
/*       */   
/*       */   public static final native int CkImap_get_UidNext(long paramLong, CkImap paramCkImap);
/*       */   
/*       */   public static final native int CkImap_get_UidValidity(long paramLong, CkImap paramCkImap);
/*       */   
/*       */   public static final native boolean CkImap_get_VerboseLogging(long paramLong, CkImap paramCkImap);
/*       */   
/*       */   public static final native void CkImap_put_VerboseLogging(long paramLong, CkImap paramCkImap, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkImap_get_Version(long paramLong1, CkImap paramCkImap, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkImap_version(long paramLong, CkImap paramCkImap);
/*       */   
/*       */   public static final native boolean CkImap_AddPfxSourceData(long paramLong1, CkImap paramCkImap, long paramLong2, CkByteData paramCkByteData, String paramString);
/*       */   
/*       */   public static final native boolean CkImap_AddPfxSourceFile(long paramLong, CkImap paramCkImap, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkImap_AppendMail(long paramLong1, CkImap paramCkImap, String paramString, long paramLong2, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native long CkImap_AppendMailAsync(long paramLong1, CkImap paramCkImap, String paramString, long paramLong2, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native boolean CkImap_AppendMime(long paramLong, CkImap paramCkImap, String paramString1, String paramString2);
/*       */   
/*       */   public static final native long CkImap_AppendMimeAsync(long paramLong, CkImap paramCkImap, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkImap_AppendMimeWithDate(long paramLong1, CkImap paramCkImap, String paramString1, String paramString2, long paramLong2, SYSTEMTIME paramSYSTEMTIME);
/*       */   
/*       */   public static final native boolean CkImap_AppendMimeWithDateStr(long paramLong, CkImap paramCkImap, String paramString1, String paramString2, String paramString3);
/*       */   
/*       */   public static final native long CkImap_AppendMimeWithDateStrAsync(long paramLong, CkImap paramCkImap, String paramString1, String paramString2, String paramString3);
/*       */   
/*       */   public static final native boolean CkImap_AppendMimeWithFlags(long paramLong, CkImap paramCkImap, String paramString1, String paramString2, boolean paramBoolean1, boolean paramBoolean2, boolean paramBoolean3, boolean paramBoolean4);
/*       */   
/*       */   public static final native long CkImap_AppendMimeWithFlagsAsync(long paramLong, CkImap paramCkImap, String paramString1, String paramString2, boolean paramBoolean1, boolean paramBoolean2, boolean paramBoolean3, boolean paramBoolean4);
/*       */   
/*       */   public static final native boolean CkImap_AppendMimeWithFlagsSb(long paramLong1, CkImap paramCkImap, String paramString, long paramLong2, CkStringBuilder paramCkStringBuilder, boolean paramBoolean1, boolean paramBoolean2, boolean paramBoolean3, boolean paramBoolean4);
/*       */   
/*       */   public static final native long CkImap_AppendMimeWithFlagsSbAsync(long paramLong1, CkImap paramCkImap, String paramString, long paramLong2, CkStringBuilder paramCkStringBuilder, boolean paramBoolean1, boolean paramBoolean2, boolean paramBoolean3, boolean paramBoolean4);
/*       */   
/*       */   public static final native boolean CkImap_Capability(long paramLong1, CkImap paramCkImap, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkImap_capability(long paramLong, CkImap paramCkImap);
/*       */   
/*       */   public static final native long CkImap_CapabilityAsync(long paramLong, CkImap paramCkImap);
/*       */   
/*       */   public static final native boolean CkImap_CheckConnection(long paramLong, CkImap paramCkImap);
/*       */   
/*       */   public static final native long CkImap_CheckForNewEmail(long paramLong, CkImap paramCkImap);
/*       */   
/*       */   public static final native long CkImap_CheckForNewEmailAsync(long paramLong, CkImap paramCkImap);
/*       */   
/*       */   public static final native void CkImap_ClearSessionLog(long paramLong, CkImap paramCkImap);
/*       */   
/*       */   public static final native boolean CkImap_CloseMailbox(long paramLong, CkImap paramCkImap, String paramString);
/*       */   
/*       */   public static final native long CkImap_CloseMailboxAsync(long paramLong, CkImap paramCkImap, String paramString);
/*       */   
/*       */   public static final native boolean CkImap_Connect(long paramLong, CkImap paramCkImap, String paramString);
/*       */   
/*       */   public static final native long CkImap_ConnectAsync(long paramLong, CkImap paramCkImap, String paramString);
/*       */   
/*       */   public static final native boolean CkImap_Copy(long paramLong, CkImap paramCkImap, int paramInt, boolean paramBoolean, String paramString);
/*       */   
/*       */   public static final native long CkImap_CopyAsync(long paramLong, CkImap paramCkImap, int paramInt, boolean paramBoolean, String paramString);
/*       */   
/*       */   public static final native boolean CkImap_CopyMultiple(long paramLong1, CkImap paramCkImap, long paramLong2, CkMessageSet paramCkMessageSet, String paramString);
/*       */   
/*       */   public static final native long CkImap_CopyMultipleAsync(long paramLong1, CkImap paramCkImap, long paramLong2, CkMessageSet paramCkMessageSet, String paramString);
/*       */   
/*       */   public static final native boolean CkImap_CopySequence(long paramLong, CkImap paramCkImap, int paramInt1, int paramInt2, String paramString);
/*       */   
/*       */   public static final native long CkImap_CopySequenceAsync(long paramLong, CkImap paramCkImap, int paramInt1, int paramInt2, String paramString);
/*       */   
/*       */   public static final native boolean CkImap_CreateMailbox(long paramLong, CkImap paramCkImap, String paramString);
/*       */   
/*       */   public static final native long CkImap_CreateMailboxAsync(long paramLong, CkImap paramCkImap, String paramString);
/*       */   
/*       */   public static final native boolean CkImap_DeleteMailbox(long paramLong, CkImap paramCkImap, String paramString);
/*       */   
/*       */   public static final native long CkImap_DeleteMailboxAsync(long paramLong, CkImap paramCkImap, String paramString);
/*       */   
/*       */   public static final native boolean CkImap_Disconnect(long paramLong, CkImap paramCkImap);
/*       */   
/*       */   public static final native long CkImap_DisconnectAsync(long paramLong, CkImap paramCkImap);
/*       */   
/*       */   public static final native boolean CkImap_ExamineMailbox(long paramLong, CkImap paramCkImap, String paramString);
/*       */   
/*       */   public static final native long CkImap_ExamineMailboxAsync(long paramLong, CkImap paramCkImap, String paramString);
/*       */   
/*       */   public static final native boolean CkImap_Expunge(long paramLong, CkImap paramCkImap);
/*       */   
/*       */   public static final native long CkImap_ExpungeAsync(long paramLong, CkImap paramCkImap);
/*       */   
/*       */   public static final native boolean CkImap_ExpungeAndClose(long paramLong, CkImap paramCkImap);
/*       */   
/*       */   public static final native long CkImap_ExpungeAndCloseAsync(long paramLong, CkImap paramCkImap);
/*       */   
/*       */   public static final native boolean CkImap_FetchAttachment(long paramLong1, CkImap paramCkImap, long paramLong2, CkEmail paramCkEmail, int paramInt, String paramString);
/*       */   
/*       */   public static final native long CkImap_FetchAttachmentAsync(long paramLong1, CkImap paramCkImap, long paramLong2, CkEmail paramCkEmail, int paramInt, String paramString);
/*       */   
/*       */   public static final native boolean CkImap_FetchAttachmentBd(long paramLong1, CkImap paramCkImap, long paramLong2, CkEmail paramCkEmail, int paramInt, long paramLong3, CkBinData paramCkBinData);
/*       */   
/*       */   public static final native long CkImap_FetchAttachmentBdAsync(long paramLong1, CkImap paramCkImap, long paramLong2, CkEmail paramCkEmail, int paramInt, long paramLong3, CkBinData paramCkBinData);
/*       */   
/*       */   public static final native boolean CkImap_FetchAttachmentBytes(long paramLong1, CkImap paramCkImap, long paramLong2, CkEmail paramCkEmail, int paramInt, long paramLong3, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native long CkImap_FetchAttachmentBytesAsync(long paramLong1, CkImap paramCkImap, long paramLong2, CkEmail paramCkEmail, int paramInt);
/*       */   
/*       */   public static final native boolean CkImap_FetchAttachmentSb(long paramLong1, CkImap paramCkImap, long paramLong2, CkEmail paramCkEmail, int paramInt, String paramString, long paramLong3, CkStringBuilder paramCkStringBuilder);
/*       */   
/*       */   public static final native long CkImap_FetchAttachmentSbAsync(long paramLong1, CkImap paramCkImap, long paramLong2, CkEmail paramCkEmail, int paramInt, String paramString, long paramLong3, CkStringBuilder paramCkStringBuilder);
/*       */   
/*       */   public static final native boolean CkImap_FetchAttachmentString(long paramLong1, CkImap paramCkImap, long paramLong2, CkEmail paramCkEmail, int paramInt, String paramString, long paramLong3, CkString paramCkString);
/*       */   
/*       */   public static final native String CkImap_fetchAttachmentString(long paramLong1, CkImap paramCkImap, long paramLong2, CkEmail paramCkEmail, int paramInt, String paramString);
/*       */   
/*       */   public static final native long CkImap_FetchAttachmentStringAsync(long paramLong1, CkImap paramCkImap, long paramLong2, CkEmail paramCkEmail, int paramInt, String paramString);
/*       */   
/*       */   public static final native long CkImap_FetchBundle(long paramLong1, CkImap paramCkImap, long paramLong2, CkMessageSet paramCkMessageSet);
/*       */   
/*       */   public static final native long CkImap_FetchBundleAsync(long paramLong1, CkImap paramCkImap, long paramLong2, CkMessageSet paramCkMessageSet);
/*       */   
/*       */   public static final native long CkImap_FetchBundleAsMime(long paramLong1, CkImap paramCkImap, long paramLong2, CkMessageSet paramCkMessageSet);
/*       */   
/*       */   public static final native long CkImap_FetchBundleAsMimeAsync(long paramLong1, CkImap paramCkImap, long paramLong2, CkMessageSet paramCkMessageSet);
/*       */   
/*       */   public static final native long CkImap_FetchChunk(long paramLong1, CkImap paramCkImap, int paramInt1, int paramInt2, long paramLong2, CkMessageSet paramCkMessageSet1, long paramLong3, CkMessageSet paramCkMessageSet2);
/*       */   
/*       */   public static final native long CkImap_FetchChunkAsync(long paramLong1, CkImap paramCkImap, int paramInt1, int paramInt2, long paramLong2, CkMessageSet paramCkMessageSet1, long paramLong3, CkMessageSet paramCkMessageSet2);
/*       */   
/*       */   public static final native boolean CkImap_FetchFlags(long paramLong1, CkImap paramCkImap, int paramInt, boolean paramBoolean, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkImap_fetchFlags(long paramLong, CkImap paramCkImap, int paramInt, boolean paramBoolean);
/*       */   
/*       */   public static final native long CkImap_FetchFlagsAsync(long paramLong, CkImap paramCkImap, int paramInt, boolean paramBoolean);
/*       */   
/*       */   public static final native long CkImap_FetchHeaders(long paramLong1, CkImap paramCkImap, long paramLong2, CkMessageSet paramCkMessageSet);
/*       */   
/*       */   public static final native long CkImap_FetchHeadersAsync(long paramLong1, CkImap paramCkImap, long paramLong2, CkMessageSet paramCkMessageSet);
/*       */   
/*       */   public static final native long CkImap_FetchSequence(long paramLong, CkImap paramCkImap, int paramInt1, int paramInt2);
/*       */   
/*       */   public static final native long CkImap_FetchSequenceAsync(long paramLong, CkImap paramCkImap, int paramInt1, int paramInt2);
/*       */   
/*       */   public static final native long CkImap_FetchSequenceAsMime(long paramLong, CkImap paramCkImap, int paramInt1, int paramInt2);
/*       */   
/*       */   public static final native long CkImap_FetchSequenceAsMimeAsync(long paramLong, CkImap paramCkImap, int paramInt1, int paramInt2);
/*       */   
/*       */   public static final native long CkImap_FetchSequenceHeaders(long paramLong, CkImap paramCkImap, int paramInt1, int paramInt2);
/*       */   
/*       */   public static final native long CkImap_FetchSequenceHeadersAsync(long paramLong, CkImap paramCkImap, int paramInt1, int paramInt2);
/*       */   
/*       */   public static final native long CkImap_FetchSingle(long paramLong, CkImap paramCkImap, int paramInt, boolean paramBoolean);
/*       */   
/*       */   public static final native long CkImap_FetchSingleAsync(long paramLong, CkImap paramCkImap, int paramInt, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkImap_FetchSingleAsMime(long paramLong1, CkImap paramCkImap, int paramInt, boolean paramBoolean, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkImap_fetchSingleAsMime(long paramLong, CkImap paramCkImap, int paramInt, boolean paramBoolean);
/*       */   
/*       */   public static final native long CkImap_FetchSingleAsMimeAsync(long paramLong, CkImap paramCkImap, int paramInt, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkImap_FetchSingleAsMimeSb(long paramLong1, CkImap paramCkImap, int paramInt, boolean paramBoolean, long paramLong2, CkStringBuilder paramCkStringBuilder);
/*       */   
/*       */   public static final native long CkImap_FetchSingleAsMimeSbAsync(long paramLong1, CkImap paramCkImap, int paramInt, boolean paramBoolean, long paramLong2, CkStringBuilder paramCkStringBuilder);
/*       */   
/*       */   public static final native long CkImap_FetchSingleHeader(long paramLong, CkImap paramCkImap, int paramInt, boolean paramBoolean);
/*       */   
/*       */   public static final native long CkImap_FetchSingleHeaderAsync(long paramLong, CkImap paramCkImap, int paramInt, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkImap_FetchSingleHeaderAsMime(long paramLong1, CkImap paramCkImap, int paramInt, boolean paramBoolean, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkImap_fetchSingleHeaderAsMime(long paramLong, CkImap paramCkImap, int paramInt, boolean paramBoolean);
/*       */   
/*       */   public static final native long CkImap_FetchSingleHeaderAsMimeAsync(long paramLong, CkImap paramCkImap, int paramInt, boolean paramBoolean);
/*       */   
/*       */   public static final native long CkImap_GetAllUids(long paramLong, CkImap paramCkImap);
/*       */   
/*       */   public static final native long CkImap_GetAllUidsAsync(long paramLong, CkImap paramCkImap);
/*       */   
/*       */   public static final native boolean CkImap_GetMailAttachFilename(long paramLong1, CkImap paramCkImap, long paramLong2, CkEmail paramCkEmail, int paramInt, long paramLong3, CkString paramCkString);
/*       */   
/*       */   public static final native String CkImap_getMailAttachFilename(long paramLong1, CkImap paramCkImap, long paramLong2, CkEmail paramCkEmail, int paramInt);
/*       */   
/*       */   public static final native String CkImap_mailAttachFilename(long paramLong1, CkImap paramCkImap, long paramLong2, CkEmail paramCkEmail, int paramInt);
/*       */   
/*       */   public static final native int CkImap_GetMailAttachSize(long paramLong1, CkImap paramCkImap, long paramLong2, CkEmail paramCkEmail, int paramInt);
/*       */   
/*       */   public static final native boolean CkImap_GetMailboxStatus(long paramLong1, CkImap paramCkImap, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkImap_getMailboxStatus(long paramLong, CkImap paramCkImap, String paramString);
/*       */   
/*       */   public static final native String CkImap_mailboxStatus(long paramLong, CkImap paramCkImap, String paramString);
/*       */   
/*       */   public static final native long CkImap_GetMailboxStatusAsync(long paramLong, CkImap paramCkImap, String paramString);
/*       */   
/*       */   public static final native int CkImap_GetMailFlag(long paramLong1, CkImap paramCkImap, long paramLong2, CkEmail paramCkEmail, String paramString);
/*       */   
/*       */   public static final native int CkImap_GetMailNumAttach(long paramLong1, CkImap paramCkImap, long paramLong2, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native int CkImap_GetMailSize(long paramLong1, CkImap paramCkImap, long paramLong2, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native boolean CkImap_GetQuota(long paramLong1, CkImap paramCkImap, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkImap_getQuota(long paramLong, CkImap paramCkImap, String paramString);
/*       */   
/*       */   public static final native String CkImap_quota(long paramLong, CkImap paramCkImap, String paramString);
/*       */   
/*       */   public static final native long CkImap_GetQuotaAsync(long paramLong, CkImap paramCkImap, String paramString);
/*       */   
/*       */   public static final native boolean CkImap_GetQuotaRoot(long paramLong1, CkImap paramCkImap, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkImap_getQuotaRoot(long paramLong, CkImap paramCkImap, String paramString);
/*       */   
/*       */   public static final native String CkImap_quotaRoot(long paramLong, CkImap paramCkImap, String paramString);
/*       */   
/*       */   public static final native long CkImap_GetQuotaRootAsync(long paramLong, CkImap paramCkImap, String paramString);
/*       */   
/*       */   public static final native long CkImap_GetSslServerCert(long paramLong, CkImap paramCkImap);
/*       */   
/*       */   public static final native boolean CkImap_HasCapability(long paramLong, CkImap paramCkImap, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkImap_IdleCheck(long paramLong1, CkImap paramCkImap, int paramInt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkImap_idleCheck(long paramLong, CkImap paramCkImap, int paramInt);
/*       */   
/*       */   public static final native long CkImap_IdleCheckAsync(long paramLong, CkImap paramCkImap, int paramInt);
/*       */   
/*       */   public static final native boolean CkImap_IdleDone(long paramLong, CkImap paramCkImap);
/*       */   
/*       */   public static final native long CkImap_IdleDoneAsync(long paramLong, CkImap paramCkImap);
/*       */   
/*       */   public static final native boolean CkImap_IdleStart(long paramLong, CkImap paramCkImap);
/*       */   
/*       */   public static final native long CkImap_IdleStartAsync(long paramLong, CkImap paramCkImap);
/*       */   
/*       */   public static final native boolean CkImap_IsConnected(long paramLong, CkImap paramCkImap);
/*       */   
/*       */   public static final native boolean CkImap_IsLoggedIn(long paramLong, CkImap paramCkImap);
/*       */   
/*       */   public static final native boolean CkImap_IsUnlocked(long paramLong, CkImap paramCkImap);
/*       */   
/*       */   public static final native long CkImap_ListMailboxes(long paramLong, CkImap paramCkImap, String paramString1, String paramString2);
/*       */   
/*       */   public static final native long CkImap_ListMailboxesAsync(long paramLong, CkImap paramCkImap, String paramString1, String paramString2);
/*       */   
/*       */   public static final native long CkImap_ListSubscribed(long paramLong, CkImap paramCkImap, String paramString1, String paramString2);
/*       */   
/*       */   public static final native long CkImap_ListSubscribedAsync(long paramLong, CkImap paramCkImap, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkImap_Login(long paramLong, CkImap paramCkImap, String paramString1, String paramString2);
/*       */   
/*       */   public static final native long CkImap_LoginAsync(long paramLong, CkImap paramCkImap, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkImap_LoginSecure(long paramLong1, CkImap paramCkImap, long paramLong2, CkSecureString paramCkSecureString1, long paramLong3, CkSecureString paramCkSecureString2);
/*       */   
/*       */   public static final native long CkImap_LoginSecureAsync(long paramLong1, CkImap paramCkImap, long paramLong2, CkSecureString paramCkSecureString1, long paramLong3, CkSecureString paramCkSecureString2);
/*       */   
/*       */   public static final native boolean CkImap_Logout(long paramLong, CkImap paramCkImap);
/*       */   
/*       */   public static final native long CkImap_LogoutAsync(long paramLong, CkImap paramCkImap);
/*       */   
/*       */   public static final native boolean CkImap_MoveMessages(long paramLong1, CkImap paramCkImap, long paramLong2, CkMessageSet paramCkMessageSet, String paramString);
/*       */   
/*       */   public static final native long CkImap_MoveMessagesAsync(long paramLong1, CkImap paramCkImap, long paramLong2, CkMessageSet paramCkMessageSet, String paramString);
/*       */   
/*       */   public static final native boolean CkImap_Noop(long paramLong, CkImap paramCkImap);
/*       */   
/*       */   public static final native long CkImap_NoopAsync(long paramLong, CkImap paramCkImap);
/*       */   
/*       */   public static final native boolean CkImap_RefetchMailFlags(long paramLong1, CkImap paramCkImap, long paramLong2, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native long CkImap_RefetchMailFlagsAsync(long paramLong1, CkImap paramCkImap, long paramLong2, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native boolean CkImap_RenameMailbox(long paramLong, CkImap paramCkImap, String paramString1, String paramString2);
/*       */   
/*       */   public static final native long CkImap_RenameMailboxAsync(long paramLong, CkImap paramCkImap, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkImap_SaveLastError(long paramLong, CkImap paramCkImap, String paramString);
/*       */   
/*       */   public static final native long CkImap_Search(long paramLong, CkImap paramCkImap, String paramString, boolean paramBoolean);
/*       */   
/*       */   public static final native long CkImap_SearchAsync(long paramLong, CkImap paramCkImap, String paramString, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkImap_SelectMailbox(long paramLong, CkImap paramCkImap, String paramString);
/*       */   
/*       */   public static final native long CkImap_SelectMailboxAsync(long paramLong, CkImap paramCkImap, String paramString);
/*       */   
/*       */   public static final native boolean CkImap_SendRawCommand(long paramLong1, CkImap paramCkImap, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkImap_sendRawCommand(long paramLong, CkImap paramCkImap, String paramString);
/*       */   
/*       */   public static final native long CkImap_SendRawCommandAsync(long paramLong, CkImap paramCkImap, String paramString);
/*       */   
/*       */   public static final native boolean CkImap_SendRawCommandB(long paramLong1, CkImap paramCkImap, String paramString, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native long CkImap_SendRawCommandBAsync(long paramLong, CkImap paramCkImap, String paramString);
/*       */   
/*       */   public static final native boolean CkImap_SendRawCommandC(long paramLong1, CkImap paramCkImap, long paramLong2, CkByteData paramCkByteData1, long paramLong3, CkByteData paramCkByteData2);
/*       */   
/*       */   public static final native long CkImap_SendRawCommandCAsync(long paramLong1, CkImap paramCkImap, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkImap_SetCSP(long paramLong1, CkImap paramCkImap, long paramLong2, CkCsp paramCkCsp);
/*       */   
/*       */   public static final native boolean CkImap_SetDecryptCert(long paramLong1, CkImap paramCkImap, long paramLong2, CkCert paramCkCert);
/*       */   
/*       */   public static final native boolean CkImap_SetDecryptCert2(long paramLong1, CkImap paramCkImap, long paramLong2, CkCert paramCkCert, long paramLong3, CkPrivateKey paramCkPrivateKey);
/*       */   
/*       */   public static final native boolean CkImap_SetFlag(long paramLong, CkImap paramCkImap, int paramInt1, boolean paramBoolean, String paramString, int paramInt2);
/*       */   
/*       */   public static final native long CkImap_SetFlagAsync(long paramLong, CkImap paramCkImap, int paramInt1, boolean paramBoolean, String paramString, int paramInt2);
/*       */   
/*       */   public static final native boolean CkImap_SetFlags(long paramLong1, CkImap paramCkImap, long paramLong2, CkMessageSet paramCkMessageSet, String paramString, int paramInt);
/*       */   
/*       */   public static final native long CkImap_SetFlagsAsync(long paramLong1, CkImap paramCkImap, long paramLong2, CkMessageSet paramCkMessageSet, String paramString, int paramInt);
/*       */   
/*       */   public static final native boolean CkImap_SetMailFlag(long paramLong1, CkImap paramCkImap, long paramLong2, CkEmail paramCkEmail, String paramString, int paramInt);
/*       */   
/*       */   public static final native long CkImap_SetMailFlagAsync(long paramLong1, CkImap paramCkImap, long paramLong2, CkEmail paramCkEmail, String paramString, int paramInt);
/*       */   
/*       */   public static final native boolean CkImap_SetQuota(long paramLong, CkImap paramCkImap, String paramString1, String paramString2, int paramInt);
/*       */   
/*       */   public static final native long CkImap_SetQuotaAsync(long paramLong, CkImap paramCkImap, String paramString1, String paramString2, int paramInt);
/*       */   
/*       */   public static final native boolean CkImap_SetSslClientCert(long paramLong1, CkImap paramCkImap, long paramLong2, CkCert paramCkCert);
/*       */   
/*       */   public static final native boolean CkImap_SetSslClientCertPem(long paramLong, CkImap paramCkImap, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkImap_SetSslClientCertPfx(long paramLong, CkImap paramCkImap, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkImap_SshAuthenticatePk(long paramLong1, CkImap paramCkImap, String paramString, long paramLong2, CkSshKey paramCkSshKey);
/*       */   
/*       */   public static final native long CkImap_SshAuthenticatePkAsync(long paramLong1, CkImap paramCkImap, String paramString, long paramLong2, CkSshKey paramCkSshKey);
/*       */   
/*       */   public static final native boolean CkImap_SshAuthenticatePw(long paramLong, CkImap paramCkImap, String paramString1, String paramString2);
/*       */   
/*       */   public static final native long CkImap_SshAuthenticatePwAsync(long paramLong, CkImap paramCkImap, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkImap_SshCloseTunnel(long paramLong, CkImap paramCkImap);
/*       */   
/*       */   public static final native long CkImap_SshCloseTunnelAsync(long paramLong, CkImap paramCkImap);
/*       */   
/*       */   public static final native boolean CkImap_SshOpenTunnel(long paramLong, CkImap paramCkImap, String paramString, int paramInt);
/*       */   
/*       */   public static final native long CkImap_SshOpenTunnelAsync(long paramLong, CkImap paramCkImap, String paramString, int paramInt);
/*       */   
/*       */   public static final native boolean CkImap_StoreFlags(long paramLong, CkImap paramCkImap, int paramInt1, boolean paramBoolean, String paramString, int paramInt2);
/*       */   
/*       */   public static final native long CkImap_StoreFlagsAsync(long paramLong, CkImap paramCkImap, int paramInt1, boolean paramBoolean, String paramString, int paramInt2);
/*       */   
/*       */   public static final native boolean CkImap_Subscribe(long paramLong, CkImap paramCkImap, String paramString);
/*       */   
/*       */   public static final native long CkImap_SubscribeAsync(long paramLong, CkImap paramCkImap, String paramString);
/*       */   
/*       */   public static final native boolean CkImap_UnlockComponent(long paramLong, CkImap paramCkImap, String paramString);
/*       */   
/*       */   public static final native boolean CkImap_Unsubscribe(long paramLong, CkImap paramCkImap, String paramString);
/*       */   
/*       */   public static final native long CkImap_UnsubscribeAsync(long paramLong, CkImap paramCkImap, String paramString);
/*       */   
/*       */   public static final native boolean CkImap_UseCertVault(long paramLong1, CkImap paramCkImap, long paramLong2, CkXmlCertVault paramCkXmlCertVault);
/*       */   
/*       */   public static final native boolean CkImap_UseSsh(long paramLong1, CkImap paramCkImap, long paramLong2, CkSsh paramCkSsh);
/*       */   
/*       */   public static final native boolean CkImap_UseSshTunnel(long paramLong1, CkImap paramCkImap, long paramLong2, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native long new_CkJavaKeyStore();
/*       */   
/*       */   public static final native void delete_CkJavaKeyStore(long paramLong);
/*       */   
/*       */   public static final native void CkJavaKeyStore_LastErrorXml(long paramLong1, CkJavaKeyStore paramCkJavaKeyStore, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkJavaKeyStore_LastErrorHtml(long paramLong1, CkJavaKeyStore paramCkJavaKeyStore, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkJavaKeyStore_LastErrorText(long paramLong1, CkJavaKeyStore paramCkJavaKeyStore, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkJavaKeyStore_get_DebugLogFilePath(long paramLong1, CkJavaKeyStore paramCkJavaKeyStore, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkJavaKeyStore_debugLogFilePath(long paramLong, CkJavaKeyStore paramCkJavaKeyStore);
/*       */   
/*       */   public static final native void CkJavaKeyStore_put_DebugLogFilePath(long paramLong, CkJavaKeyStore paramCkJavaKeyStore, String paramString);
/*       */   
/*       */   public static final native void CkJavaKeyStore_get_LastErrorHtml(long paramLong1, CkJavaKeyStore paramCkJavaKeyStore, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkJavaKeyStore_lastErrorHtml(long paramLong, CkJavaKeyStore paramCkJavaKeyStore);
/*       */   
/*       */   public static final native void CkJavaKeyStore_get_LastErrorText(long paramLong1, CkJavaKeyStore paramCkJavaKeyStore, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkJavaKeyStore_lastErrorText(long paramLong, CkJavaKeyStore paramCkJavaKeyStore);
/*       */   
/*       */   public static final native void CkJavaKeyStore_get_LastErrorXml(long paramLong1, CkJavaKeyStore paramCkJavaKeyStore, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkJavaKeyStore_lastErrorXml(long paramLong, CkJavaKeyStore paramCkJavaKeyStore);
/*       */   
/*       */   public static final native boolean CkJavaKeyStore_get_LastMethodSuccess(long paramLong, CkJavaKeyStore paramCkJavaKeyStore);
/*       */   
/*       */   public static final native void CkJavaKeyStore_put_LastMethodSuccess(long paramLong, CkJavaKeyStore paramCkJavaKeyStore, boolean paramBoolean);
/*       */   
/*       */   public static final native int CkJavaKeyStore_get_NumPrivateKeys(long paramLong, CkJavaKeyStore paramCkJavaKeyStore);
/*       */   
/*       */   public static final native int CkJavaKeyStore_get_NumSecretKeys(long paramLong, CkJavaKeyStore paramCkJavaKeyStore);
/*       */   
/*       */   public static final native int CkJavaKeyStore_get_NumTrustedCerts(long paramLong, CkJavaKeyStore paramCkJavaKeyStore);
/*       */   
/*       */   public static final native boolean CkJavaKeyStore_get_RequireCompleteChain(long paramLong, CkJavaKeyStore paramCkJavaKeyStore);
/*       */   
/*       */   public static final native void CkJavaKeyStore_put_RequireCompleteChain(long paramLong, CkJavaKeyStore paramCkJavaKeyStore, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkJavaKeyStore_get_VerboseLogging(long paramLong, CkJavaKeyStore paramCkJavaKeyStore);
/*       */   
/*       */   public static final native void CkJavaKeyStore_put_VerboseLogging(long paramLong, CkJavaKeyStore paramCkJavaKeyStore, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkJavaKeyStore_get_VerifyKeyedDigest(long paramLong, CkJavaKeyStore paramCkJavaKeyStore);
/*       */   
/*       */   public static final native void CkJavaKeyStore_put_VerifyKeyedDigest(long paramLong, CkJavaKeyStore paramCkJavaKeyStore, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkJavaKeyStore_get_Version(long paramLong1, CkJavaKeyStore paramCkJavaKeyStore, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkJavaKeyStore_version(long paramLong, CkJavaKeyStore paramCkJavaKeyStore);
/*       */   
/*       */   public static final native boolean CkJavaKeyStore_AddPfx(long paramLong1, CkJavaKeyStore paramCkJavaKeyStore, long paramLong2, CkPfx paramCkPfx, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkJavaKeyStore_AddPrivateKey(long paramLong1, CkJavaKeyStore paramCkJavaKeyStore, long paramLong2, CkCert paramCkCert, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkJavaKeyStore_AddSecretKey(long paramLong, CkJavaKeyStore paramCkJavaKeyStore, String paramString1, String paramString2, String paramString3, String paramString4, String paramString5);
/*       */   
/*       */   public static final native boolean CkJavaKeyStore_AddTrustedCert(long paramLong1, CkJavaKeyStore paramCkJavaKeyStore, long paramLong2, CkCert paramCkCert, String paramString);
/*       */   
/*       */   public static final native boolean CkJavaKeyStore_ChangePassword(long paramLong, CkJavaKeyStore paramCkJavaKeyStore, int paramInt, String paramString1, String paramString2);
/*       */   
/*       */   public static final native long CkJavaKeyStore_FindCertChain(long paramLong, CkJavaKeyStore paramCkJavaKeyStore, String paramString, boolean paramBoolean);
/*       */   
/*       */   public static final native long CkJavaKeyStore_FindPrivateKey(long paramLong, CkJavaKeyStore paramCkJavaKeyStore, String paramString1, String paramString2, boolean paramBoolean);
/*       */   
/*       */   public static final native long CkJavaKeyStore_FindTrustedCert(long paramLong, CkJavaKeyStore paramCkJavaKeyStore, String paramString, boolean paramBoolean);
/*       */   
/*       */   public static final native long CkJavaKeyStore_GetCertChain(long paramLong, CkJavaKeyStore paramCkJavaKeyStore, int paramInt);
/*       */   
/*       */   public static final native long CkJavaKeyStore_GetPrivateKey(long paramLong, CkJavaKeyStore paramCkJavaKeyStore, String paramString, int paramInt);
/*       */   
/*       */   public static final native boolean CkJavaKeyStore_GetPrivateKeyAlias(long paramLong1, CkJavaKeyStore paramCkJavaKeyStore, int paramInt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkJavaKeyStore_getPrivateKeyAlias(long paramLong, CkJavaKeyStore paramCkJavaKeyStore, int paramInt);
/*       */   
/*       */   public static final native String CkJavaKeyStore_privateKeyAlias(long paramLong, CkJavaKeyStore paramCkJavaKeyStore, int paramInt);
/*       */   
/*       */   public static final native boolean CkJavaKeyStore_GetSecretKey(long paramLong1, CkJavaKeyStore paramCkJavaKeyStore, String paramString1, int paramInt, String paramString2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkJavaKeyStore_getSecretKey(long paramLong, CkJavaKeyStore paramCkJavaKeyStore, String paramString1, int paramInt, String paramString2);
/*       */   
/*       */   public static final native String CkJavaKeyStore_secretKey(long paramLong, CkJavaKeyStore paramCkJavaKeyStore, String paramString1, int paramInt, String paramString2);
/*       */   
/*       */   public static final native boolean CkJavaKeyStore_GetSecretKeyAlias(long paramLong1, CkJavaKeyStore paramCkJavaKeyStore, int paramInt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkJavaKeyStore_getSecretKeyAlias(long paramLong, CkJavaKeyStore paramCkJavaKeyStore, int paramInt);
/*       */   
/*       */   public static final native String CkJavaKeyStore_secretKeyAlias(long paramLong, CkJavaKeyStore paramCkJavaKeyStore, int paramInt);
/*       */   
/*       */   public static final native long CkJavaKeyStore_GetTrustedCert(long paramLong, CkJavaKeyStore paramCkJavaKeyStore, int paramInt);
/*       */   
/*       */   public static final native boolean CkJavaKeyStore_GetTrustedCertAlias(long paramLong1, CkJavaKeyStore paramCkJavaKeyStore, int paramInt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkJavaKeyStore_getTrustedCertAlias(long paramLong, CkJavaKeyStore paramCkJavaKeyStore, int paramInt);
/*       */   
/*       */   public static final native String CkJavaKeyStore_trustedCertAlias(long paramLong, CkJavaKeyStore paramCkJavaKeyStore, int paramInt);
/*       */   
/*       */   public static final native boolean CkJavaKeyStore_LoadBinary(long paramLong1, CkJavaKeyStore paramCkJavaKeyStore, String paramString, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkJavaKeyStore_LoadEncoded(long paramLong, CkJavaKeyStore paramCkJavaKeyStore, String paramString1, String paramString2, String paramString3);
/*       */   
/*       */   public static final native boolean CkJavaKeyStore_LoadFile(long paramLong, CkJavaKeyStore paramCkJavaKeyStore, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkJavaKeyStore_LoadJwkSet(long paramLong1, CkJavaKeyStore paramCkJavaKeyStore, String paramString, long paramLong2, CkJsonObject paramCkJsonObject);
/*       */   
/*       */   public static final native boolean CkJavaKeyStore_RemoveEntry(long paramLong, CkJavaKeyStore paramCkJavaKeyStore, int paramInt1, int paramInt2);
/*       */   
/*       */   public static final native boolean CkJavaKeyStore_SaveLastError(long paramLong, CkJavaKeyStore paramCkJavaKeyStore, String paramString);
/*       */   
/*       */   public static final native boolean CkJavaKeyStore_SetAlias(long paramLong, CkJavaKeyStore paramCkJavaKeyStore, int paramInt1, int paramInt2, String paramString);
/*       */   
/*       */   public static final native boolean CkJavaKeyStore_ToBinary(long paramLong1, CkJavaKeyStore paramCkJavaKeyStore, String paramString, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkJavaKeyStore_ToEncodedString(long paramLong1, CkJavaKeyStore paramCkJavaKeyStore, String paramString1, String paramString2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkJavaKeyStore_toEncodedString(long paramLong, CkJavaKeyStore paramCkJavaKeyStore, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkJavaKeyStore_ToFile(long paramLong, CkJavaKeyStore paramCkJavaKeyStore, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkJavaKeyStore_ToJwkSet(long paramLong1, CkJavaKeyStore paramCkJavaKeyStore, String paramString, long paramLong2, CkStringBuilder paramCkStringBuilder);
/*       */   
/*       */   public static final native long CkJavaKeyStore_ToPem(long paramLong, CkJavaKeyStore paramCkJavaKeyStore, String paramString);
/*       */   
/*       */   public static final native long CkJavaKeyStore_ToPfx(long paramLong, CkJavaKeyStore paramCkJavaKeyStore, String paramString);
/*       */   
/*       */   public static final native boolean CkJavaKeyStore_UnlockComponent(long paramLong, CkJavaKeyStore paramCkJavaKeyStore, String paramString);
/*       */   
/*       */   public static final native boolean CkJavaKeyStore_UseCertVault(long paramLong1, CkJavaKeyStore paramCkJavaKeyStore, long paramLong2, CkXmlCertVault paramCkXmlCertVault);
/*       */   
/*       */   public static final native long new_CkLog();
/*       */   
/*       */   public static final native void delete_CkLog(long paramLong);
/*       */   
/*       */   public static final native void CkLog_LastErrorXml(long paramLong1, CkLog paramCkLog, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkLog_LastErrorHtml(long paramLong1, CkLog paramCkLog, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkLog_LastErrorText(long paramLong1, CkLog paramCkLog, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkLog_get_DebugLogFilePath(long paramLong1, CkLog paramCkLog, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkLog_debugLogFilePath(long paramLong, CkLog paramCkLog);
/*       */   
/*       */   public static final native void CkLog_put_DebugLogFilePath(long paramLong, CkLog paramCkLog, String paramString);
/*       */   
/*       */   public static final native void CkLog_get_LastErrorHtml(long paramLong1, CkLog paramCkLog, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkLog_lastErrorHtml(long paramLong, CkLog paramCkLog);
/*       */   
/*       */   public static final native void CkLog_get_LastErrorText(long paramLong1, CkLog paramCkLog, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkLog_lastErrorText(long paramLong, CkLog paramCkLog);
/*       */   
/*       */   public static final native void CkLog_get_LastErrorXml(long paramLong1, CkLog paramCkLog, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkLog_lastErrorXml(long paramLong, CkLog paramCkLog);
/*       */   
/*       */   public static final native boolean CkLog_get_LastMethodSuccess(long paramLong, CkLog paramCkLog);
/*       */   
/*       */   public static final native void CkLog_put_LastMethodSuccess(long paramLong, CkLog paramCkLog, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkLog_get_VerboseLogging(long paramLong, CkLog paramCkLog);
/*       */   
/*       */   public static final native void CkLog_put_VerboseLogging(long paramLong, CkLog paramCkLog, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkLog_get_Version(long paramLong1, CkLog paramCkLog, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkLog_version(long paramLong, CkLog paramCkLog);
/*       */   
/*       */   public static final native void CkLog_Clear(long paramLong, CkLog paramCkLog, String paramString);
/*       */   
/*       */   public static final native void CkLog_EnterContext(long paramLong, CkLog paramCkLog, String paramString);
/*       */   
/*       */   public static final native void CkLog_LeaveContext(long paramLong, CkLog paramCkLog);
/*       */   
/*       */   public static final native void CkLog_LogData(long paramLong, CkLog paramCkLog, String paramString1, String paramString2);
/*       */   
/*       */   public static final native void CkLog_LogDataBase64(long paramLong1, CkLog paramCkLog, String paramString, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native void CkLog_LogDataHex(long paramLong1, CkLog paramCkLog, String paramString, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native void CkLog_LogDataMax(long paramLong, CkLog paramCkLog, String paramString1, String paramString2, int paramInt);
/*       */   
/*       */   public static final native void CkLog_LogDateTime(long paramLong, CkLog paramCkLog, String paramString, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkLog_LogError(long paramLong, CkLog paramCkLog, String paramString);
/*       */   
/*       */   public static final native void CkLog_LogInfo(long paramLong, CkLog paramCkLog, String paramString);
/*       */   
/*       */   public static final native void CkLog_LogInt(long paramLong, CkLog paramCkLog, String paramString, int paramInt);
/*       */   
/*       */   public static final native void CkLog_LogInt64(long paramLong1, CkLog paramCkLog, String paramString, long paramLong2);
/*       */   
/*       */   public static final native void CkLog_LogTimestamp(long paramLong, CkLog paramCkLog, String paramString);
/*       */   
/*       */   public static final native boolean CkLog_SaveLastError(long paramLong, CkLog paramCkLog, String paramString);
/*       */   
/*       */   public static final native long new_CkMailboxes();
/*       */   
/*       */   public static final native void delete_CkMailboxes(long paramLong);
/*       */   
/*       */   public static final native int CkMailboxes_get_Count(long paramLong, CkMailboxes paramCkMailboxes);
/*       */   
/*       */   public static final native boolean CkMailboxes_get_LastMethodSuccess(long paramLong, CkMailboxes paramCkMailboxes);
/*       */   
/*       */   public static final native void CkMailboxes_put_LastMethodSuccess(long paramLong, CkMailboxes paramCkMailboxes, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkMailboxes_GetFlags(long paramLong1, CkMailboxes paramCkMailboxes, int paramInt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkMailboxes_getFlags(long paramLong, CkMailboxes paramCkMailboxes, int paramInt);
/*       */   
/*       */   public static final native String CkMailboxes_flags(long paramLong, CkMailboxes paramCkMailboxes, int paramInt);
/*       */   
/*       */   public static final native int CkMailboxes_GetMailboxIndex(long paramLong, CkMailboxes paramCkMailboxes, String paramString);
/*       */   
/*       */   public static final native boolean CkMailboxes_GetName(long paramLong1, CkMailboxes paramCkMailboxes, int paramInt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkMailboxes_getName(long paramLong, CkMailboxes paramCkMailboxes, int paramInt);
/*       */   
/*       */   public static final native String CkMailboxes_name(long paramLong, CkMailboxes paramCkMailboxes, int paramInt);
/*       */   
/*       */   public static final native boolean CkMailboxes_GetNthFlag(long paramLong1, CkMailboxes paramCkMailboxes, int paramInt1, int paramInt2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkMailboxes_getNthFlag(long paramLong, CkMailboxes paramCkMailboxes, int paramInt1, int paramInt2);
/*       */   
/*       */   public static final native String CkMailboxes_nthFlag(long paramLong, CkMailboxes paramCkMailboxes, int paramInt1, int paramInt2);
/*       */   
/*       */   public static final native int CkMailboxes_GetNumFlags(long paramLong, CkMailboxes paramCkMailboxes, int paramInt);
/*       */   
/*       */   public static final native boolean CkMailboxes_HasFlag(long paramLong, CkMailboxes paramCkMailboxes, int paramInt, String paramString);
/*       */   
/*       */   public static final native boolean CkMailboxes_HasInferiors(long paramLong, CkMailboxes paramCkMailboxes, int paramInt);
/*       */   
/*       */   public static final native boolean CkMailboxes_IsMarked(long paramLong, CkMailboxes paramCkMailboxes, int paramInt);
/*       */   
/*       */   public static final native boolean CkMailboxes_IsSelectable(long paramLong, CkMailboxes paramCkMailboxes, int paramInt);
/*       */   
/*       */   public static final native boolean CkMailboxes_LoadTaskResult(long paramLong1, CkMailboxes paramCkMailboxes, long paramLong2, CkTask paramCkTask);
/*       */   
/*       */   public static final native long new_CkMailMan();
/*       */   
/*       */   public static final native void delete_CkMailMan(long paramLong);
/*       */   
/*       */   public static final native void CkMailMan_LastErrorXml(long paramLong1, CkMailMan paramCkMailMan, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkMailMan_LastErrorHtml(long paramLong1, CkMailMan paramCkMailMan, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkMailMan_LastErrorText(long paramLong1, CkMailMan paramCkMailMan, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkMailMan_put_EventCallbackObject(long paramLong1, CkMailMan paramCkMailMan, long paramLong2, CkMailManProgress paramCkMailManProgress);
/*       */   
/*       */   public static final native boolean CkMailMan_get_AbortCurrent(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native void CkMailMan_put_AbortCurrent(long paramLong, CkMailMan paramCkMailMan, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkMailMan_get_AllOrNone(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native void CkMailMan_put_AllOrNone(long paramLong, CkMailMan paramCkMailMan, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkMailMan_get_AutoFix(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native void CkMailMan_put_AutoFix(long paramLong, CkMailMan paramCkMailMan, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkMailMan_get_AutoGenMessageId(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native void CkMailMan_put_AutoGenMessageId(long paramLong, CkMailMan paramCkMailMan, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkMailMan_get_AutoSmtpRset(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native void CkMailMan_put_AutoSmtpRset(long paramLong, CkMailMan paramCkMailMan, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkMailMan_get_AutoUnwrapSecurity(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native void CkMailMan_put_AutoUnwrapSecurity(long paramLong, CkMailMan paramCkMailMan, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkMailMan_get_ClientIpAddress(long paramLong1, CkMailMan paramCkMailMan, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkMailMan_clientIpAddress(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native void CkMailMan_put_ClientIpAddress(long paramLong, CkMailMan paramCkMailMan, String paramString);
/*       */   
/*       */   public static final native int CkMailMan_get_ConnectFailReason(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native int CkMailMan_get_ConnectTimeout(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native void CkMailMan_put_ConnectTimeout(long paramLong, CkMailMan paramCkMailMan, int paramInt);
/*       */   
/*       */   public static final native void CkMailMan_get_DebugLogFilePath(long paramLong1, CkMailMan paramCkMailMan, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkMailMan_debugLogFilePath(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native void CkMailMan_put_DebugLogFilePath(long paramLong, CkMailMan paramCkMailMan, String paramString);
/*       */   
/*       */   public static final native void CkMailMan_get_DsnEnvid(long paramLong1, CkMailMan paramCkMailMan, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkMailMan_dsnEnvid(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native void CkMailMan_put_DsnEnvid(long paramLong, CkMailMan paramCkMailMan, String paramString);
/*       */   
/*       */   public static final native void CkMailMan_get_DsnNotify(long paramLong1, CkMailMan paramCkMailMan, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkMailMan_dsnNotify(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native void CkMailMan_put_DsnNotify(long paramLong, CkMailMan paramCkMailMan, String paramString);
/*       */   
/*       */   public static final native void CkMailMan_get_DsnRet(long paramLong1, CkMailMan paramCkMailMan, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkMailMan_dsnRet(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native void CkMailMan_put_DsnRet(long paramLong, CkMailMan paramCkMailMan, String paramString);
/*       */   
/*       */   public static final native boolean CkMailMan_get_EmbedCertChain(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native void CkMailMan_put_EmbedCertChain(long paramLong, CkMailMan paramCkMailMan, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkMailMan_get_Filter(long paramLong1, CkMailMan paramCkMailMan, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkMailMan_filter(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native void CkMailMan_put_Filter(long paramLong, CkMailMan paramCkMailMan, String paramString);
/*       */   
/*       */   public static final native int CkMailMan_get_HeartbeatMs(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native void CkMailMan_put_HeartbeatMs(long paramLong, CkMailMan paramCkMailMan, int paramInt);
/*       */   
/*       */   public static final native void CkMailMan_get_HeloHostname(long paramLong1, CkMailMan paramCkMailMan, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkMailMan_heloHostname(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native void CkMailMan_put_HeloHostname(long paramLong, CkMailMan paramCkMailMan, String paramString);
/*       */   
/*       */   public static final native void CkMailMan_get_HttpProxyAuthMethod(long paramLong1, CkMailMan paramCkMailMan, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkMailMan_httpProxyAuthMethod(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native void CkMailMan_put_HttpProxyAuthMethod(long paramLong, CkMailMan paramCkMailMan, String paramString);
/*       */   
/*       */   public static final native void CkMailMan_get_HttpProxyDomain(long paramLong1, CkMailMan paramCkMailMan, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkMailMan_httpProxyDomain(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native void CkMailMan_put_HttpProxyDomain(long paramLong, CkMailMan paramCkMailMan, String paramString);
/*       */   
/*       */   public static final native void CkMailMan_get_HttpProxyHostname(long paramLong1, CkMailMan paramCkMailMan, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkMailMan_httpProxyHostname(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native void CkMailMan_put_HttpProxyHostname(long paramLong, CkMailMan paramCkMailMan, String paramString);
/*       */   
/*       */   public static final native void CkMailMan_get_HttpProxyPassword(long paramLong1, CkMailMan paramCkMailMan, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkMailMan_httpProxyPassword(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native void CkMailMan_put_HttpProxyPassword(long paramLong, CkMailMan paramCkMailMan, String paramString);
/*       */   
/*       */   public static final native int CkMailMan_get_HttpProxyPort(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native void CkMailMan_put_HttpProxyPort(long paramLong, CkMailMan paramCkMailMan, int paramInt);
/*       */   
/*       */   public static final native void CkMailMan_get_HttpProxyUsername(long paramLong1, CkMailMan paramCkMailMan, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkMailMan_httpProxyUsername(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native void CkMailMan_put_HttpProxyUsername(long paramLong, CkMailMan paramCkMailMan, String paramString);
/*       */   
/*       */   public static final native boolean CkMailMan_get_ImmediateDelete(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native void CkMailMan_put_ImmediateDelete(long paramLong, CkMailMan paramCkMailMan, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkMailMan_get_IncludeRootCert(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native void CkMailMan_put_IncludeRootCert(long paramLong, CkMailMan paramCkMailMan, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkMailMan_get_IsPop3Connected(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native boolean CkMailMan_get_IsSmtpConnected(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native void CkMailMan_get_LastErrorHtml(long paramLong1, CkMailMan paramCkMailMan, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkMailMan_lastErrorHtml(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native void CkMailMan_get_LastErrorText(long paramLong1, CkMailMan paramCkMailMan, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkMailMan_lastErrorText(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native void CkMailMan_get_LastErrorXml(long paramLong1, CkMailMan paramCkMailMan, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkMailMan_lastErrorXml(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native boolean CkMailMan_get_LastMethodSuccess(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native void CkMailMan_put_LastMethodSuccess(long paramLong, CkMailMan paramCkMailMan, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkMailMan_get_LastSendQFilename(long paramLong1, CkMailMan paramCkMailMan, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkMailMan_lastSendQFilename(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native int CkMailMan_get_LastSmtpStatus(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native void CkMailMan_get_LogMailReceivedFilename(long paramLong1, CkMailMan paramCkMailMan, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkMailMan_logMailReceivedFilename(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native void CkMailMan_put_LogMailReceivedFilename(long paramLong, CkMailMan paramCkMailMan, String paramString);
/*       */   
/*       */   public static final native void CkMailMan_get_LogMailSentFilename(long paramLong1, CkMailMan paramCkMailMan, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkMailMan_logMailSentFilename(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native void CkMailMan_put_LogMailSentFilename(long paramLong, CkMailMan paramCkMailMan, String paramString);
/*       */   
/*       */   public static final native void CkMailMan_get_MailHost(long paramLong1, CkMailMan paramCkMailMan, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkMailMan_mailHost(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native void CkMailMan_put_MailHost(long paramLong, CkMailMan paramCkMailMan, String paramString);
/*       */   
/*       */   public static final native int CkMailMan_get_MailPort(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native void CkMailMan_put_MailPort(long paramLong, CkMailMan paramCkMailMan, int paramInt);
/*       */   
/*       */   public static final native int CkMailMan_get_MaxCount(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native void CkMailMan_put_MaxCount(long paramLong, CkMailMan paramCkMailMan, int paramInt);
/*       */   
/*       */   public static final native void CkMailMan_get_OAuth2AccessToken(long paramLong1, CkMailMan paramCkMailMan, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkMailMan_oAuth2AccessToken(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native void CkMailMan_put_OAuth2AccessToken(long paramLong, CkMailMan paramCkMailMan, String paramString);
/*       */   
/*       */   public static final native boolean CkMailMan_get_OpaqueSigning(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native void CkMailMan_put_OpaqueSigning(long paramLong, CkMailMan paramCkMailMan, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkMailMan_get_P7mEncryptAttachFilename(long paramLong1, CkMailMan paramCkMailMan, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkMailMan_p7mEncryptAttachFilename(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native void CkMailMan_put_P7mEncryptAttachFilename(long paramLong, CkMailMan paramCkMailMan, String paramString);
/*       */   
/*       */   public static final native void CkMailMan_get_P7mSigAttachFilename(long paramLong1, CkMailMan paramCkMailMan, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkMailMan_p7mSigAttachFilename(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native void CkMailMan_put_P7mSigAttachFilename(long paramLong, CkMailMan paramCkMailMan, String paramString);
/*       */   
/*       */   public static final native void CkMailMan_get_P7sSigAttachFilename(long paramLong1, CkMailMan paramCkMailMan, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkMailMan_p7sSigAttachFilename(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native void CkMailMan_put_P7sSigAttachFilename(long paramLong, CkMailMan paramCkMailMan, String paramString);
/*       */   
/*       */   public static final native int CkMailMan_get_PercentDoneScale(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native void CkMailMan_put_PercentDoneScale(long paramLong, CkMailMan paramCkMailMan, int paramInt);
/*       */   
/*       */   public static final native int CkMailMan_get_Pop3SessionId(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native void CkMailMan_get_Pop3SessionLog(long paramLong1, CkMailMan paramCkMailMan, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkMailMan_pop3SessionLog(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native boolean CkMailMan_get_Pop3SPA(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native void CkMailMan_put_Pop3SPA(long paramLong, CkMailMan paramCkMailMan, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkMailMan_get_Pop3SslServerCertVerified(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native boolean CkMailMan_get_Pop3Stls(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native void CkMailMan_put_Pop3Stls(long paramLong, CkMailMan paramCkMailMan, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkMailMan_get_PopPassword(long paramLong1, CkMailMan paramCkMailMan, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkMailMan_popPassword(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native void CkMailMan_put_PopPassword(long paramLong, CkMailMan paramCkMailMan, String paramString);
/*       */   
/*       */   public static final native void CkMailMan_get_PopPasswordBase64(long paramLong1, CkMailMan paramCkMailMan, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkMailMan_popPasswordBase64(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native void CkMailMan_put_PopPasswordBase64(long paramLong, CkMailMan paramCkMailMan, String paramString);
/*       */   
/*       */   public static final native boolean CkMailMan_get_PopSsl(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native void CkMailMan_put_PopSsl(long paramLong, CkMailMan paramCkMailMan, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkMailMan_get_PopUsername(long paramLong1, CkMailMan paramCkMailMan, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkMailMan_popUsername(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native void CkMailMan_put_PopUsername(long paramLong, CkMailMan paramCkMailMan, String paramString);
/*       */   
/*       */   public static final native boolean CkMailMan_get_PreferIpv6(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native void CkMailMan_put_PreferIpv6(long paramLong, CkMailMan paramCkMailMan, boolean paramBoolean);
/*       */   
/*       */   public static final native int CkMailMan_get_ReadTimeout(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native void CkMailMan_put_ReadTimeout(long paramLong, CkMailMan paramCkMailMan, int paramInt);
/*       */   
/*       */   public static final native boolean CkMailMan_get_RequireSslCertVerify(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native void CkMailMan_put_RequireSslCertVerify(long paramLong, CkMailMan paramCkMailMan, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkMailMan_get_ResetDateOnLoad(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native void CkMailMan_put_ResetDateOnLoad(long paramLong, CkMailMan paramCkMailMan, boolean paramBoolean);
/*       */   
/*       */   public static final native int CkMailMan_get_SendBufferSize(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native void CkMailMan_put_SendBufferSize(long paramLong, CkMailMan paramCkMailMan, int paramInt);
/*       */   
/*       */   public static final native boolean CkMailMan_get_SendIndividual(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native void CkMailMan_put_SendIndividual(long paramLong, CkMailMan paramCkMailMan, boolean paramBoolean);
/*       */   
/*       */   public static final native int CkMailMan_get_SizeLimit(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native void CkMailMan_put_SizeLimit(long paramLong, CkMailMan paramCkMailMan, int paramInt);
/*       */   
/*       */   public static final native void CkMailMan_get_SmtpAuthMethod(long paramLong1, CkMailMan paramCkMailMan, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkMailMan_smtpAuthMethod(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native void CkMailMan_put_SmtpAuthMethod(long paramLong, CkMailMan paramCkMailMan, String paramString);
/*       */   
/*       */   public static final native void CkMailMan_get_SmtpFailReason(long paramLong1, CkMailMan paramCkMailMan, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkMailMan_smtpFailReason(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native void CkMailMan_get_SmtpHost(long paramLong1, CkMailMan paramCkMailMan, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkMailMan_smtpHost(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native void CkMailMan_put_SmtpHost(long paramLong, CkMailMan paramCkMailMan, String paramString);
/*       */   
/*       */   public static final native void CkMailMan_get_SmtpLoginDomain(long paramLong1, CkMailMan paramCkMailMan, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkMailMan_smtpLoginDomain(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native void CkMailMan_put_SmtpLoginDomain(long paramLong, CkMailMan paramCkMailMan, String paramString);
/*       */   
/*       */   public static final native void CkMailMan_get_SmtpPassword(long paramLong1, CkMailMan paramCkMailMan, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkMailMan_smtpPassword(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native void CkMailMan_put_SmtpPassword(long paramLong, CkMailMan paramCkMailMan, String paramString);
/*       */   
/*       */   public static final native boolean CkMailMan_get_SmtpPipelining(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native void CkMailMan_put_SmtpPipelining(long paramLong, CkMailMan paramCkMailMan, boolean paramBoolean);
/*       */   
/*       */   public static final native int CkMailMan_get_SmtpPort(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native void CkMailMan_put_SmtpPort(long paramLong, CkMailMan paramCkMailMan, int paramInt);
/*       */   
/*       */   public static final native void CkMailMan_get_SmtpSessionLog(long paramLong1, CkMailMan paramCkMailMan, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkMailMan_smtpSessionLog(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native boolean CkMailMan_get_SmtpSsl(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native void CkMailMan_put_SmtpSsl(long paramLong, CkMailMan paramCkMailMan, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkMailMan_get_SmtpSslServerCertVerified(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native void CkMailMan_get_SmtpUsername(long paramLong1, CkMailMan paramCkMailMan, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkMailMan_smtpUsername(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native void CkMailMan_put_SmtpUsername(long paramLong, CkMailMan paramCkMailMan, String paramString);
/*       */   
/*       */   public static final native void CkMailMan_get_SocksHostname(long paramLong1, CkMailMan paramCkMailMan, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkMailMan_socksHostname(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native void CkMailMan_put_SocksHostname(long paramLong, CkMailMan paramCkMailMan, String paramString);
/*       */   
/*       */   public static final native void CkMailMan_get_SocksPassword(long paramLong1, CkMailMan paramCkMailMan, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkMailMan_socksPassword(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native void CkMailMan_put_SocksPassword(long paramLong, CkMailMan paramCkMailMan, String paramString);
/*       */   
/*       */   public static final native int CkMailMan_get_SocksPort(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native void CkMailMan_put_SocksPort(long paramLong, CkMailMan paramCkMailMan, int paramInt);
/*       */   
/*       */   public static final native void CkMailMan_get_SocksUsername(long paramLong1, CkMailMan paramCkMailMan, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkMailMan_socksUsername(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native void CkMailMan_put_SocksUsername(long paramLong, CkMailMan paramCkMailMan, String paramString);
/*       */   
/*       */   public static final native int CkMailMan_get_SocksVersion(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native void CkMailMan_put_SocksVersion(long paramLong, CkMailMan paramCkMailMan, int paramInt);
/*       */   
/*       */   public static final native int CkMailMan_get_SoRcvBuf(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native void CkMailMan_put_SoRcvBuf(long paramLong, CkMailMan paramCkMailMan, int paramInt);
/*       */   
/*       */   public static final native int CkMailMan_get_SoSndBuf(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native void CkMailMan_put_SoSndBuf(long paramLong, CkMailMan paramCkMailMan, int paramInt);
/*       */   
/*       */   public static final native void CkMailMan_get_SslAllowedCiphers(long paramLong1, CkMailMan paramCkMailMan, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkMailMan_sslAllowedCiphers(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native void CkMailMan_put_SslAllowedCiphers(long paramLong, CkMailMan paramCkMailMan, String paramString);
/*       */   
/*       */   public static final native void CkMailMan_get_SslProtocol(long paramLong1, CkMailMan paramCkMailMan, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkMailMan_sslProtocol(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native void CkMailMan_put_SslProtocol(long paramLong, CkMailMan paramCkMailMan, String paramString);
/*       */   
/*       */   public static final native boolean CkMailMan_get_StartTLS(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native void CkMailMan_put_StartTLS(long paramLong, CkMailMan paramCkMailMan, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkMailMan_get_StartTLSifPossible(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native void CkMailMan_put_StartTLSifPossible(long paramLong, CkMailMan paramCkMailMan, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkMailMan_get_TlsCipherSuite(long paramLong1, CkMailMan paramCkMailMan, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkMailMan_tlsCipherSuite(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native void CkMailMan_get_TlsPinSet(long paramLong1, CkMailMan paramCkMailMan, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkMailMan_tlsPinSet(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native void CkMailMan_put_TlsPinSet(long paramLong, CkMailMan paramCkMailMan, String paramString);
/*       */   
/*       */   public static final native void CkMailMan_get_TlsVersion(long paramLong1, CkMailMan paramCkMailMan, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkMailMan_tlsVersion(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native boolean CkMailMan_get_UseApop(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native void CkMailMan_put_UseApop(long paramLong, CkMailMan paramCkMailMan, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkMailMan_get_VerboseLogging(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native void CkMailMan_put_VerboseLogging(long paramLong, CkMailMan paramCkMailMan, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkMailMan_get_Version(long paramLong1, CkMailMan paramCkMailMan, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkMailMan_version(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native boolean CkMailMan_AddPfxSourceData(long paramLong1, CkMailMan paramCkMailMan, long paramLong2, CkByteData paramCkByteData, String paramString);
/*       */   
/*       */   public static final native boolean CkMailMan_AddPfxSourceFile(long paramLong, CkMailMan paramCkMailMan, String paramString1, String paramString2);
/*       */   
/*       */   public static final native int CkMailMan_CheckMail(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native long CkMailMan_CheckMailAsync(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native void CkMailMan_ClearBadEmailAddresses(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native void CkMailMan_ClearPop3SessionLog(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native void CkMailMan_ClearSmtpSessionLog(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native boolean CkMailMan_CloseSmtpConnection(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native long CkMailMan_CloseSmtpConnectionAsync(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native long CkMailMan_CopyMail(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native long CkMailMan_CopyMailAsync(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native boolean CkMailMan_DeleteBundle(long paramLong1, CkMailMan paramCkMailMan, long paramLong2, CkEmailBundle paramCkEmailBundle);
/*       */   
/*       */   public static final native long CkMailMan_DeleteBundleAsync(long paramLong1, CkMailMan paramCkMailMan, long paramLong2, CkEmailBundle paramCkEmailBundle);
/*       */   
/*       */   public static final native boolean CkMailMan_DeleteByMsgnum(long paramLong, CkMailMan paramCkMailMan, int paramInt);
/*       */   
/*       */   public static final native long CkMailMan_DeleteByMsgnumAsync(long paramLong, CkMailMan paramCkMailMan, int paramInt);
/*       */   
/*       */   public static final native boolean CkMailMan_DeleteByUidl(long paramLong, CkMailMan paramCkMailMan, String paramString);
/*       */   
/*       */   public static final native long CkMailMan_DeleteByUidlAsync(long paramLong, CkMailMan paramCkMailMan, String paramString);
/*       */   
/*       */   public static final native boolean CkMailMan_DeleteEmail(long paramLong1, CkMailMan paramCkMailMan, long paramLong2, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native long CkMailMan_DeleteEmailAsync(long paramLong1, CkMailMan paramCkMailMan, long paramLong2, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native boolean CkMailMan_DeleteMultiple(long paramLong1, CkMailMan paramCkMailMan, long paramLong2, CkStringArray paramCkStringArray);
/*       */   
/*       */   public static final native long CkMailMan_DeleteMultipleAsync(long paramLong1, CkMailMan paramCkMailMan, long paramLong2, CkStringArray paramCkStringArray);
/*       */   
/*       */   public static final native long CkMailMan_FetchByMsgnum(long paramLong, CkMailMan paramCkMailMan, int paramInt);
/*       */   
/*       */   public static final native long CkMailMan_FetchByMsgnumAsync(long paramLong, CkMailMan paramCkMailMan, int paramInt);
/*       */   
/*       */   public static final native long CkMailMan_FetchEmail(long paramLong, CkMailMan paramCkMailMan, String paramString);
/*       */   
/*       */   public static final native long CkMailMan_FetchEmailAsync(long paramLong, CkMailMan paramCkMailMan, String paramString);
/*       */   
/*       */   public static final native boolean CkMailMan_FetchMime(long paramLong1, CkMailMan paramCkMailMan, String paramString, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native long CkMailMan_FetchMimeAsync(long paramLong, CkMailMan paramCkMailMan, String paramString);
/*       */   
/*       */   public static final native boolean CkMailMan_FetchMimeBd(long paramLong1, CkMailMan paramCkMailMan, String paramString, long paramLong2, CkBinData paramCkBinData);
/*       */   
/*       */   public static final native long CkMailMan_FetchMimeBdAsync(long paramLong1, CkMailMan paramCkMailMan, String paramString, long paramLong2, CkBinData paramCkBinData);
/*       */   
/*       */   public static final native boolean CkMailMan_FetchMimeByMsgnum(long paramLong1, CkMailMan paramCkMailMan, int paramInt, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native long CkMailMan_FetchMimeByMsgnumAsync(long paramLong, CkMailMan paramCkMailMan, int paramInt);
/*       */   
/*       */   public static final native long CkMailMan_FetchMultiple(long paramLong1, CkMailMan paramCkMailMan, long paramLong2, CkStringArray paramCkStringArray);
/*       */   
/*       */   public static final native long CkMailMan_FetchMultipleAsync(long paramLong1, CkMailMan paramCkMailMan, long paramLong2, CkStringArray paramCkStringArray);
/*       */   
/*       */   public static final native long CkMailMan_FetchMultipleHeaders(long paramLong1, CkMailMan paramCkMailMan, long paramLong2, CkStringArray paramCkStringArray, int paramInt);
/*       */   
/*       */   public static final native long CkMailMan_FetchMultipleHeadersAsync(long paramLong1, CkMailMan paramCkMailMan, long paramLong2, CkStringArray paramCkStringArray, int paramInt);
/*       */   
/*       */   public static final native long CkMailMan_FetchMultipleMime(long paramLong1, CkMailMan paramCkMailMan, long paramLong2, CkStringArray paramCkStringArray);
/*       */   
/*       */   public static final native long CkMailMan_FetchMultipleMimeAsync(long paramLong1, CkMailMan paramCkMailMan, long paramLong2, CkStringArray paramCkStringArray);
/*       */   
/*       */   public static final native long CkMailMan_FetchSingleHeader(long paramLong, CkMailMan paramCkMailMan, int paramInt1, int paramInt2);
/*       */   
/*       */   public static final native long CkMailMan_FetchSingleHeaderAsync(long paramLong, CkMailMan paramCkMailMan, int paramInt1, int paramInt2);
/*       */   
/*       */   public static final native long CkMailMan_FetchSingleHeaderByUidl(long paramLong, CkMailMan paramCkMailMan, int paramInt, String paramString);
/*       */   
/*       */   public static final native long CkMailMan_FetchSingleHeaderByUidlAsync(long paramLong, CkMailMan paramCkMailMan, int paramInt, String paramString);
/*       */   
/*       */   public static final native long CkMailMan_GetAllHeaders(long paramLong, CkMailMan paramCkMailMan, int paramInt);
/*       */   
/*       */   public static final native long CkMailMan_GetAllHeadersAsync(long paramLong, CkMailMan paramCkMailMan, int paramInt);
/*       */   
/*       */   public static final native long CkMailMan_GetBadEmailAddrs(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native long CkMailMan_GetFullEmail(long paramLong1, CkMailMan paramCkMailMan, long paramLong2, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native long CkMailMan_GetFullEmailAsync(long paramLong1, CkMailMan paramCkMailMan, long paramLong2, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native long CkMailMan_GetHeaders(long paramLong, CkMailMan paramCkMailMan, int paramInt1, int paramInt2, int paramInt3);
/*       */   
/*       */   public static final native long CkMailMan_GetHeadersAsync(long paramLong, CkMailMan paramCkMailMan, int paramInt1, int paramInt2, int paramInt3);
/*       */   
/*       */   public static final native int CkMailMan_GetMailboxCount(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native long CkMailMan_GetMailboxCountAsync(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native boolean CkMailMan_GetMailboxInfoXml(long paramLong1, CkMailMan paramCkMailMan, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkMailMan_getMailboxInfoXml(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native String CkMailMan_mailboxInfoXml(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native long CkMailMan_GetMailboxInfoXmlAsync(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native long CkMailMan_GetMailboxSize(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native long CkMailMan_GetMailboxSizeAsync(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native long CkMailMan_GetPop3SslServerCert(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native long CkMailMan_GetSentToEmailAddrs(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native int CkMailMan_GetSizeByUidl(long paramLong, CkMailMan paramCkMailMan, String paramString);
/*       */   
/*       */   public static final native long CkMailMan_GetSizeByUidlAsync(long paramLong, CkMailMan paramCkMailMan, String paramString);
/*       */   
/*       */   public static final native long CkMailMan_GetSmtpSslServerCert(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native long CkMailMan_GetUidls(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native long CkMailMan_GetUidlsAsync(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native boolean CkMailMan_IsSmtpDsnCapable(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native long CkMailMan_IsSmtpDsnCapableAsync(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native boolean CkMailMan_IsUnlocked(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native long CkMailMan_LastJsonData(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native long CkMailMan_LoadEml(long paramLong, CkMailMan paramCkMailMan, String paramString);
/*       */   
/*       */   public static final native long CkMailMan_LoadMbx(long paramLong, CkMailMan paramCkMailMan, String paramString);
/*       */   
/*       */   public static final native long CkMailMan_LoadMime(long paramLong, CkMailMan paramCkMailMan, String paramString);
/*       */   
/*       */   public static final native long CkMailMan_LoadQueuedEmail(long paramLong, CkMailMan paramCkMailMan, String paramString);
/*       */   
/*       */   public static final native long CkMailMan_LoadXmlEmail(long paramLong, CkMailMan paramCkMailMan, String paramString);
/*       */   
/*       */   public static final native long CkMailMan_LoadXmlEmailString(long paramLong, CkMailMan paramCkMailMan, String paramString);
/*       */   
/*       */   public static final native long CkMailMan_LoadXmlFile(long paramLong, CkMailMan paramCkMailMan, String paramString);
/*       */   
/*       */   public static final native long CkMailMan_LoadXmlString(long paramLong, CkMailMan paramCkMailMan, String paramString);
/*       */   
/*       */   public static final native boolean CkMailMan_MxLookup(long paramLong1, CkMailMan paramCkMailMan, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkMailMan_mxLookup(long paramLong, CkMailMan paramCkMailMan, String paramString);
/*       */   
/*       */   public static final native long CkMailMan_MxLookupAll(long paramLong, CkMailMan paramCkMailMan, String paramString);
/*       */   
/*       */   public static final native boolean CkMailMan_OpenSmtpConnection(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native long CkMailMan_OpenSmtpConnectionAsync(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native boolean CkMailMan_Pop3Authenticate(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native long CkMailMan_Pop3AuthenticateAsync(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native boolean CkMailMan_Pop3BeginSession(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native long CkMailMan_Pop3BeginSessionAsync(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native boolean CkMailMan_Pop3Connect(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native long CkMailMan_Pop3ConnectAsync(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native boolean CkMailMan_Pop3EndSession(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native long CkMailMan_Pop3EndSessionAsync(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native boolean CkMailMan_Pop3EndSessionNoQuit(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native long CkMailMan_Pop3EndSessionNoQuitAsync(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native boolean CkMailMan_Pop3Noop(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native long CkMailMan_Pop3NoopAsync(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native boolean CkMailMan_Pop3Reset(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native long CkMailMan_Pop3ResetAsync(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native boolean CkMailMan_Pop3SendRawCommand(long paramLong1, CkMailMan paramCkMailMan, String paramString1, String paramString2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkMailMan_pop3SendRawCommand(long paramLong, CkMailMan paramCkMailMan, String paramString1, String paramString2);
/*       */   
/*       */   public static final native long CkMailMan_Pop3SendRawCommandAsync(long paramLong, CkMailMan paramCkMailMan, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkMailMan_QuickSend(long paramLong, CkMailMan paramCkMailMan, String paramString1, String paramString2, String paramString3, String paramString4, String paramString5);
/*       */   
/*       */   public static final native long CkMailMan_QuickSendAsync(long paramLong, CkMailMan paramCkMailMan, String paramString1, String paramString2, String paramString3, String paramString4, String paramString5);
/*       */   
/*       */   public static final native boolean CkMailMan_RenderToMime(long paramLong1, CkMailMan paramCkMailMan, long paramLong2, CkEmail paramCkEmail, long paramLong3, CkString paramCkString);
/*       */   
/*       */   public static final native String CkMailMan_renderToMime(long paramLong1, CkMailMan paramCkMailMan, long paramLong2, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native boolean CkMailMan_RenderToMimeBd(long paramLong1, CkMailMan paramCkMailMan, long paramLong2, CkEmail paramCkEmail, long paramLong3, CkBinData paramCkBinData);
/*       */   
/*       */   public static final native boolean CkMailMan_RenderToMimeBytes(long paramLong1, CkMailMan paramCkMailMan, long paramLong2, CkEmail paramCkEmail, long paramLong3, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkMailMan_RenderToMimeSb(long paramLong1, CkMailMan paramCkMailMan, long paramLong2, CkEmail paramCkEmail, long paramLong3, CkStringBuilder paramCkStringBuilder);
/*       */   
/*       */   public static final native boolean CkMailMan_SaveLastError(long paramLong, CkMailMan paramCkMailMan, String paramString);
/*       */   
/*       */   public static final native boolean CkMailMan_SendBundle(long paramLong1, CkMailMan paramCkMailMan, long paramLong2, CkEmailBundle paramCkEmailBundle);
/*       */   
/*       */   public static final native long CkMailMan_SendBundleAsync(long paramLong1, CkMailMan paramCkMailMan, long paramLong2, CkEmailBundle paramCkEmailBundle);
/*       */   
/*       */   public static final native boolean CkMailMan_SendEmail(long paramLong1, CkMailMan paramCkMailMan, long paramLong2, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native long CkMailMan_SendEmailAsync(long paramLong1, CkMailMan paramCkMailMan, long paramLong2, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native boolean CkMailMan_SendMime(long paramLong, CkMailMan paramCkMailMan, String paramString1, String paramString2, String paramString3);
/*       */   
/*       */   public static final native long CkMailMan_SendMimeAsync(long paramLong, CkMailMan paramCkMailMan, String paramString1, String paramString2, String paramString3);
/*       */   
/*       */   public static final native boolean CkMailMan_SendMimeBd(long paramLong1, CkMailMan paramCkMailMan, String paramString1, String paramString2, long paramLong2, CkBinData paramCkBinData);
/*       */   
/*       */   public static final native long CkMailMan_SendMimeBdAsync(long paramLong1, CkMailMan paramCkMailMan, String paramString1, String paramString2, long paramLong2, CkBinData paramCkBinData);
/*       */   
/*       */   public static final native boolean CkMailMan_SendMimeBytes(long paramLong1, CkMailMan paramCkMailMan, String paramString1, String paramString2, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native long CkMailMan_SendMimeBytesAsync(long paramLong1, CkMailMan paramCkMailMan, String paramString1, String paramString2, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkMailMan_SendMimeBytesQ(long paramLong1, CkMailMan paramCkMailMan, String paramString1, String paramString2, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkMailMan_SendMimeQ(long paramLong, CkMailMan paramCkMailMan, String paramString1, String paramString2, String paramString3);
/*       */   
/*       */   public static final native boolean CkMailMan_SendMimeToList(long paramLong, CkMailMan paramCkMailMan, String paramString1, String paramString2, String paramString3);
/*       */   
/*       */   public static final native long CkMailMan_SendMimeToListAsync(long paramLong, CkMailMan paramCkMailMan, String paramString1, String paramString2, String paramString3);
/*       */   
/*       */   public static final native boolean CkMailMan_SendQ(long paramLong1, CkMailMan paramCkMailMan, long paramLong2, CkEmail paramCkEmail);
/*       */   
/*       */   public static final native boolean CkMailMan_SendQ2(long paramLong1, CkMailMan paramCkMailMan, long paramLong2, CkEmail paramCkEmail, String paramString);
/*       */   
/*       */   public static final native boolean CkMailMan_SendToDistributionList(long paramLong1, CkMailMan paramCkMailMan, long paramLong2, CkEmail paramCkEmail, long paramLong3, CkStringArray paramCkStringArray);
/*       */   
/*       */   public static final native long CkMailMan_SendToDistributionListAsync(long paramLong1, CkMailMan paramCkMailMan, long paramLong2, CkEmail paramCkEmail, long paramLong3, CkStringArray paramCkStringArray);
/*       */   
/*       */   public static final native boolean CkMailMan_SetCSP(long paramLong1, CkMailMan paramCkMailMan, long paramLong2, CkCsp paramCkCsp);
/*       */   
/*       */   public static final native boolean CkMailMan_SetDecryptCert(long paramLong1, CkMailMan paramCkMailMan, long paramLong2, CkCert paramCkCert);
/*       */   
/*       */   public static final native boolean CkMailMan_SetDecryptCert2(long paramLong1, CkMailMan paramCkMailMan, long paramLong2, CkCert paramCkCert, long paramLong3, CkPrivateKey paramCkPrivateKey);
/*       */   
/*       */   public static final native boolean CkMailMan_SetPassword(long paramLong1, CkMailMan paramCkMailMan, String paramString, long paramLong2, CkSecureString paramCkSecureString);
/*       */   
/*       */   public static final native boolean CkMailMan_SetSslClientCert(long paramLong1, CkMailMan paramCkMailMan, long paramLong2, CkCert paramCkCert);
/*       */   
/*       */   public static final native boolean CkMailMan_SetSslClientCertPem(long paramLong, CkMailMan paramCkMailMan, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkMailMan_SetSslClientCertPfx(long paramLong, CkMailMan paramCkMailMan, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkMailMan_SmtpAuthenticate(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native long CkMailMan_SmtpAuthenticateAsync(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native boolean CkMailMan_SmtpConnect(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native long CkMailMan_SmtpConnectAsync(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native boolean CkMailMan_SmtpNoop(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native long CkMailMan_SmtpNoopAsync(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native boolean CkMailMan_SmtpReset(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native long CkMailMan_SmtpResetAsync(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native boolean CkMailMan_SmtpSendRawCommand(long paramLong1, CkMailMan paramCkMailMan, String paramString1, String paramString2, boolean paramBoolean, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkMailMan_smtpSendRawCommand(long paramLong, CkMailMan paramCkMailMan, String paramString1, String paramString2, boolean paramBoolean);
/*       */   
/*       */   public static final native long CkMailMan_SmtpSendRawCommandAsync(long paramLong, CkMailMan paramCkMailMan, String paramString1, String paramString2, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkMailMan_SshAuthenticatePk(long paramLong1, CkMailMan paramCkMailMan, String paramString, long paramLong2, CkSshKey paramCkSshKey);
/*       */   
/*       */   public static final native long CkMailMan_SshAuthenticatePkAsync(long paramLong1, CkMailMan paramCkMailMan, String paramString, long paramLong2, CkSshKey paramCkSshKey);
/*       */   
/*       */   public static final native boolean CkMailMan_SshAuthenticatePw(long paramLong, CkMailMan paramCkMailMan, String paramString1, String paramString2);
/*       */   
/*       */   public static final native long CkMailMan_SshAuthenticatePwAsync(long paramLong, CkMailMan paramCkMailMan, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkMailMan_SshCloseTunnel(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native long CkMailMan_SshCloseTunnelAsync(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native boolean CkMailMan_SshOpenTunnel(long paramLong, CkMailMan paramCkMailMan, String paramString, int paramInt);
/*       */   
/*       */   public static final native long CkMailMan_SshOpenTunnelAsync(long paramLong, CkMailMan paramCkMailMan, String paramString, int paramInt);
/*       */   
/*       */   public static final native long CkMailMan_TransferMail(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native long CkMailMan_TransferMailAsync(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native long CkMailMan_TransferMultipleMime(long paramLong1, CkMailMan paramCkMailMan, long paramLong2, CkStringArray paramCkStringArray);
/*       */   
/*       */   public static final native long CkMailMan_TransferMultipleMimeAsync(long paramLong1, CkMailMan paramCkMailMan, long paramLong2, CkStringArray paramCkStringArray);
/*       */   
/*       */   public static final native boolean CkMailMan_UnlockComponent(long paramLong, CkMailMan paramCkMailMan, String paramString);
/*       */   
/*       */   public static final native boolean CkMailMan_UseCertVault(long paramLong1, CkMailMan paramCkMailMan, long paramLong2, CkXmlCertVault paramCkXmlCertVault);
/*       */   
/*       */   public static final native boolean CkMailMan_UseSsh(long paramLong1, CkMailMan paramCkMailMan, long paramLong2, CkSsh paramCkSsh);
/*       */   
/*       */   public static final native boolean CkMailMan_UseSshTunnel(long paramLong1, CkMailMan paramCkMailMan, long paramLong2, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native boolean CkMailMan_VerifyPopConnection(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native long CkMailMan_VerifyPopConnectionAsync(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native boolean CkMailMan_VerifyPopLogin(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native long CkMailMan_VerifyPopLoginAsync(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native boolean CkMailMan_VerifyRecips(long paramLong1, CkMailMan paramCkMailMan, long paramLong2, CkEmail paramCkEmail, long paramLong3, CkStringArray paramCkStringArray);
/*       */   
/*       */   public static final native long CkMailMan_VerifyRecipsAsync(long paramLong1, CkMailMan paramCkMailMan, long paramLong2, CkEmail paramCkEmail, long paramLong3, CkStringArray paramCkStringArray);
/*       */   
/*       */   public static final native boolean CkMailMan_VerifySmtpConnection(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native long CkMailMan_VerifySmtpConnectionAsync(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native boolean CkMailMan_VerifySmtpLogin(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native long CkMailMan_VerifySmtpLoginAsync(long paramLong, CkMailMan paramCkMailMan);
/*       */   
/*       */   public static final native long new_CkMessageSet();
/*       */   
/*       */   public static final native void delete_CkMessageSet(long paramLong);
/*       */   
/*       */   public static final native int CkMessageSet_get_Count(long paramLong, CkMessageSet paramCkMessageSet);
/*       */   
/*       */   public static final native boolean CkMessageSet_get_HasUids(long paramLong, CkMessageSet paramCkMessageSet);
/*       */   
/*       */   public static final native void CkMessageSet_put_HasUids(long paramLong, CkMessageSet paramCkMessageSet, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkMessageSet_get_LastMethodSuccess(long paramLong, CkMessageSet paramCkMessageSet);
/*       */   
/*       */   public static final native void CkMessageSet_put_LastMethodSuccess(long paramLong, CkMessageSet paramCkMessageSet, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkMessageSet_ContainsId(long paramLong, CkMessageSet paramCkMessageSet, int paramInt);
/*       */   
/*       */   public static final native boolean CkMessageSet_FromCompactString(long paramLong, CkMessageSet paramCkMessageSet, String paramString);
/*       */   
/*       */   public static final native int CkMessageSet_GetId(long paramLong, CkMessageSet paramCkMessageSet, int paramInt);
/*       */   
/*       */   public static final native void CkMessageSet_InsertId(long paramLong, CkMessageSet paramCkMessageSet, int paramInt);
/*       */   
/*       */   public static final native boolean CkMessageSet_LoadTaskResult(long paramLong1, CkMessageSet paramCkMessageSet, long paramLong2, CkTask paramCkTask);
/*       */   
/*       */   public static final native void CkMessageSet_RemoveId(long paramLong, CkMessageSet paramCkMessageSet, int paramInt);
/*       */   
/*       */   public static final native boolean CkMessageSet_ToCommaSeparatedStr(long paramLong1, CkMessageSet paramCkMessageSet, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkMessageSet_toCommaSeparatedStr(long paramLong, CkMessageSet paramCkMessageSet);
/*       */   
/*       */   public static final native boolean CkMessageSet_ToCompactString(long paramLong1, CkMessageSet paramCkMessageSet, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkMessageSet_toCompactString(long paramLong, CkMessageSet paramCkMessageSet);
/*       */   
/*       */   public static final native long new_CkMht();
/*       */   
/*       */   public static final native void delete_CkMht(long paramLong);
/*       */   
/*       */   public static final native void CkMht_LastErrorXml(long paramLong1, CkMht paramCkMht, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkMht_LastErrorHtml(long paramLong1, CkMht paramCkMht, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkMht_LastErrorText(long paramLong1, CkMht paramCkMht, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkMht_put_EventCallbackObject(long paramLong1, CkMht paramCkMht, long paramLong2, CkBaseProgress paramCkBaseProgress);
/*       */   
/*       */   public static final native boolean CkMht_get_AbortCurrent(long paramLong, CkMht paramCkMht);
/*       */   
/*       */   public static final native void CkMht_put_AbortCurrent(long paramLong, CkMht paramCkMht, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkMht_get_BaseUrl(long paramLong1, CkMht paramCkMht, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkMht_baseUrl(long paramLong, CkMht paramCkMht);
/*       */   
/*       */   public static final native void CkMht_put_BaseUrl(long paramLong, CkMht paramCkMht, String paramString);
/*       */   
/*       */   public static final native int CkMht_get_ConnectTimeout(long paramLong, CkMht paramCkMht);
/*       */   
/*       */   public static final native void CkMht_put_ConnectTimeout(long paramLong, CkMht paramCkMht, int paramInt);
/*       */   
/*       */   public static final native void CkMht_get_DebugHtmlAfter(long paramLong1, CkMht paramCkMht, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkMht_debugHtmlAfter(long paramLong, CkMht paramCkMht);
/*       */   
/*       */   public static final native void CkMht_put_DebugHtmlAfter(long paramLong, CkMht paramCkMht, String paramString);
/*       */   
/*       */   public static final native void CkMht_get_DebugHtmlBefore(long paramLong1, CkMht paramCkMht, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkMht_debugHtmlBefore(long paramLong, CkMht paramCkMht);
/*       */   
/*       */   public static final native void CkMht_put_DebugHtmlBefore(long paramLong, CkMht paramCkMht, String paramString);
/*       */   
/*       */   public static final native void CkMht_get_DebugLogFilePath(long paramLong1, CkMht paramCkMht, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkMht_debugLogFilePath(long paramLong, CkMht paramCkMht);
/*       */   
/*       */   public static final native void CkMht_put_DebugLogFilePath(long paramLong, CkMht paramCkMht, String paramString);
/*       */   
/*       */   public static final native boolean CkMht_get_DebugTagCleaning(long paramLong, CkMht paramCkMht);
/*       */   
/*       */   public static final native void CkMht_put_DebugTagCleaning(long paramLong, CkMht paramCkMht, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkMht_get_EmbedImages(long paramLong, CkMht paramCkMht);
/*       */   
/*       */   public static final native void CkMht_put_EmbedImages(long paramLong, CkMht paramCkMht, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkMht_get_EmbedLocalOnly(long paramLong, CkMht paramCkMht);
/*       */   
/*       */   public static final native void CkMht_put_EmbedLocalOnly(long paramLong, CkMht paramCkMht, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkMht_get_FetchFromCache(long paramLong, CkMht paramCkMht);
/*       */   
/*       */   public static final native void CkMht_put_FetchFromCache(long paramLong, CkMht paramCkMht, boolean paramBoolean);
/*       */   
/*       */   public static final native int CkMht_get_HeartbeatMs(long paramLong, CkMht paramCkMht);
/*       */   
/*       */   public static final native void CkMht_put_HeartbeatMs(long paramLong, CkMht paramCkMht, int paramInt);
/*       */   
/*       */   public static final native boolean CkMht_get_IgnoreMustRevalidate(long paramLong, CkMht paramCkMht);
/*       */   
/*       */   public static final native void CkMht_put_IgnoreMustRevalidate(long paramLong, CkMht paramCkMht, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkMht_get_IgnoreNoCache(long paramLong, CkMht paramCkMht);
/*       */   
/*       */   public static final native void CkMht_put_IgnoreNoCache(long paramLong, CkMht paramCkMht, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkMht_get_LastErrorHtml(long paramLong1, CkMht paramCkMht, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkMht_lastErrorHtml(long paramLong, CkMht paramCkMht);
/*       */   
/*       */   public static final native void CkMht_get_LastErrorText(long paramLong1, CkMht paramCkMht, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkMht_lastErrorText(long paramLong, CkMht paramCkMht);
/*       */   
/*       */   public static final native void CkMht_get_LastErrorXml(long paramLong1, CkMht paramCkMht, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkMht_lastErrorXml(long paramLong, CkMht paramCkMht);
/*       */   
/*       */   public static final native boolean CkMht_get_LastMethodSuccess(long paramLong, CkMht paramCkMht);
/*       */   
/*       */   public static final native void CkMht_put_LastMethodSuccess(long paramLong, CkMht paramCkMht, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkMht_get_NoScripts(long paramLong, CkMht paramCkMht);
/*       */   
/*       */   public static final native void CkMht_put_NoScripts(long paramLong, CkMht paramCkMht, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkMht_get_NtlmAuth(long paramLong, CkMht paramCkMht);
/*       */   
/*       */   public static final native void CkMht_put_NtlmAuth(long paramLong, CkMht paramCkMht, boolean paramBoolean);
/*       */   
/*       */   public static final native int CkMht_get_NumCacheLevels(long paramLong, CkMht paramCkMht);
/*       */   
/*       */   public static final native void CkMht_put_NumCacheLevels(long paramLong, CkMht paramCkMht, int paramInt);
/*       */   
/*       */   public static final native int CkMht_get_NumCacheRoots(long paramLong, CkMht paramCkMht);
/*       */   
/*       */   public static final native boolean CkMht_get_PreferIpv6(long paramLong, CkMht paramCkMht);
/*       */   
/*       */   public static final native void CkMht_put_PreferIpv6(long paramLong, CkMht paramCkMht, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkMht_get_PreferMHTScripts(long paramLong, CkMht paramCkMht);
/*       */   
/*       */   public static final native void CkMht_put_PreferMHTScripts(long paramLong, CkMht paramCkMht, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkMht_get_Proxy(long paramLong1, CkMht paramCkMht, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkMht_proxy(long paramLong, CkMht paramCkMht);
/*       */   
/*       */   public static final native void CkMht_put_Proxy(long paramLong, CkMht paramCkMht, String paramString);
/*       */   
/*       */   public static final native void CkMht_get_ProxyLogin(long paramLong1, CkMht paramCkMht, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkMht_proxyLogin(long paramLong, CkMht paramCkMht);
/*       */   
/*       */   public static final native void CkMht_put_ProxyLogin(long paramLong, CkMht paramCkMht, String paramString);
/*       */   
/*       */   public static final native void CkMht_get_ProxyPassword(long paramLong1, CkMht paramCkMht, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkMht_proxyPassword(long paramLong, CkMht paramCkMht);
/*       */   
/*       */   public static final native void CkMht_put_ProxyPassword(long paramLong, CkMht paramCkMht, String paramString);
/*       */   
/*       */   public static final native int CkMht_get_ReadTimeout(long paramLong, CkMht paramCkMht);
/*       */   
/*       */   public static final native void CkMht_put_ReadTimeout(long paramLong, CkMht paramCkMht, int paramInt);
/*       */   
/*       */   public static final native boolean CkMht_get_RequireSslCertVerify(long paramLong, CkMht paramCkMht);
/*       */   
/*       */   public static final native void CkMht_put_RequireSslCertVerify(long paramLong, CkMht paramCkMht, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkMht_get_SocksHostname(long paramLong1, CkMht paramCkMht, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkMht_socksHostname(long paramLong, CkMht paramCkMht);
/*       */   
/*       */   public static final native void CkMht_put_SocksHostname(long paramLong, CkMht paramCkMht, String paramString);
/*       */   
/*       */   public static final native void CkMht_get_SocksPassword(long paramLong1, CkMht paramCkMht, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkMht_socksPassword(long paramLong, CkMht paramCkMht);
/*       */   
/*       */   public static final native void CkMht_put_SocksPassword(long paramLong, CkMht paramCkMht, String paramString);
/*       */   
/*       */   public static final native int CkMht_get_SocksPort(long paramLong, CkMht paramCkMht);
/*       */   
/*       */   public static final native void CkMht_put_SocksPort(long paramLong, CkMht paramCkMht, int paramInt);
/*       */   
/*       */   public static final native void CkMht_get_SocksUsername(long paramLong1, CkMht paramCkMht, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkMht_socksUsername(long paramLong, CkMht paramCkMht);
/*       */   
/*       */   public static final native void CkMht_put_SocksUsername(long paramLong, CkMht paramCkMht, String paramString);
/*       */   
/*       */   public static final native int CkMht_get_SocksVersion(long paramLong, CkMht paramCkMht);
/*       */   
/*       */   public static final native void CkMht_put_SocksVersion(long paramLong, CkMht paramCkMht, int paramInt);
/*       */   
/*       */   public static final native boolean CkMht_get_UnpackDirect(long paramLong, CkMht paramCkMht);
/*       */   
/*       */   public static final native void CkMht_put_UnpackDirect(long paramLong, CkMht paramCkMht, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkMht_get_UnpackUseRelPaths(long paramLong, CkMht paramCkMht);
/*       */   
/*       */   public static final native void CkMht_put_UnpackUseRelPaths(long paramLong, CkMht paramCkMht, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkMht_get_UpdateCache(long paramLong, CkMht paramCkMht);
/*       */   
/*       */   public static final native void CkMht_put_UpdateCache(long paramLong, CkMht paramCkMht, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkMht_get_UseCids(long paramLong, CkMht paramCkMht);
/*       */   
/*       */   public static final native void CkMht_put_UseCids(long paramLong, CkMht paramCkMht, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkMht_get_UseFilename(long paramLong, CkMht paramCkMht);
/*       */   
/*       */   public static final native void CkMht_put_UseFilename(long paramLong, CkMht paramCkMht, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkMht_get_UseIEProxy(long paramLong, CkMht paramCkMht);
/*       */   
/*       */   public static final native void CkMht_put_UseIEProxy(long paramLong, CkMht paramCkMht, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkMht_get_UseInline(long paramLong, CkMht paramCkMht);
/*       */   
/*       */   public static final native void CkMht_put_UseInline(long paramLong, CkMht paramCkMht, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkMht_get_VerboseLogging(long paramLong, CkMht paramCkMht);
/*       */   
/*       */   public static final native void CkMht_put_VerboseLogging(long paramLong, CkMht paramCkMht, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkMht_get_Version(long paramLong1, CkMht paramCkMht, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkMht_version(long paramLong, CkMht paramCkMht);
/*       */   
/*       */   public static final native void CkMht_get_WebSiteLogin(long paramLong1, CkMht paramCkMht, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkMht_webSiteLogin(long paramLong, CkMht paramCkMht);
/*       */   
/*       */   public static final native void CkMht_put_WebSiteLogin(long paramLong, CkMht paramCkMht, String paramString);
/*       */   
/*       */   public static final native void CkMht_get_WebSiteLoginDomain(long paramLong1, CkMht paramCkMht, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkMht_webSiteLoginDomain(long paramLong, CkMht paramCkMht);
/*       */   
/*       */   public static final native void CkMht_put_WebSiteLoginDomain(long paramLong, CkMht paramCkMht, String paramString);
/*       */   
/*       */   public static final native void CkMht_get_WebSitePassword(long paramLong1, CkMht paramCkMht, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkMht_webSitePassword(long paramLong, CkMht paramCkMht);
/*       */   
/*       */   public static final native void CkMht_put_WebSitePassword(long paramLong, CkMht paramCkMht, String paramString);
/*       */   
/*       */   public static final native void CkMht_AddCacheRoot(long paramLong, CkMht paramCkMht, String paramString);
/*       */   
/*       */   public static final native void CkMht_AddCustomHeader(long paramLong, CkMht paramCkMht, String paramString1, String paramString2);
/*       */   
/*       */   public static final native void CkMht_AddExternalStyleSheet(long paramLong, CkMht paramCkMht, String paramString);
/*       */   
/*       */   public static final native void CkMht_ClearCustomHeaders(long paramLong, CkMht paramCkMht);
/*       */   
/*       */   public static final native void CkMht_ExcludeImagesMatching(long paramLong, CkMht paramCkMht, String paramString);
/*       */   
/*       */   public static final native boolean CkMht_GetAndSaveEML(long paramLong, CkMht paramCkMht, String paramString1, String paramString2);
/*       */   
/*       */   public static final native long CkMht_GetAndSaveEMLAsync(long paramLong, CkMht paramCkMht, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkMht_GetAndSaveMHT(long paramLong, CkMht paramCkMht, String paramString1, String paramString2);
/*       */   
/*       */   public static final native long CkMht_GetAndSaveMHTAsync(long paramLong, CkMht paramCkMht, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkMht_GetAndZipEML(long paramLong, CkMht paramCkMht, String paramString1, String paramString2, String paramString3);
/*       */   
/*       */   public static final native long CkMht_GetAndZipEMLAsync(long paramLong, CkMht paramCkMht, String paramString1, String paramString2, String paramString3);
/*       */   
/*       */   public static final native boolean CkMht_GetAndZipMHT(long paramLong, CkMht paramCkMht, String paramString1, String paramString2, String paramString3);
/*       */   
/*       */   public static final native long CkMht_GetAndZipMHTAsync(long paramLong, CkMht paramCkMht, String paramString1, String paramString2, String paramString3);
/*       */   
/*       */   public static final native boolean CkMht_GetCacheRoot(long paramLong1, CkMht paramCkMht, int paramInt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkMht_getCacheRoot(long paramLong, CkMht paramCkMht, int paramInt);
/*       */   
/*       */   public static final native String CkMht_cacheRoot(long paramLong, CkMht paramCkMht, int paramInt);
/*       */   
/*       */   public static final native boolean CkMht_GetEML(long paramLong1, CkMht paramCkMht, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkMht_getEML(long paramLong, CkMht paramCkMht, String paramString);
/*       */   
/*       */   public static final native String CkMht_eML(long paramLong, CkMht paramCkMht, String paramString);
/*       */   
/*       */   public static final native long CkMht_GetEMLAsync(long paramLong, CkMht paramCkMht, String paramString);
/*       */   
/*       */   public static final native boolean CkMht_GetMHT(long paramLong1, CkMht paramCkMht, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkMht_getMHT(long paramLong, CkMht paramCkMht, String paramString);
/*       */   
/*       */   public static final native String CkMht_mHT(long paramLong, CkMht paramCkMht, String paramString);
/*       */   
/*       */   public static final native long CkMht_GetMHTAsync(long paramLong, CkMht paramCkMht, String paramString);
/*       */   
/*       */   public static final native boolean CkMht_HtmlToEML(long paramLong1, CkMht paramCkMht, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkMht_htmlToEML(long paramLong, CkMht paramCkMht, String paramString);
/*       */   
/*       */   public static final native long CkMht_HtmlToEMLAsync(long paramLong, CkMht paramCkMht, String paramString);
/*       */   
/*       */   public static final native boolean CkMht_HtmlToEMLFile(long paramLong, CkMht paramCkMht, String paramString1, String paramString2);
/*       */   
/*       */   public static final native long CkMht_HtmlToEMLFileAsync(long paramLong, CkMht paramCkMht, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkMht_HtmlToMHT(long paramLong1, CkMht paramCkMht, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkMht_htmlToMHT(long paramLong, CkMht paramCkMht, String paramString);
/*       */   
/*       */   public static final native long CkMht_HtmlToMHTAsync(long paramLong, CkMht paramCkMht, String paramString);
/*       */   
/*       */   public static final native boolean CkMht_HtmlToMHTFile(long paramLong, CkMht paramCkMht, String paramString1, String paramString2);
/*       */   
/*       */   public static final native long CkMht_HtmlToMHTFileAsync(long paramLong, CkMht paramCkMht, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkMht_IsUnlocked(long paramLong, CkMht paramCkMht);
/*       */   
/*       */   public static final native void CkMht_RemoveCustomHeader(long paramLong, CkMht paramCkMht, String paramString);
/*       */   
/*       */   public static final native void CkMht_RestoreDefaults(long paramLong, CkMht paramCkMht);
/*       */   
/*       */   public static final native boolean CkMht_SaveLastError(long paramLong, CkMht paramCkMht, String paramString);
/*       */   
/*       */   public static final native boolean CkMht_UnlockComponent(long paramLong, CkMht paramCkMht, String paramString);
/*       */   
/*       */   public static final native boolean CkMht_UnpackMHT(long paramLong, CkMht paramCkMht, String paramString1, String paramString2, String paramString3, String paramString4);
/*       */   
/*       */   public static final native boolean CkMht_UnpackMHTString(long paramLong, CkMht paramCkMht, String paramString1, String paramString2, String paramString3, String paramString4);
/*       */   
/*       */   public static final native long new_CkMime();
/*       */   
/*       */   public static final native void delete_CkMime(long paramLong);
/*       */   
/*       */   public static final native void CkMime_LastErrorXml(long paramLong1, CkMime paramCkMime, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkMime_LastErrorHtml(long paramLong1, CkMime paramCkMime, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkMime_LastErrorText(long paramLong1, CkMime paramCkMime, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkMime_get_Boundary(long paramLong1, CkMime paramCkMime, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkMime_boundary(long paramLong, CkMime paramCkMime);
/*       */   
/*       */   public static final native void CkMime_put_Boundary(long paramLong, CkMime paramCkMime, String paramString);
/*       */   
/*       */   public static final native void CkMime_get_Charset(long paramLong1, CkMime paramCkMime, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkMime_charset(long paramLong, CkMime paramCkMime);
/*       */   
/*       */   public static final native void CkMime_put_Charset(long paramLong, CkMime paramCkMime, String paramString);
/*       */   
/*       */   public static final native void CkMime_get_ContentType(long paramLong1, CkMime paramCkMime, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkMime_contentType(long paramLong, CkMime paramCkMime);
/*       */   
/*       */   public static final native void CkMime_put_ContentType(long paramLong, CkMime paramCkMime, String paramString);
/*       */   
/*       */   public static final native void CkMime_get_CurrentDateTime(long paramLong1, CkMime paramCkMime, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkMime_currentDateTime(long paramLong, CkMime paramCkMime);
/*       */   
/*       */   public static final native void CkMime_get_DebugLogFilePath(long paramLong1, CkMime paramCkMime, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkMime_debugLogFilePath(long paramLong, CkMime paramCkMime);
/*       */   
/*       */   public static final native void CkMime_put_DebugLogFilePath(long paramLong, CkMime paramCkMime, String paramString);
/*       */   
/*       */   public static final native void CkMime_get_Disposition(long paramLong1, CkMime paramCkMime, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkMime_disposition(long paramLong, CkMime paramCkMime);
/*       */   
/*       */   public static final native void CkMime_put_Disposition(long paramLong, CkMime paramCkMime, String paramString);
/*       */   
/*       */   public static final native void CkMime_get_Encoding(long paramLong1, CkMime paramCkMime, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkMime_encoding(long paramLong, CkMime paramCkMime);
/*       */   
/*       */   public static final native void CkMime_put_Encoding(long paramLong, CkMime paramCkMime, String paramString);
/*       */   
/*       */   public static final native void CkMime_get_Filename(long paramLong1, CkMime paramCkMime, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkMime_filename(long paramLong, CkMime paramCkMime);
/*       */   
/*       */   public static final native void CkMime_put_Filename(long paramLong, CkMime paramCkMime, String paramString);
/*       */   
/*       */   public static final native void CkMime_get_LastErrorHtml(long paramLong1, CkMime paramCkMime, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkMime_lastErrorHtml(long paramLong, CkMime paramCkMime);
/*       */   
/*       */   public static final native void CkMime_get_LastErrorText(long paramLong1, CkMime paramCkMime, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkMime_lastErrorText(long paramLong, CkMime paramCkMime);
/*       */   
/*       */   public static final native void CkMime_get_LastErrorXml(long paramLong1, CkMime paramCkMime, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkMime_lastErrorXml(long paramLong, CkMime paramCkMime);
/*       */   
/*       */   public static final native boolean CkMime_get_LastMethodSuccess(long paramLong, CkMime paramCkMime);
/*       */   
/*       */   public static final native void CkMime_put_LastMethodSuccess(long paramLong, CkMime paramCkMime, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkMime_get_Micalg(long paramLong1, CkMime paramCkMime, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkMime_micalg(long paramLong, CkMime paramCkMime);
/*       */   
/*       */   public static final native void CkMime_put_Micalg(long paramLong, CkMime paramCkMime, String paramString);
/*       */   
/*       */   public static final native void CkMime_get_Name(long paramLong1, CkMime paramCkMime, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkMime_name(long paramLong, CkMime paramCkMime);
/*       */   
/*       */   public static final native void CkMime_put_Name(long paramLong, CkMime paramCkMime, String paramString);
/*       */   
/*       */   public static final native int CkMime_get_NumEncryptCerts(long paramLong, CkMime paramCkMime);
/*       */   
/*       */   public static final native int CkMime_get_NumHeaderFields(long paramLong, CkMime paramCkMime);
/*       */   
/*       */   public static final native int CkMime_get_NumParts(long paramLong, CkMime paramCkMime);
/*       */   
/*       */   public static final native int CkMime_get_NumSignerCerts(long paramLong, CkMime paramCkMime);
/*       */   
/*       */   public static final native void CkMime_get_OaepHash(long paramLong1, CkMime paramCkMime, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkMime_oaepHash(long paramLong, CkMime paramCkMime);
/*       */   
/*       */   public static final native void CkMime_put_OaepHash(long paramLong, CkMime paramCkMime, String paramString);
/*       */   
/*       */   public static final native void CkMime_get_OaepMgfHash(long paramLong1, CkMime paramCkMime, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkMime_oaepMgfHash(long paramLong, CkMime paramCkMime);
/*       */   
/*       */   public static final native void CkMime_put_OaepMgfHash(long paramLong, CkMime paramCkMime, String paramString);
/*       */   
/*       */   public static final native boolean CkMime_get_OaepPadding(long paramLong, CkMime paramCkMime);
/*       */   
/*       */   public static final native void CkMime_put_OaepPadding(long paramLong, CkMime paramCkMime, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkMime_get_Pkcs7CryptAlg(long paramLong1, CkMime paramCkMime, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkMime_pkcs7CryptAlg(long paramLong, CkMime paramCkMime);
/*       */   
/*       */   public static final native void CkMime_put_Pkcs7CryptAlg(long paramLong, CkMime paramCkMime, String paramString);
/*       */   
/*       */   public static final native int CkMime_get_Pkcs7KeyLength(long paramLong, CkMime paramCkMime);
/*       */   
/*       */   public static final native void CkMime_put_Pkcs7KeyLength(long paramLong, CkMime paramCkMime, int paramInt);
/*       */   
/*       */   public static final native void CkMime_get_Protocol(long paramLong1, CkMime paramCkMime, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkMime_protocol(long paramLong, CkMime paramCkMime);
/*       */   
/*       */   public static final native void CkMime_put_Protocol(long paramLong, CkMime paramCkMime, String paramString);
/*       */   
/*       */   public static final native void CkMime_get_SigningAlg(long paramLong1, CkMime paramCkMime, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkMime_signingAlg(long paramLong, CkMime paramCkMime);
/*       */   
/*       */   public static final native void CkMime_put_SigningAlg(long paramLong, CkMime paramCkMime, String paramString);
/*       */   
/*       */   public static final native void CkMime_get_SigningHashAlg(long paramLong1, CkMime paramCkMime, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkMime_signingHashAlg(long paramLong, CkMime paramCkMime);
/*       */   
/*       */   public static final native void CkMime_put_SigningHashAlg(long paramLong, CkMime paramCkMime, String paramString);
/*       */   
/*       */   public static final native boolean CkMime_get_UnwrapExtras(long paramLong, CkMime paramCkMime);
/*       */   
/*       */   public static final native void CkMime_put_UnwrapExtras(long paramLong, CkMime paramCkMime, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkMime_get_UseMmDescription(long paramLong, CkMime paramCkMime);
/*       */   
/*       */   public static final native void CkMime_put_UseMmDescription(long paramLong, CkMime paramCkMime, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkMime_get_UseXPkcs7(long paramLong, CkMime paramCkMime);
/*       */   
/*       */   public static final native void CkMime_put_UseXPkcs7(long paramLong, CkMime paramCkMime, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkMime_get_VerboseLogging(long paramLong, CkMime paramCkMime);
/*       */   
/*       */   public static final native void CkMime_put_VerboseLogging(long paramLong, CkMime paramCkMime, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkMime_get_Version(long paramLong1, CkMime paramCkMime, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkMime_version(long paramLong, CkMime paramCkMime);
/*       */   
/*       */   public static final native void CkMime_AddContentLength(long paramLong, CkMime paramCkMime);
/*       */   
/*       */   public static final native boolean CkMime_AddDecryptCert(long paramLong1, CkMime paramCkMime, long paramLong2, CkCert paramCkCert);
/*       */   
/*       */   public static final native boolean CkMime_AddDetachedSignature(long paramLong1, CkMime paramCkMime, long paramLong2, CkCert paramCkCert);
/*       */   
/*       */   public static final native boolean CkMime_AddDetachedSignature2(long paramLong1, CkMime paramCkMime, long paramLong2, CkCert paramCkCert, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkMime_AddDetachedSignaturePk(long paramLong1, CkMime paramCkMime, long paramLong2, CkCert paramCkCert, long paramLong3, CkPrivateKey paramCkPrivateKey);
/*       */   
/*       */   public static final native boolean CkMime_AddDetachedSignaturePk2(long paramLong1, CkMime paramCkMime, long paramLong2, CkCert paramCkCert, long paramLong3, CkPrivateKey paramCkPrivateKey, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkMime_AddEncryptCert(long paramLong1, CkMime paramCkMime, long paramLong2, CkCert paramCkCert);
/*       */   
/*       */   public static final native boolean CkMime_AddHeaderField(long paramLong, CkMime paramCkMime, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkMime_AddPfxSourceData(long paramLong1, CkMime paramCkMime, long paramLong2, CkByteData paramCkByteData, String paramString);
/*       */   
/*       */   public static final native boolean CkMime_AddPfxSourceFile(long paramLong, CkMime paramCkMime, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkMime_AppendPart(long paramLong1, CkMime paramCkMime1, long paramLong2, CkMime paramCkMime2);
/*       */   
/*       */   public static final native boolean CkMime_AppendPartFromFile(long paramLong, CkMime paramCkMime, String paramString);
/*       */   
/*       */   public static final native boolean CkMime_AsnBodyToXml(long paramLong1, CkMime paramCkMime, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkMime_asnBodyToXml(long paramLong, CkMime paramCkMime);
/*       */   
/*       */   public static final native void CkMime_ClearEncryptCerts(long paramLong, CkMime paramCkMime);
/*       */   
/*       */   public static final native boolean CkMime_ContainsEncryptedParts(long paramLong, CkMime paramCkMime);
/*       */   
/*       */   public static final native boolean CkMime_ContainsSignedParts(long paramLong, CkMime paramCkMime);
/*       */   
/*       */   public static final native void CkMime_Convert8Bit(long paramLong, CkMime paramCkMime);
/*       */   
/*       */   public static final native boolean CkMime_ConvertToMultipartAlt(long paramLong, CkMime paramCkMime);
/*       */   
/*       */   public static final native boolean CkMime_ConvertToMultipartMixed(long paramLong, CkMime paramCkMime);
/*       */   
/*       */   public static final native boolean CkMime_ConvertToSigned(long paramLong1, CkMime paramCkMime, long paramLong2, CkCert paramCkCert);
/*       */   
/*       */   public static final native boolean CkMime_ConvertToSignedPk(long paramLong1, CkMime paramCkMime, long paramLong2, CkCert paramCkCert, long paramLong3, CkPrivateKey paramCkPrivateKey);
/*       */   
/*       */   public static final native boolean CkMime_Decrypt(long paramLong, CkMime paramCkMime);
/*       */   
/*       */   public static final native boolean CkMime_Decrypt2(long paramLong1, CkMime paramCkMime, long paramLong2, CkCert paramCkCert, long paramLong3, CkPrivateKey paramCkPrivateKey);
/*       */   
/*       */   public static final native boolean CkMime_DecryptUsingCert(long paramLong1, CkMime paramCkMime, long paramLong2, CkCert paramCkCert);
/*       */   
/*       */   public static final native boolean CkMime_DecryptUsingPfxData(long paramLong1, CkMime paramCkMime, long paramLong2, CkByteData paramCkByteData, String paramString);
/*       */   
/*       */   public static final native boolean CkMime_DecryptUsingPfxFile(long paramLong, CkMime paramCkMime, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkMime_Encrypt(long paramLong1, CkMime paramCkMime, long paramLong2, CkCert paramCkCert);
/*       */   
/*       */   public static final native boolean CkMime_EncryptN(long paramLong, CkMime paramCkMime);
/*       */   
/*       */   public static final native long CkMime_ExtractPartsToFiles(long paramLong, CkMime paramCkMime, String paramString);
/*       */   
/*       */   public static final native long CkMime_FindIssuer(long paramLong1, CkMime paramCkMime, long paramLong2, CkCert paramCkCert);
/*       */   
/*       */   public static final native boolean CkMime_GetBodyBd(long paramLong1, CkMime paramCkMime, long paramLong2, CkBinData paramCkBinData);
/*       */   
/*       */   public static final native boolean CkMime_GetBodyBinary(long paramLong1, CkMime paramCkMime, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkMime_GetBodyDecoded(long paramLong1, CkMime paramCkMime, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkMime_getBodyDecoded(long paramLong, CkMime paramCkMime);
/*       */   
/*       */   public static final native String CkMime_bodyDecoded(long paramLong, CkMime paramCkMime);
/*       */   
/*       */   public static final native boolean CkMime_GetBodyEncoded(long paramLong1, CkMime paramCkMime, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkMime_getBodyEncoded(long paramLong, CkMime paramCkMime);
/*       */   
/*       */   public static final native String CkMime_bodyEncoded(long paramLong, CkMime paramCkMime);
/*       */   
/*       */   public static final native long CkMime_GetEncryptCert(long paramLong, CkMime paramCkMime, int paramInt);
/*       */   
/*       */   public static final native boolean CkMime_GetEntireBody(long paramLong1, CkMime paramCkMime, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkMime_getEntireBody(long paramLong, CkMime paramCkMime);
/*       */   
/*       */   public static final native String CkMime_entireBody(long paramLong, CkMime paramCkMime);
/*       */   
/*       */   public static final native boolean CkMime_GetEntireHead(long paramLong1, CkMime paramCkMime, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkMime_getEntireHead(long paramLong, CkMime paramCkMime);
/*       */   
/*       */   public static final native String CkMime_entireHead(long paramLong, CkMime paramCkMime);
/*       */   
/*       */   public static final native boolean CkMime_GetHeaderField(long paramLong1, CkMime paramCkMime, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkMime_getHeaderField(long paramLong, CkMime paramCkMime, String paramString);
/*       */   
/*       */   public static final native String CkMime_headerField(long paramLong, CkMime paramCkMime, String paramString);
/*       */   
/*       */   public static final native boolean CkMime_GetHeaderFieldAttribute(long paramLong1, CkMime paramCkMime, String paramString1, String paramString2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkMime_getHeaderFieldAttribute(long paramLong, CkMime paramCkMime, String paramString1, String paramString2);
/*       */   
/*       */   public static final native String CkMime_headerFieldAttribute(long paramLong, CkMime paramCkMime, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkMime_GetHeaderFieldName(long paramLong1, CkMime paramCkMime, int paramInt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkMime_getHeaderFieldName(long paramLong, CkMime paramCkMime, int paramInt);
/*       */   
/*       */   public static final native String CkMime_headerFieldName(long paramLong, CkMime paramCkMime, int paramInt);
/*       */   
/*       */   public static final native boolean CkMime_GetHeaderFieldValue(long paramLong1, CkMime paramCkMime, int paramInt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkMime_getHeaderFieldValue(long paramLong, CkMime paramCkMime, int paramInt);
/*       */   
/*       */   public static final native String CkMime_headerFieldValue(long paramLong, CkMime paramCkMime, int paramInt);
/*       */   
/*       */   public static final native boolean CkMime_GetMime(long paramLong1, CkMime paramCkMime, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkMime_getMime(long paramLong, CkMime paramCkMime);
/*       */   
/*       */   public static final native String CkMime_mime(long paramLong, CkMime paramCkMime);
/*       */   
/*       */   public static final native boolean CkMime_GetMimeBd(long paramLong1, CkMime paramCkMime, long paramLong2, CkBinData paramCkBinData);
/*       */   
/*       */   public static final native boolean CkMime_GetMimeBytes(long paramLong1, CkMime paramCkMime, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkMime_GetMimeSb(long paramLong1, CkMime paramCkMime, long paramLong2, CkStringBuilder paramCkStringBuilder);
/*       */   
/*       */   public static final native long CkMime_GetPart(long paramLong, CkMime paramCkMime, int paramInt);
/*       */   
/*       */   public static final native boolean CkMime_GetSignatureSigningTime(long paramLong1, CkMime paramCkMime, int paramInt, long paramLong2, SYSTEMTIME paramSYSTEMTIME);
/*       */   
/*       */   public static final native boolean CkMime_GetSignatureSigningTimeStr(long paramLong1, CkMime paramCkMime, int paramInt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkMime_getSignatureSigningTimeStr(long paramLong, CkMime paramCkMime, int paramInt);
/*       */   
/*       */   public static final native String CkMime_signatureSigningTimeStr(long paramLong, CkMime paramCkMime, int paramInt);
/*       */   
/*       */   public static final native long CkMime_GetSignerCert(long paramLong, CkMime paramCkMime, int paramInt);
/*       */   
/*       */   public static final native long CkMime_GetSignerCertChain(long paramLong, CkMime paramCkMime, int paramInt);
/*       */   
/*       */   public static final native boolean CkMime_GetStructure(long paramLong1, CkMime paramCkMime, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkMime_getStructure(long paramLong, CkMime paramCkMime, String paramString);
/*       */   
/*       */   public static final native String CkMime_structure(long paramLong, CkMime paramCkMime, String paramString);
/*       */   
/*       */   public static final native boolean CkMime_GetXml(long paramLong1, CkMime paramCkMime, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkMime_getXml(long paramLong, CkMime paramCkMime);
/*       */   
/*       */   public static final native String CkMime_xml(long paramLong, CkMime paramCkMime);
/*       */   
/*       */   public static final native boolean CkMime_HasSignatureSigningTime(long paramLong, CkMime paramCkMime, int paramInt);
/*       */   
/*       */   public static final native boolean CkMime_IsApplicationData(long paramLong, CkMime paramCkMime);
/*       */   
/*       */   public static final native boolean CkMime_IsAttachment(long paramLong, CkMime paramCkMime);
/*       */   
/*       */   public static final native boolean CkMime_IsAudio(long paramLong, CkMime paramCkMime);
/*       */   
/*       */   public static final native boolean CkMime_IsEncrypted(long paramLong, CkMime paramCkMime);
/*       */   
/*       */   public static final native boolean CkMime_IsHtml(long paramLong, CkMime paramCkMime);
/*       */   
/*       */   public static final native boolean CkMime_IsImage(long paramLong, CkMime paramCkMime);
/*       */   
/*       */   public static final native boolean CkMime_IsMultipart(long paramLong, CkMime paramCkMime);
/*       */   
/*       */   public static final native boolean CkMime_IsMultipartAlternative(long paramLong, CkMime paramCkMime);
/*       */   
/*       */   public static final native boolean CkMime_IsMultipartMixed(long paramLong, CkMime paramCkMime);
/*       */   
/*       */   public static final native boolean CkMime_IsMultipartRelated(long paramLong, CkMime paramCkMime);
/*       */   
/*       */   public static final native boolean CkMime_IsPlainText(long paramLong, CkMime paramCkMime);
/*       */   
/*       */   public static final native boolean CkMime_IsSigned(long paramLong, CkMime paramCkMime);
/*       */   
/*       */   public static final native boolean CkMime_IsText(long paramLong, CkMime paramCkMime);
/*       */   
/*       */   public static final native boolean CkMime_IsUnlocked(long paramLong, CkMime paramCkMime);
/*       */   
/*       */   public static final native boolean CkMime_IsVideo(long paramLong, CkMime paramCkMime);
/*       */   
/*       */   public static final native boolean CkMime_IsXml(long paramLong, CkMime paramCkMime);
/*       */   
/*       */   public static final native long CkMime_LastJsonData(long paramLong, CkMime paramCkMime);
/*       */   
/*       */   public static final native boolean CkMime_LoadMime(long paramLong, CkMime paramCkMime, String paramString);
/*       */   
/*       */   public static final native boolean CkMime_LoadMimeBd(long paramLong1, CkMime paramCkMime, long paramLong2, CkBinData paramCkBinData);
/*       */   
/*       */   public static final native boolean CkMime_LoadMimeBytes(long paramLong1, CkMime paramCkMime, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkMime_LoadMimeFile(long paramLong, CkMime paramCkMime, String paramString);
/*       */   
/*       */   public static final native boolean CkMime_LoadMimeSb(long paramLong1, CkMime paramCkMime, long paramLong2, CkStringBuilder paramCkStringBuilder);
/*       */   
/*       */   public static final native boolean CkMime_LoadXml(long paramLong, CkMime paramCkMime, String paramString);
/*       */   
/*       */   public static final native boolean CkMime_LoadXmlFile(long paramLong, CkMime paramCkMime, String paramString);
/*       */   
/*       */   public static final native boolean CkMime_NewMessageRfc822(long paramLong1, CkMime paramCkMime1, long paramLong2, CkMime paramCkMime2);
/*       */   
/*       */   public static final native boolean CkMime_NewMultipartAlternative(long paramLong, CkMime paramCkMime);
/*       */   
/*       */   public static final native boolean CkMime_NewMultipartMixed(long paramLong, CkMime paramCkMime);
/*       */   
/*       */   public static final native boolean CkMime_NewMultipartRelated(long paramLong, CkMime paramCkMime);
/*       */   
/*       */   public static final native void CkMime_RemoveHeaderField(long paramLong, CkMime paramCkMime, String paramString, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkMime_RemovePart(long paramLong, CkMime paramCkMime, int paramInt);
/*       */   
/*       */   public static final native boolean CkMime_SaveBody(long paramLong, CkMime paramCkMime, String paramString);
/*       */   
/*       */   public static final native boolean CkMime_SaveLastError(long paramLong, CkMime paramCkMime, String paramString);
/*       */   
/*       */   public static final native boolean CkMime_SaveMime(long paramLong, CkMime paramCkMime, String paramString);
/*       */   
/*       */   public static final native boolean CkMime_SaveXml(long paramLong, CkMime paramCkMime, String paramString);
/*       */   
/*       */   public static final native void CkMime_SetBody(long paramLong, CkMime paramCkMime, String paramString);
/*       */   
/*       */   public static final native boolean CkMime_SetBodyFromBinary(long paramLong1, CkMime paramCkMime, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkMime_SetBodyFromEncoded(long paramLong, CkMime paramCkMime, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkMime_SetBodyFromFile(long paramLong, CkMime paramCkMime, String paramString);
/*       */   
/*       */   public static final native boolean CkMime_SetBodyFromHtml(long paramLong, CkMime paramCkMime, String paramString);
/*       */   
/*       */   public static final native boolean CkMime_SetBodyFromPlainText(long paramLong, CkMime paramCkMime, String paramString);
/*       */   
/*       */   public static final native boolean CkMime_SetBodyFromXml(long paramLong, CkMime paramCkMime, String paramString);
/*       */   
/*       */   public static final native boolean CkMime_SetCSP(long paramLong1, CkMime paramCkMime, long paramLong2, CkCsp paramCkCsp);
/*       */   
/*       */   public static final native boolean CkMime_SetHeaderField(long paramLong, CkMime paramCkMime, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkMime_SetVerifyCert(long paramLong1, CkMime paramCkMime, long paramLong2, CkCert paramCkCert);
/*       */   
/*       */   public static final native boolean CkMime_UnlockComponent(long paramLong, CkMime paramCkMime, String paramString);
/*       */   
/*       */   public static final native boolean CkMime_UnwrapSecurity(long paramLong, CkMime paramCkMime);
/*       */   
/*       */   public static final native void CkMime_UrlEncodeBody(long paramLong, CkMime paramCkMime, String paramString);
/*       */   
/*       */   public static final native boolean CkMime_UseCertVault(long paramLong1, CkMime paramCkMime, long paramLong2, CkXmlCertVault paramCkXmlCertVault);
/*       */   
/*       */   public static final native boolean CkMime_Verify(long paramLong, CkMime paramCkMime);
/*       */   
/*       */   public static final native long new_CkNtlm();
/*       */   
/*       */   public static final native void delete_CkNtlm(long paramLong);
/*       */   
/*       */   public static final native void CkNtlm_LastErrorXml(long paramLong1, CkNtlm paramCkNtlm, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkNtlm_LastErrorHtml(long paramLong1, CkNtlm paramCkNtlm, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkNtlm_LastErrorText(long paramLong1, CkNtlm paramCkNtlm, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkNtlm_get_ClientChallenge(long paramLong1, CkNtlm paramCkNtlm, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkNtlm_clientChallenge(long paramLong, CkNtlm paramCkNtlm);
/*       */   
/*       */   public static final native void CkNtlm_put_ClientChallenge(long paramLong, CkNtlm paramCkNtlm, String paramString);
/*       */   
/*       */   public static final native void CkNtlm_get_DebugLogFilePath(long paramLong1, CkNtlm paramCkNtlm, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkNtlm_debugLogFilePath(long paramLong, CkNtlm paramCkNtlm);
/*       */   
/*       */   public static final native void CkNtlm_put_DebugLogFilePath(long paramLong, CkNtlm paramCkNtlm, String paramString);
/*       */   
/*       */   public static final native void CkNtlm_get_DnsComputerName(long paramLong1, CkNtlm paramCkNtlm, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkNtlm_dnsComputerName(long paramLong, CkNtlm paramCkNtlm);
/*       */   
/*       */   public static final native void CkNtlm_put_DnsComputerName(long paramLong, CkNtlm paramCkNtlm, String paramString);
/*       */   
/*       */   public static final native void CkNtlm_get_DnsDomainName(long paramLong1, CkNtlm paramCkNtlm, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkNtlm_dnsDomainName(long paramLong, CkNtlm paramCkNtlm);
/*       */   
/*       */   public static final native void CkNtlm_put_DnsDomainName(long paramLong, CkNtlm paramCkNtlm, String paramString);
/*       */   
/*       */   public static final native void CkNtlm_get_Domain(long paramLong1, CkNtlm paramCkNtlm, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkNtlm_domain(long paramLong, CkNtlm paramCkNtlm);
/*       */   
/*       */   public static final native void CkNtlm_put_Domain(long paramLong, CkNtlm paramCkNtlm, String paramString);
/*       */   
/*       */   public static final native void CkNtlm_get_EncodingMode(long paramLong1, CkNtlm paramCkNtlm, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkNtlm_encodingMode(long paramLong, CkNtlm paramCkNtlm);
/*       */   
/*       */   public static final native void CkNtlm_put_EncodingMode(long paramLong, CkNtlm paramCkNtlm, String paramString);
/*       */   
/*       */   public static final native void CkNtlm_get_Flags(long paramLong1, CkNtlm paramCkNtlm, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkNtlm_flags(long paramLong, CkNtlm paramCkNtlm);
/*       */   
/*       */   public static final native void CkNtlm_put_Flags(long paramLong, CkNtlm paramCkNtlm, String paramString);
/*       */   
/*       */   public static final native void CkNtlm_get_LastErrorHtml(long paramLong1, CkNtlm paramCkNtlm, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkNtlm_lastErrorHtml(long paramLong, CkNtlm paramCkNtlm);
/*       */   
/*       */   public static final native void CkNtlm_get_LastErrorText(long paramLong1, CkNtlm paramCkNtlm, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkNtlm_lastErrorText(long paramLong, CkNtlm paramCkNtlm);
/*       */   
/*       */   public static final native void CkNtlm_get_LastErrorXml(long paramLong1, CkNtlm paramCkNtlm, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkNtlm_lastErrorXml(long paramLong, CkNtlm paramCkNtlm);
/*       */   
/*       */   public static final native boolean CkNtlm_get_LastMethodSuccess(long paramLong, CkNtlm paramCkNtlm);
/*       */   
/*       */   public static final native void CkNtlm_put_LastMethodSuccess(long paramLong, CkNtlm paramCkNtlm, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkNtlm_get_NetBiosComputerName(long paramLong1, CkNtlm paramCkNtlm, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkNtlm_netBiosComputerName(long paramLong, CkNtlm paramCkNtlm);
/*       */   
/*       */   public static final native void CkNtlm_put_NetBiosComputerName(long paramLong, CkNtlm paramCkNtlm, String paramString);
/*       */   
/*       */   public static final native void CkNtlm_get_NetBiosDomainName(long paramLong1, CkNtlm paramCkNtlm, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkNtlm_netBiosDomainName(long paramLong, CkNtlm paramCkNtlm);
/*       */   
/*       */   public static final native void CkNtlm_put_NetBiosDomainName(long paramLong, CkNtlm paramCkNtlm, String paramString);
/*       */   
/*       */   public static final native int CkNtlm_get_NtlmVersion(long paramLong, CkNtlm paramCkNtlm);
/*       */   
/*       */   public static final native void CkNtlm_put_NtlmVersion(long paramLong, CkNtlm paramCkNtlm, int paramInt);
/*       */   
/*       */   public static final native int CkNtlm_get_OemCodePage(long paramLong, CkNtlm paramCkNtlm);
/*       */   
/*       */   public static final native void CkNtlm_put_OemCodePage(long paramLong, CkNtlm paramCkNtlm, int paramInt);
/*       */   
/*       */   public static final native void CkNtlm_get_Password(long paramLong1, CkNtlm paramCkNtlm, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkNtlm_password(long paramLong, CkNtlm paramCkNtlm);
/*       */   
/*       */   public static final native void CkNtlm_put_Password(long paramLong, CkNtlm paramCkNtlm, String paramString);
/*       */   
/*       */   public static final native void CkNtlm_get_ServerChallenge(long paramLong1, CkNtlm paramCkNtlm, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkNtlm_serverChallenge(long paramLong, CkNtlm paramCkNtlm);
/*       */   
/*       */   public static final native void CkNtlm_put_ServerChallenge(long paramLong, CkNtlm paramCkNtlm, String paramString);
/*       */   
/*       */   public static final native void CkNtlm_get_TargetName(long paramLong1, CkNtlm paramCkNtlm, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkNtlm_targetName(long paramLong, CkNtlm paramCkNtlm);
/*       */   
/*       */   public static final native void CkNtlm_put_TargetName(long paramLong, CkNtlm paramCkNtlm, String paramString);
/*       */   
/*       */   public static final native void CkNtlm_get_UserName(long paramLong1, CkNtlm paramCkNtlm, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkNtlm_userName(long paramLong, CkNtlm paramCkNtlm);
/*       */   
/*       */   public static final native void CkNtlm_put_UserName(long paramLong, CkNtlm paramCkNtlm, String paramString);
/*       */   
/*       */   public static final native boolean CkNtlm_get_VerboseLogging(long paramLong, CkNtlm paramCkNtlm);
/*       */   
/*       */   public static final native void CkNtlm_put_VerboseLogging(long paramLong, CkNtlm paramCkNtlm, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkNtlm_get_Version(long paramLong1, CkNtlm paramCkNtlm, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkNtlm_version(long paramLong, CkNtlm paramCkNtlm);
/*       */   
/*       */   public static final native void CkNtlm_get_Workstation(long paramLong1, CkNtlm paramCkNtlm, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkNtlm_workstation(long paramLong, CkNtlm paramCkNtlm);
/*       */   
/*       */   public static final native void CkNtlm_put_Workstation(long paramLong, CkNtlm paramCkNtlm, String paramString);
/*       */   
/*       */   public static final native boolean CkNtlm_CompareType3(long paramLong, CkNtlm paramCkNtlm, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkNtlm_GenType1(long paramLong1, CkNtlm paramCkNtlm, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkNtlm_genType1(long paramLong, CkNtlm paramCkNtlm);
/*       */   
/*       */   public static final native boolean CkNtlm_GenType2(long paramLong1, CkNtlm paramCkNtlm, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkNtlm_genType2(long paramLong, CkNtlm paramCkNtlm, String paramString);
/*       */   
/*       */   public static final native boolean CkNtlm_GenType3(long paramLong1, CkNtlm paramCkNtlm, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkNtlm_genType3(long paramLong, CkNtlm paramCkNtlm, String paramString);
/*       */   
/*       */   public static final native boolean CkNtlm_LoadType3(long paramLong, CkNtlm paramCkNtlm, String paramString);
/*       */   
/*       */   public static final native boolean CkNtlm_ParseType1(long paramLong1, CkNtlm paramCkNtlm, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkNtlm_parseType1(long paramLong, CkNtlm paramCkNtlm, String paramString);
/*       */   
/*       */   public static final native boolean CkNtlm_ParseType2(long paramLong1, CkNtlm paramCkNtlm, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkNtlm_parseType2(long paramLong, CkNtlm paramCkNtlm, String paramString);
/*       */   
/*       */   public static final native boolean CkNtlm_ParseType3(long paramLong1, CkNtlm paramCkNtlm, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkNtlm_parseType3(long paramLong, CkNtlm paramCkNtlm, String paramString);
/*       */   
/*       */   public static final native boolean CkNtlm_SaveLastError(long paramLong, CkNtlm paramCkNtlm, String paramString);
/*       */   
/*       */   public static final native boolean CkNtlm_SetFlag(long paramLong, CkNtlm paramCkNtlm, String paramString, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkNtlm_UnlockComponent(long paramLong, CkNtlm paramCkNtlm, String paramString);
/*       */   
/*       */   public static final native long new_CkPem();
/*       */   
/*       */   public static final native void delete_CkPem(long paramLong);
/*       */   
/*       */   public static final native void CkPem_LastErrorXml(long paramLong1, CkPem paramCkPem, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkPem_LastErrorHtml(long paramLong1, CkPem paramCkPem, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkPem_LastErrorText(long paramLong1, CkPem paramCkPem, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkPem_put_EventCallbackObject(long paramLong1, CkPem paramCkPem, long paramLong2, CkBaseProgress paramCkBaseProgress);
/*       */   
/*       */   public static final native boolean CkPem_get_AppendMode(long paramLong, CkPem paramCkPem);
/*       */   
/*       */   public static final native void CkPem_put_AppendMode(long paramLong, CkPem paramCkPem, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkPem_get_DebugLogFilePath(long paramLong1, CkPem paramCkPem, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkPem_debugLogFilePath(long paramLong, CkPem paramCkPem);
/*       */   
/*       */   public static final native void CkPem_put_DebugLogFilePath(long paramLong, CkPem paramCkPem, String paramString);
/*       */   
/*       */   public static final native int CkPem_get_HeartbeatMs(long paramLong, CkPem paramCkPem);
/*       */   
/*       */   public static final native void CkPem_put_HeartbeatMs(long paramLong, CkPem paramCkPem, int paramInt);
/*       */   
/*       */   public static final native void CkPem_get_LastErrorHtml(long paramLong1, CkPem paramCkPem, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkPem_lastErrorHtml(long paramLong, CkPem paramCkPem);
/*       */   
/*       */   public static final native void CkPem_get_LastErrorText(long paramLong1, CkPem paramCkPem, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkPem_lastErrorText(long paramLong, CkPem paramCkPem);
/*       */   
/*       */   public static final native void CkPem_get_LastErrorXml(long paramLong1, CkPem paramCkPem, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkPem_lastErrorXml(long paramLong, CkPem paramCkPem);
/*       */   
/*       */   public static final native boolean CkPem_get_LastMethodSuccess(long paramLong, CkPem paramCkPem);
/*       */   
/*       */   public static final native void CkPem_put_LastMethodSuccess(long paramLong, CkPem paramCkPem, boolean paramBoolean);
/*       */   
/*       */   public static final native int CkPem_get_NumCerts(long paramLong, CkPem paramCkPem);
/*       */   
/*       */   public static final native int CkPem_get_NumCsrs(long paramLong, CkPem paramCkPem);
/*       */   
/*       */   public static final native int CkPem_get_NumPrivateKeys(long paramLong, CkPem paramCkPem);
/*       */   
/*       */   public static final native int CkPem_get_NumPublicKeys(long paramLong, CkPem paramCkPem);
/*       */   
/*       */   public static final native void CkPem_get_PrivateKeyFormat(long paramLong1, CkPem paramCkPem, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkPem_privateKeyFormat(long paramLong, CkPem paramCkPem);
/*       */   
/*       */   public static final native void CkPem_put_PrivateKeyFormat(long paramLong, CkPem paramCkPem, String paramString);
/*       */   
/*       */   public static final native void CkPem_get_PublicKeyFormat(long paramLong1, CkPem paramCkPem, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkPem_publicKeyFormat(long paramLong, CkPem paramCkPem);
/*       */   
/*       */   public static final native void CkPem_put_PublicKeyFormat(long paramLong, CkPem paramCkPem, String paramString);
/*       */   
/*       */   public static final native boolean CkPem_get_VerboseLogging(long paramLong, CkPem paramCkPem);
/*       */   
/*       */   public static final native void CkPem_put_VerboseLogging(long paramLong, CkPem paramCkPem, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkPem_get_Version(long paramLong1, CkPem paramCkPem, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkPem_version(long paramLong, CkPem paramCkPem);
/*       */   
/*       */   public static final native boolean CkPem_AddCert(long paramLong1, CkPem paramCkPem, long paramLong2, CkCert paramCkCert, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkPem_AddItem(long paramLong, CkPem paramCkPem, String paramString1, String paramString2, String paramString3);
/*       */   
/*       */   public static final native boolean CkPem_AddPrivateKey(long paramLong1, CkPem paramCkPem, long paramLong2, CkPrivateKey paramCkPrivateKey);
/*       */   
/*       */   public static final native boolean CkPem_AddPrivateKey2(long paramLong1, CkPem paramCkPem, long paramLong2, CkPrivateKey paramCkPrivateKey, long paramLong3, CkCertChain paramCkCertChain);
/*       */   
/*       */   public static final native boolean CkPem_AddPublicKey(long paramLong1, CkPem paramCkPem, long paramLong2, CkPublicKey paramCkPublicKey);
/*       */   
/*       */   public static final native boolean CkPem_Clear(long paramLong, CkPem paramCkPem);
/*       */   
/*       */   public static final native long CkPem_GetCert(long paramLong, CkPem paramCkPem, int paramInt);
/*       */   
/*       */   public static final native boolean CkPem_GetEncodedItem(long paramLong1, CkPem paramCkPem, String paramString1, String paramString2, String paramString3, int paramInt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkPem_getEncodedItem(long paramLong, CkPem paramCkPem, String paramString1, String paramString2, String paramString3, int paramInt);
/*       */   
/*       */   public static final native String CkPem_encodedItem(long paramLong, CkPem paramCkPem, String paramString1, String paramString2, String paramString3, int paramInt);
/*       */   
/*       */   public static final native long CkPem_GetPrivateKey(long paramLong, CkPem paramCkPem, int paramInt);
/*       */   
/*       */   public static final native long CkPem_GetPublicKey(long paramLong, CkPem paramCkPem, int paramInt);
/*       */   
/*       */   public static final native boolean CkPem_LoadP7b(long paramLong1, CkPem paramCkPem, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native long CkPem_LoadP7bAsync(long paramLong1, CkPem paramCkPem, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkPem_LoadP7bFile(long paramLong, CkPem paramCkPem, String paramString);
/*       */   
/*       */   public static final native long CkPem_LoadP7bFileAsync(long paramLong, CkPem paramCkPem, String paramString);
/*       */   
/*       */   public static final native boolean CkPem_LoadPem(long paramLong, CkPem paramCkPem, String paramString1, String paramString2);
/*       */   
/*       */   public static final native long CkPem_LoadPemAsync(long paramLong, CkPem paramCkPem, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkPem_LoadPemFile(long paramLong, CkPem paramCkPem, String paramString1, String paramString2);
/*       */   
/*       */   public static final native long CkPem_LoadPemFileAsync(long paramLong, CkPem paramCkPem, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkPem_RemoveCert(long paramLong, CkPem paramCkPem, int paramInt);
/*       */   
/*       */   public static final native boolean CkPem_RemovePrivateKey(long paramLong, CkPem paramCkPem, int paramInt);
/*       */   
/*       */   public static final native boolean CkPem_SaveLastError(long paramLong, CkPem paramCkPem, String paramString);
/*       */   
/*       */   public static final native long CkPem_ToJks(long paramLong, CkPem paramCkPem, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkPem_ToPem(long paramLong1, CkPem paramCkPem, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkPem_toPem(long paramLong, CkPem paramCkPem);
/*       */   
/*       */   public static final native boolean CkPem_ToPemEx(long paramLong1, CkPem paramCkPem, boolean paramBoolean1, boolean paramBoolean2, boolean paramBoolean3, boolean paramBoolean4, String paramString1, String paramString2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkPem_toPemEx(long paramLong, CkPem paramCkPem, boolean paramBoolean1, boolean paramBoolean2, boolean paramBoolean3, boolean paramBoolean4, String paramString1, String paramString2);
/*       */   
/*       */   public static final native long CkPem_ToPfx(long paramLong, CkPem paramCkPem);
/*       */   
/*       */   public static final native long new_CkPfx();
/*       */   
/*       */   public static final native void delete_CkPfx(long paramLong);
/*       */   
/*       */   public static final native void CkPfx_LastErrorXml(long paramLong1, CkPfx paramCkPfx, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkPfx_LastErrorHtml(long paramLong1, CkPfx paramCkPfx, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkPfx_LastErrorText(long paramLong1, CkPfx paramCkPfx, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkPfx_get_DebugLogFilePath(long paramLong1, CkPfx paramCkPfx, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkPfx_debugLogFilePath(long paramLong, CkPfx paramCkPfx);
/*       */   
/*       */   public static final native void CkPfx_put_DebugLogFilePath(long paramLong, CkPfx paramCkPfx, String paramString);
/*       */   
/*       */   public static final native void CkPfx_get_LastErrorHtml(long paramLong1, CkPfx paramCkPfx, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkPfx_lastErrorHtml(long paramLong, CkPfx paramCkPfx);
/*       */   
/*       */   public static final native void CkPfx_get_LastErrorText(long paramLong1, CkPfx paramCkPfx, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkPfx_lastErrorText(long paramLong, CkPfx paramCkPfx);
/*       */   
/*       */   public static final native void CkPfx_get_LastErrorXml(long paramLong1, CkPfx paramCkPfx, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkPfx_lastErrorXml(long paramLong, CkPfx paramCkPfx);
/*       */   
/*       */   public static final native boolean CkPfx_get_LastMethodSuccess(long paramLong, CkPfx paramCkPfx);
/*       */   
/*       */   public static final native void CkPfx_put_LastMethodSuccess(long paramLong, CkPfx paramCkPfx, boolean paramBoolean);
/*       */   
/*       */   public static final native int CkPfx_get_NumCerts(long paramLong, CkPfx paramCkPfx);
/*       */   
/*       */   public static final native int CkPfx_get_NumPrivateKeys(long paramLong, CkPfx paramCkPfx);
/*       */   
/*       */   public static final native boolean CkPfx_get_VerboseLogging(long paramLong, CkPfx paramCkPfx);
/*       */   
/*       */   public static final native void CkPfx_put_VerboseLogging(long paramLong, CkPfx paramCkPfx, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkPfx_get_Version(long paramLong1, CkPfx paramCkPfx, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkPfx_version(long paramLong, CkPfx paramCkPfx);
/*       */   
/*       */   public static final native boolean CkPfx_AddCert(long paramLong1, CkPfx paramCkPfx, long paramLong2, CkCert paramCkCert, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkPfx_AddPrivateKey(long paramLong1, CkPfx paramCkPfx, long paramLong2, CkPrivateKey paramCkPrivateKey, long paramLong3, CkCertChain paramCkCertChain);
/*       */   
/*       */   public static final native long CkPfx_GetCert(long paramLong, CkPfx paramCkPfx, int paramInt);
/*       */   
/*       */   public static final native long CkPfx_GetPrivateKey(long paramLong, CkPfx paramCkPfx, int paramInt);
/*       */   
/*       */   public static final native boolean CkPfx_LoadPem(long paramLong, CkPfx paramCkPfx, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkPfx_LoadPfxBytes(long paramLong1, CkPfx paramCkPfx, long paramLong2, CkByteData paramCkByteData, String paramString);
/*       */   
/*       */   public static final native boolean CkPfx_LoadPfxEncoded(long paramLong, CkPfx paramCkPfx, String paramString1, String paramString2, String paramString3);
/*       */   
/*       */   public static final native boolean CkPfx_LoadPfxFile(long paramLong, CkPfx paramCkPfx, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkPfx_SaveLastError(long paramLong, CkPfx paramCkPfx, String paramString);
/*       */   
/*       */   public static final native boolean CkPfx_ToBinary(long paramLong1, CkPfx paramCkPfx, String paramString, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkPfx_ToEncodedString(long paramLong1, CkPfx paramCkPfx, String paramString1, String paramString2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkPfx_toEncodedString(long paramLong, CkPfx paramCkPfx, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkPfx_ToFile(long paramLong, CkPfx paramCkPfx, String paramString1, String paramString2);
/*       */   
/*       */   public static final native long CkPfx_ToJavaKeyStore(long paramLong, CkPfx paramCkPfx, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkPfx_ToPem(long paramLong1, CkPfx paramCkPfx, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkPfx_toPem(long paramLong, CkPfx paramCkPfx);
/*       */   
/*       */   public static final native boolean CkPfx_ToPemEx(long paramLong1, CkPfx paramCkPfx, boolean paramBoolean1, boolean paramBoolean2, boolean paramBoolean3, boolean paramBoolean4, String paramString1, String paramString2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkPfx_toPemEx(long paramLong, CkPfx paramCkPfx, boolean paramBoolean1, boolean paramBoolean2, boolean paramBoolean3, boolean paramBoolean4, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkPfx_UseCertVault(long paramLong1, CkPfx paramCkPfx, long paramLong2, CkXmlCertVault paramCkXmlCertVault);
/*       */   
/*       */   public static final native long new_CkPrivateKey();
/*       */   
/*       */   public static final native void delete_CkPrivateKey(long paramLong);
/*       */   
/*       */   public static final native void CkPrivateKey_LastErrorXml(long paramLong1, CkPrivateKey paramCkPrivateKey, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkPrivateKey_LastErrorHtml(long paramLong1, CkPrivateKey paramCkPrivateKey, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkPrivateKey_LastErrorText(long paramLong1, CkPrivateKey paramCkPrivateKey, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native int CkPrivateKey_get_BitLength(long paramLong, CkPrivateKey paramCkPrivateKey);
/*       */   
/*       */   public static final native void CkPrivateKey_get_DebugLogFilePath(long paramLong1, CkPrivateKey paramCkPrivateKey, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkPrivateKey_debugLogFilePath(long paramLong, CkPrivateKey paramCkPrivateKey);
/*       */   
/*       */   public static final native void CkPrivateKey_put_DebugLogFilePath(long paramLong, CkPrivateKey paramCkPrivateKey, String paramString);
/*       */   
/*       */   public static final native void CkPrivateKey_get_KeyType(long paramLong1, CkPrivateKey paramCkPrivateKey, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkPrivateKey_keyType(long paramLong, CkPrivateKey paramCkPrivateKey);
/*       */   
/*       */   public static final native void CkPrivateKey_get_LastErrorHtml(long paramLong1, CkPrivateKey paramCkPrivateKey, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkPrivateKey_lastErrorHtml(long paramLong, CkPrivateKey paramCkPrivateKey);
/*       */   
/*       */   public static final native void CkPrivateKey_get_LastErrorText(long paramLong1, CkPrivateKey paramCkPrivateKey, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkPrivateKey_lastErrorText(long paramLong, CkPrivateKey paramCkPrivateKey);
/*       */   
/*       */   public static final native void CkPrivateKey_get_LastErrorXml(long paramLong1, CkPrivateKey paramCkPrivateKey, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkPrivateKey_lastErrorXml(long paramLong, CkPrivateKey paramCkPrivateKey);
/*       */   
/*       */   public static final native boolean CkPrivateKey_get_LastMethodSuccess(long paramLong, CkPrivateKey paramCkPrivateKey);
/*       */   
/*       */   public static final native void CkPrivateKey_put_LastMethodSuccess(long paramLong, CkPrivateKey paramCkPrivateKey, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkPrivateKey_get_Pkcs8EncryptAlg(long paramLong1, CkPrivateKey paramCkPrivateKey, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkPrivateKey_pkcs8EncryptAlg(long paramLong, CkPrivateKey paramCkPrivateKey);
/*       */   
/*       */   public static final native void CkPrivateKey_put_Pkcs8EncryptAlg(long paramLong, CkPrivateKey paramCkPrivateKey, String paramString);
/*       */   
/*       */   public static final native boolean CkPrivateKey_get_VerboseLogging(long paramLong, CkPrivateKey paramCkPrivateKey);
/*       */   
/*       */   public static final native void CkPrivateKey_put_VerboseLogging(long paramLong, CkPrivateKey paramCkPrivateKey, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkPrivateKey_get_Version(long paramLong1, CkPrivateKey paramCkPrivateKey, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkPrivateKey_version(long paramLong, CkPrivateKey paramCkPrivateKey);
/*       */   
/*       */   public static final native boolean CkPrivateKey_GetJwk(long paramLong1, CkPrivateKey paramCkPrivateKey, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkPrivateKey_getJwk(long paramLong, CkPrivateKey paramCkPrivateKey);
/*       */   
/*       */   public static final native String CkPrivateKey_jwk(long paramLong, CkPrivateKey paramCkPrivateKey);
/*       */   
/*       */   public static final native boolean CkPrivateKey_GetJwkThumbprint(long paramLong1, CkPrivateKey paramCkPrivateKey, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkPrivateKey_getJwkThumbprint(long paramLong, CkPrivateKey paramCkPrivateKey, String paramString);
/*       */   
/*       */   public static final native String CkPrivateKey_jwkThumbprint(long paramLong, CkPrivateKey paramCkPrivateKey, String paramString);
/*       */   
/*       */   public static final native boolean CkPrivateKey_GetPkcs1(long paramLong1, CkPrivateKey paramCkPrivateKey, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkPrivateKey_GetPkcs1ENC(long paramLong1, CkPrivateKey paramCkPrivateKey, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkPrivateKey_getPkcs1ENC(long paramLong, CkPrivateKey paramCkPrivateKey, String paramString);
/*       */   
/*       */   public static final native String CkPrivateKey_pkcs1ENC(long paramLong, CkPrivateKey paramCkPrivateKey, String paramString);
/*       */   
/*       */   public static final native boolean CkPrivateKey_GetPkcs1Pem(long paramLong1, CkPrivateKey paramCkPrivateKey, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkPrivateKey_getPkcs1Pem(long paramLong, CkPrivateKey paramCkPrivateKey);
/*       */   
/*       */   public static final native String CkPrivateKey_pkcs1Pem(long paramLong, CkPrivateKey paramCkPrivateKey);
/*       */   
/*       */   public static final native boolean CkPrivateKey_GetPkcs8(long paramLong1, CkPrivateKey paramCkPrivateKey, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkPrivateKey_GetPkcs8ENC(long paramLong1, CkPrivateKey paramCkPrivateKey, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkPrivateKey_getPkcs8ENC(long paramLong, CkPrivateKey paramCkPrivateKey, String paramString);
/*       */   
/*       */   public static final native String CkPrivateKey_pkcs8ENC(long paramLong, CkPrivateKey paramCkPrivateKey, String paramString);
/*       */   
/*       */   public static final native boolean CkPrivateKey_GetPkcs8Encrypted(long paramLong1, CkPrivateKey paramCkPrivateKey, String paramString, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkPrivateKey_GetPkcs8EncryptedENC(long paramLong1, CkPrivateKey paramCkPrivateKey, String paramString1, String paramString2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkPrivateKey_getPkcs8EncryptedENC(long paramLong, CkPrivateKey paramCkPrivateKey, String paramString1, String paramString2);
/*       */   
/*       */   public static final native String CkPrivateKey_pkcs8EncryptedENC(long paramLong, CkPrivateKey paramCkPrivateKey, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkPrivateKey_GetPkcs8EncryptedPem(long paramLong1, CkPrivateKey paramCkPrivateKey, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkPrivateKey_getPkcs8EncryptedPem(long paramLong, CkPrivateKey paramCkPrivateKey, String paramString);
/*       */   
/*       */   public static final native String CkPrivateKey_pkcs8EncryptedPem(long paramLong, CkPrivateKey paramCkPrivateKey, String paramString);
/*       */   
/*       */   public static final native boolean CkPrivateKey_GetPkcs8Pem(long paramLong1, CkPrivateKey paramCkPrivateKey, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkPrivateKey_getPkcs8Pem(long paramLong, CkPrivateKey paramCkPrivateKey);
/*       */   
/*       */   public static final native String CkPrivateKey_pkcs8Pem(long paramLong, CkPrivateKey paramCkPrivateKey);
/*       */   
/*       */   public static final native long CkPrivateKey_GetPublicKey(long paramLong, CkPrivateKey paramCkPrivateKey);
/*       */   
/*       */   public static final native boolean CkPrivateKey_GetRsaDer(long paramLong1, CkPrivateKey paramCkPrivateKey, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkPrivateKey_GetRsaPem(long paramLong1, CkPrivateKey paramCkPrivateKey, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkPrivateKey_getRsaPem(long paramLong, CkPrivateKey paramCkPrivateKey);
/*       */   
/*       */   public static final native String CkPrivateKey_rsaPem(long paramLong, CkPrivateKey paramCkPrivateKey);
/*       */   
/*       */   public static final native boolean CkPrivateKey_GetXml(long paramLong1, CkPrivateKey paramCkPrivateKey, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkPrivateKey_getXml(long paramLong, CkPrivateKey paramCkPrivateKey);
/*       */   
/*       */   public static final native String CkPrivateKey_xml(long paramLong, CkPrivateKey paramCkPrivateKey);
/*       */   
/*       */   public static final native boolean CkPrivateKey_LoadAnyFormat(long paramLong1, CkPrivateKey paramCkPrivateKey, long paramLong2, CkBinData paramCkBinData, String paramString);
/*       */   
/*       */   public static final native boolean CkPrivateKey_LoadEncryptedPem(long paramLong, CkPrivateKey paramCkPrivateKey, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkPrivateKey_LoadEncryptedPemFile(long paramLong, CkPrivateKey paramCkPrivateKey, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkPrivateKey_LoadJwk(long paramLong, CkPrivateKey paramCkPrivateKey, String paramString);
/*       */   
/*       */   public static final native boolean CkPrivateKey_LoadPem(long paramLong, CkPrivateKey paramCkPrivateKey, String paramString);
/*       */   
/*       */   public static final native boolean CkPrivateKey_LoadPemFile(long paramLong, CkPrivateKey paramCkPrivateKey, String paramString);
/*       */   
/*       */   public static final native boolean CkPrivateKey_LoadPkcs1(long paramLong1, CkPrivateKey paramCkPrivateKey, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkPrivateKey_LoadPkcs1File(long paramLong, CkPrivateKey paramCkPrivateKey, String paramString);
/*       */   
/*       */   public static final native boolean CkPrivateKey_LoadPkcs8(long paramLong1, CkPrivateKey paramCkPrivateKey, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkPrivateKey_LoadPkcs8Encrypted(long paramLong1, CkPrivateKey paramCkPrivateKey, long paramLong2, CkByteData paramCkByteData, String paramString);
/*       */   
/*       */   public static final native boolean CkPrivateKey_LoadPkcs8EncryptedFile(long paramLong, CkPrivateKey paramCkPrivateKey, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkPrivateKey_LoadPkcs8File(long paramLong, CkPrivateKey paramCkPrivateKey, String paramString);
/*       */   
/*       */   public static final native boolean CkPrivateKey_LoadPvk(long paramLong1, CkPrivateKey paramCkPrivateKey, long paramLong2, CkByteData paramCkByteData, String paramString);
/*       */   
/*       */   public static final native boolean CkPrivateKey_LoadPvkFile(long paramLong, CkPrivateKey paramCkPrivateKey, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkPrivateKey_LoadRsaDer(long paramLong1, CkPrivateKey paramCkPrivateKey, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkPrivateKey_LoadRsaDerFile(long paramLong, CkPrivateKey paramCkPrivateKey, String paramString);
/*       */   
/*       */   public static final native boolean CkPrivateKey_LoadXml(long paramLong, CkPrivateKey paramCkPrivateKey, String paramString);
/*       */   
/*       */   public static final native boolean CkPrivateKey_LoadXmlFile(long paramLong, CkPrivateKey paramCkPrivateKey, String paramString);
/*       */   
/*       */   public static final native boolean CkPrivateKey_SaveLastError(long paramLong, CkPrivateKey paramCkPrivateKey, String paramString);
/*       */   
/*       */   public static final native boolean CkPrivateKey_SavePemFile(long paramLong, CkPrivateKey paramCkPrivateKey, String paramString);
/*       */   
/*       */   public static final native boolean CkPrivateKey_SavePkcs1File(long paramLong, CkPrivateKey paramCkPrivateKey, String paramString);
/*       */   
/*       */   public static final native boolean CkPrivateKey_SavePkcs8EncryptedFile(long paramLong, CkPrivateKey paramCkPrivateKey, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkPrivateKey_SavePkcs8EncryptedPemFile(long paramLong, CkPrivateKey paramCkPrivateKey, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkPrivateKey_SavePkcs8File(long paramLong, CkPrivateKey paramCkPrivateKey, String paramString);
/*       */   
/*       */   public static final native boolean CkPrivateKey_SavePkcs8PemFile(long paramLong, CkPrivateKey paramCkPrivateKey, String paramString);
/*       */   
/*       */   public static final native boolean CkPrivateKey_SaveRsaDerFile(long paramLong, CkPrivateKey paramCkPrivateKey, String paramString);
/*       */   
/*       */   public static final native boolean CkPrivateKey_SaveRsaPemFile(long paramLong, CkPrivateKey paramCkPrivateKey, String paramString);
/*       */   
/*       */   public static final native boolean CkPrivateKey_SaveXmlFile(long paramLong, CkPrivateKey paramCkPrivateKey, String paramString);
/*       */   
/*       */   public static final native long new_CkPrng();
/*       */   
/*       */   public static final native void delete_CkPrng(long paramLong);
/*       */   
/*       */   public static final native void CkPrng_LastErrorXml(long paramLong1, CkPrng paramCkPrng, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkPrng_LastErrorHtml(long paramLong1, CkPrng paramCkPrng, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkPrng_LastErrorText(long paramLong1, CkPrng paramCkPrng, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkPrng_get_DebugLogFilePath(long paramLong1, CkPrng paramCkPrng, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkPrng_debugLogFilePath(long paramLong, CkPrng paramCkPrng);
/*       */   
/*       */   public static final native void CkPrng_put_DebugLogFilePath(long paramLong, CkPrng paramCkPrng, String paramString);
/*       */   
/*       */   public static final native void CkPrng_get_LastErrorHtml(long paramLong1, CkPrng paramCkPrng, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkPrng_lastErrorHtml(long paramLong, CkPrng paramCkPrng);
/*       */   
/*       */   public static final native void CkPrng_get_LastErrorText(long paramLong1, CkPrng paramCkPrng, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkPrng_lastErrorText(long paramLong, CkPrng paramCkPrng);
/*       */   
/*       */   public static final native void CkPrng_get_LastErrorXml(long paramLong1, CkPrng paramCkPrng, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkPrng_lastErrorXml(long paramLong, CkPrng paramCkPrng);
/*       */   
/*       */   public static final native boolean CkPrng_get_LastMethodSuccess(long paramLong, CkPrng paramCkPrng);
/*       */   
/*       */   public static final native void CkPrng_put_LastMethodSuccess(long paramLong, CkPrng paramCkPrng, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkPrng_get_PrngName(long paramLong1, CkPrng paramCkPrng, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkPrng_prngName(long paramLong, CkPrng paramCkPrng);
/*       */   
/*       */   public static final native void CkPrng_put_PrngName(long paramLong, CkPrng paramCkPrng, String paramString);
/*       */   
/*       */   public static final native boolean CkPrng_get_VerboseLogging(long paramLong, CkPrng paramCkPrng);
/*       */   
/*       */   public static final native void CkPrng_put_VerboseLogging(long paramLong, CkPrng paramCkPrng, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkPrng_get_Version(long paramLong1, CkPrng paramCkPrng, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkPrng_version(long paramLong, CkPrng paramCkPrng);
/*       */   
/*       */   public static final native boolean CkPrng_AddEntropy(long paramLong, CkPrng paramCkPrng, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkPrng_AddEntropyBytes(long paramLong1, CkPrng paramCkPrng, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkPrng_ExportEntropy(long paramLong1, CkPrng paramCkPrng, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkPrng_exportEntropy(long paramLong, CkPrng paramCkPrng);
/*       */   
/*       */   public static final native boolean CkPrng_FirebasePushId(long paramLong1, CkPrng paramCkPrng, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkPrng_firebasePushId(long paramLong, CkPrng paramCkPrng);
/*       */   
/*       */   public static final native boolean CkPrng_GenRandom(long paramLong1, CkPrng paramCkPrng, int paramInt, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkPrng_genRandom(long paramLong, CkPrng paramCkPrng, int paramInt, String paramString);
/*       */   
/*       */   public static final native boolean CkPrng_GenRandomBd(long paramLong1, CkPrng paramCkPrng, int paramInt, long paramLong2, CkBinData paramCkBinData);
/*       */   
/*       */   public static final native boolean CkPrng_GenRandomBytes(long paramLong1, CkPrng paramCkPrng, int paramInt, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkPrng_GetEntropy(long paramLong1, CkPrng paramCkPrng, int paramInt, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkPrng_getEntropy(long paramLong, CkPrng paramCkPrng, int paramInt, String paramString);
/*       */   
/*       */   public static final native String CkPrng_entropy(long paramLong, CkPrng paramCkPrng, int paramInt, String paramString);
/*       */   
/*       */   public static final native boolean CkPrng_GetEntropyBytes(long paramLong1, CkPrng paramCkPrng, int paramInt, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkPrng_ImportEntropy(long paramLong, CkPrng paramCkPrng, String paramString);
/*       */   
/*       */   public static final native int CkPrng_RandomInt(long paramLong, CkPrng paramCkPrng, int paramInt1, int paramInt2);
/*       */   
/*       */   public static final native boolean CkPrng_RandomPassword(long paramLong1, CkPrng paramCkPrng, int paramInt, boolean paramBoolean1, boolean paramBoolean2, String paramString1, String paramString2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkPrng_randomPassword(long paramLong, CkPrng paramCkPrng, int paramInt, boolean paramBoolean1, boolean paramBoolean2, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkPrng_RandomString(long paramLong1, CkPrng paramCkPrng, int paramInt, boolean paramBoolean1, boolean paramBoolean2, boolean paramBoolean3, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkPrng_randomString(long paramLong, CkPrng paramCkPrng, int paramInt, boolean paramBoolean1, boolean paramBoolean2, boolean paramBoolean3);
/*       */   
/*       */   public static final native boolean CkPrng_SaveLastError(long paramLong, CkPrng paramCkPrng, String paramString);
/*       */   
/*       */   public static final native long new_CkPublicKey();
/*       */   
/*       */   public static final native void delete_CkPublicKey(long paramLong);
/*       */   
/*       */   public static final native void CkPublicKey_LastErrorXml(long paramLong1, CkPublicKey paramCkPublicKey, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkPublicKey_LastErrorHtml(long paramLong1, CkPublicKey paramCkPublicKey, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkPublicKey_LastErrorText(long paramLong1, CkPublicKey paramCkPublicKey, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkPublicKey_get_DebugLogFilePath(long paramLong1, CkPublicKey paramCkPublicKey, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkPublicKey_debugLogFilePath(long paramLong, CkPublicKey paramCkPublicKey);
/*       */   
/*       */   public static final native void CkPublicKey_put_DebugLogFilePath(long paramLong, CkPublicKey paramCkPublicKey, String paramString);
/*       */   
/*       */   public static final native int CkPublicKey_get_KeySize(long paramLong, CkPublicKey paramCkPublicKey);
/*       */   
/*       */   public static final native void CkPublicKey_get_KeyType(long paramLong1, CkPublicKey paramCkPublicKey, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkPublicKey_keyType(long paramLong, CkPublicKey paramCkPublicKey);
/*       */   
/*       */   public static final native void CkPublicKey_get_LastErrorHtml(long paramLong1, CkPublicKey paramCkPublicKey, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkPublicKey_lastErrorHtml(long paramLong, CkPublicKey paramCkPublicKey);
/*       */   
/*       */   public static final native void CkPublicKey_get_LastErrorText(long paramLong1, CkPublicKey paramCkPublicKey, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkPublicKey_lastErrorText(long paramLong, CkPublicKey paramCkPublicKey);
/*       */   
/*       */   public static final native void CkPublicKey_get_LastErrorXml(long paramLong1, CkPublicKey paramCkPublicKey, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkPublicKey_lastErrorXml(long paramLong, CkPublicKey paramCkPublicKey);
/*       */   
/*       */   public static final native boolean CkPublicKey_get_LastMethodSuccess(long paramLong, CkPublicKey paramCkPublicKey);
/*       */   
/*       */   public static final native void CkPublicKey_put_LastMethodSuccess(long paramLong, CkPublicKey paramCkPublicKey, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkPublicKey_get_VerboseLogging(long paramLong, CkPublicKey paramCkPublicKey);
/*       */   
/*       */   public static final native void CkPublicKey_put_VerboseLogging(long paramLong, CkPublicKey paramCkPublicKey, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkPublicKey_get_Version(long paramLong1, CkPublicKey paramCkPublicKey, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkPublicKey_version(long paramLong, CkPublicKey paramCkPublicKey);
/*       */   
/*       */   public static final native boolean CkPublicKey_GetDer(long paramLong1, CkPublicKey paramCkPublicKey, boolean paramBoolean, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkPublicKey_GetEncoded(long paramLong1, CkPublicKey paramCkPublicKey, boolean paramBoolean, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkPublicKey_getEncoded(long paramLong, CkPublicKey paramCkPublicKey, boolean paramBoolean, String paramString);
/*       */   
/*       */   public static final native String CkPublicKey_encoded(long paramLong, CkPublicKey paramCkPublicKey, boolean paramBoolean, String paramString);
/*       */   
/*       */   public static final native boolean CkPublicKey_GetJwk(long paramLong1, CkPublicKey paramCkPublicKey, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkPublicKey_getJwk(long paramLong, CkPublicKey paramCkPublicKey);
/*       */   
/*       */   public static final native String CkPublicKey_jwk(long paramLong, CkPublicKey paramCkPublicKey);
/*       */   
/*       */   public static final native boolean CkPublicKey_GetJwkThumbprint(long paramLong1, CkPublicKey paramCkPublicKey, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkPublicKey_getJwkThumbprint(long paramLong, CkPublicKey paramCkPublicKey, String paramString);
/*       */   
/*       */   public static final native String CkPublicKey_jwkThumbprint(long paramLong, CkPublicKey paramCkPublicKey, String paramString);
/*       */   
/*       */   public static final native boolean CkPublicKey_GetOpenSslDer(long paramLong1, CkPublicKey paramCkPublicKey, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkPublicKey_GetOpenSslPem(long paramLong1, CkPublicKey paramCkPublicKey, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkPublicKey_getOpenSslPem(long paramLong, CkPublicKey paramCkPublicKey);
/*       */   
/*       */   public static final native String CkPublicKey_openSslPem(long paramLong, CkPublicKey paramCkPublicKey);
/*       */   
/*       */   public static final native boolean CkPublicKey_GetPem(long paramLong1, CkPublicKey paramCkPublicKey, boolean paramBoolean, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkPublicKey_getPem(long paramLong, CkPublicKey paramCkPublicKey, boolean paramBoolean);
/*       */   
/*       */   public static final native String CkPublicKey_pem(long paramLong, CkPublicKey paramCkPublicKey, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkPublicKey_GetPkcs1ENC(long paramLong1, CkPublicKey paramCkPublicKey, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkPublicKey_getPkcs1ENC(long paramLong, CkPublicKey paramCkPublicKey, String paramString);
/*       */   
/*       */   public static final native String CkPublicKey_pkcs1ENC(long paramLong, CkPublicKey paramCkPublicKey, String paramString);
/*       */   
/*       */   public static final native boolean CkPublicKey_GetPkcs8ENC(long paramLong1, CkPublicKey paramCkPublicKey, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkPublicKey_getPkcs8ENC(long paramLong, CkPublicKey paramCkPublicKey, String paramString);
/*       */   
/*       */   public static final native String CkPublicKey_pkcs8ENC(long paramLong, CkPublicKey paramCkPublicKey, String paramString);
/*       */   
/*       */   public static final native boolean CkPublicKey_GetRsaDer(long paramLong1, CkPublicKey paramCkPublicKey, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkPublicKey_GetXml(long paramLong1, CkPublicKey paramCkPublicKey, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkPublicKey_getXml(long paramLong, CkPublicKey paramCkPublicKey);
/*       */   
/*       */   public static final native String CkPublicKey_xml(long paramLong, CkPublicKey paramCkPublicKey);
/*       */   
/*       */   public static final native boolean CkPublicKey_LoadBase64(long paramLong, CkPublicKey paramCkPublicKey, String paramString);
/*       */   
/*       */   public static final native boolean CkPublicKey_LoadFromBinary(long paramLong1, CkPublicKey paramCkPublicKey, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkPublicKey_LoadFromFile(long paramLong, CkPublicKey paramCkPublicKey, String paramString);
/*       */   
/*       */   public static final native boolean CkPublicKey_LoadFromString(long paramLong, CkPublicKey paramCkPublicKey, String paramString);
/*       */   
/*       */   public static final native boolean CkPublicKey_LoadOpenSslDer(long paramLong1, CkPublicKey paramCkPublicKey, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkPublicKey_LoadOpenSslDerFile(long paramLong, CkPublicKey paramCkPublicKey, String paramString);
/*       */   
/*       */   public static final native boolean CkPublicKey_LoadOpenSslPem(long paramLong, CkPublicKey paramCkPublicKey, String paramString);
/*       */   
/*       */   public static final native boolean CkPublicKey_LoadOpenSslPemFile(long paramLong, CkPublicKey paramCkPublicKey, String paramString);
/*       */   
/*       */   public static final native boolean CkPublicKey_LoadPkcs1Pem(long paramLong, CkPublicKey paramCkPublicKey, String paramString);
/*       */   
/*       */   public static final native boolean CkPublicKey_LoadRsaDer(long paramLong1, CkPublicKey paramCkPublicKey, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkPublicKey_LoadRsaDerFile(long paramLong, CkPublicKey paramCkPublicKey, String paramString);
/*       */   
/*       */   public static final native boolean CkPublicKey_LoadXml(long paramLong, CkPublicKey paramCkPublicKey, String paramString);
/*       */   
/*       */   public static final native boolean CkPublicKey_LoadXmlFile(long paramLong, CkPublicKey paramCkPublicKey, String paramString);
/*       */   
/*       */   public static final native boolean CkPublicKey_SaveDerFile(long paramLong, CkPublicKey paramCkPublicKey, boolean paramBoolean, String paramString);
/*       */   
/*       */   public static final native boolean CkPublicKey_SaveLastError(long paramLong, CkPublicKey paramCkPublicKey, String paramString);
/*       */   
/*       */   public static final native boolean CkPublicKey_SaveOpenSslDerFile(long paramLong, CkPublicKey paramCkPublicKey, String paramString);
/*       */   
/*       */   public static final native boolean CkPublicKey_SaveOpenSslPemFile(long paramLong, CkPublicKey paramCkPublicKey, String paramString);
/*       */   
/*       */   public static final native boolean CkPublicKey_SavePemFile(long paramLong, CkPublicKey paramCkPublicKey, boolean paramBoolean, String paramString);
/*       */   
/*       */   public static final native boolean CkPublicKey_SaveRsaDerFile(long paramLong, CkPublicKey paramCkPublicKey, String paramString);
/*       */   
/*       */   public static final native boolean CkPublicKey_SaveXmlFile(long paramLong, CkPublicKey paramCkPublicKey, String paramString);
/*       */   
/*       */   public static final native long new_CkRsa();
/*       */   
/*       */   public static final native void delete_CkRsa(long paramLong);
/*       */   
/*       */   public static final native void CkRsa_LastErrorXml(long paramLong1, CkRsa paramCkRsa, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkRsa_LastErrorHtml(long paramLong1, CkRsa paramCkRsa, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkRsa_LastErrorText(long paramLong1, CkRsa paramCkRsa, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkRsa_get_Charset(long paramLong1, CkRsa paramCkRsa, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkRsa_charset(long paramLong, CkRsa paramCkRsa);
/*       */   
/*       */   public static final native void CkRsa_put_Charset(long paramLong, CkRsa paramCkRsa, String paramString);
/*       */   
/*       */   public static final native void CkRsa_get_DebugLogFilePath(long paramLong1, CkRsa paramCkRsa, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkRsa_debugLogFilePath(long paramLong, CkRsa paramCkRsa);
/*       */   
/*       */   public static final native void CkRsa_put_DebugLogFilePath(long paramLong, CkRsa paramCkRsa, String paramString);
/*       */   
/*       */   public static final native void CkRsa_get_EncodingMode(long paramLong1, CkRsa paramCkRsa, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkRsa_encodingMode(long paramLong, CkRsa paramCkRsa);
/*       */   
/*       */   public static final native void CkRsa_put_EncodingMode(long paramLong, CkRsa paramCkRsa, String paramString);
/*       */   
/*       */   public static final native void CkRsa_get_LastErrorHtml(long paramLong1, CkRsa paramCkRsa, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkRsa_lastErrorHtml(long paramLong, CkRsa paramCkRsa);
/*       */   
/*       */   public static final native void CkRsa_get_LastErrorText(long paramLong1, CkRsa paramCkRsa, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkRsa_lastErrorText(long paramLong, CkRsa paramCkRsa);
/*       */   
/*       */   public static final native void CkRsa_get_LastErrorXml(long paramLong1, CkRsa paramCkRsa, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkRsa_lastErrorXml(long paramLong, CkRsa paramCkRsa);
/*       */   
/*       */   public static final native boolean CkRsa_get_LastMethodSuccess(long paramLong, CkRsa paramCkRsa);
/*       */   
/*       */   public static final native void CkRsa_put_LastMethodSuccess(long paramLong, CkRsa paramCkRsa, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkRsa_get_LittleEndian(long paramLong, CkRsa paramCkRsa);
/*       */   
/*       */   public static final native void CkRsa_put_LittleEndian(long paramLong, CkRsa paramCkRsa, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkRsa_get_NoUnpad(long paramLong, CkRsa paramCkRsa);
/*       */   
/*       */   public static final native void CkRsa_put_NoUnpad(long paramLong, CkRsa paramCkRsa, boolean paramBoolean);
/*       */   
/*       */   public static final native int CkRsa_get_NumBits(long paramLong, CkRsa paramCkRsa);
/*       */   
/*       */   public static final native void CkRsa_get_OaepHash(long paramLong1, CkRsa paramCkRsa, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkRsa_oaepHash(long paramLong, CkRsa paramCkRsa);
/*       */   
/*       */   public static final native void CkRsa_put_OaepHash(long paramLong, CkRsa paramCkRsa, String paramString);
/*       */   
/*       */   public static final native void CkRsa_get_OaepMgfHash(long paramLong1, CkRsa paramCkRsa, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkRsa_oaepMgfHash(long paramLong, CkRsa paramCkRsa);
/*       */   
/*       */   public static final native void CkRsa_put_OaepMgfHash(long paramLong, CkRsa paramCkRsa, String paramString);
/*       */   
/*       */   public static final native boolean CkRsa_get_OaepPadding(long paramLong, CkRsa paramCkRsa);
/*       */   
/*       */   public static final native void CkRsa_put_OaepPadding(long paramLong, CkRsa paramCkRsa, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkRsa_get_VerboseLogging(long paramLong, CkRsa paramCkRsa);
/*       */   
/*       */   public static final native void CkRsa_put_VerboseLogging(long paramLong, CkRsa paramCkRsa, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkRsa_get_Version(long paramLong1, CkRsa paramCkRsa, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkRsa_version(long paramLong, CkRsa paramCkRsa);
/*       */   
/*       */   public static final native boolean CkRsa_DecryptBytes(long paramLong1, CkRsa paramCkRsa, long paramLong2, CkByteData paramCkByteData1, boolean paramBoolean, long paramLong3, CkByteData paramCkByteData2);
/*       */   
/*       */   public static final native boolean CkRsa_DecryptBytesENC(long paramLong1, CkRsa paramCkRsa, String paramString, boolean paramBoolean, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkRsa_DecryptString(long paramLong1, CkRsa paramCkRsa, long paramLong2, CkByteData paramCkByteData, boolean paramBoolean, long paramLong3, CkString paramCkString);
/*       */   
/*       */   public static final native String CkRsa_decryptString(long paramLong1, CkRsa paramCkRsa, long paramLong2, CkByteData paramCkByteData, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkRsa_DecryptStringENC(long paramLong1, CkRsa paramCkRsa, String paramString, boolean paramBoolean, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkRsa_decryptStringENC(long paramLong, CkRsa paramCkRsa, String paramString, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkRsa_EncryptBytes(long paramLong1, CkRsa paramCkRsa, long paramLong2, CkByteData paramCkByteData1, boolean paramBoolean, long paramLong3, CkByteData paramCkByteData2);
/*       */   
/*       */   public static final native boolean CkRsa_EncryptBytesENC(long paramLong1, CkRsa paramCkRsa, long paramLong2, CkByteData paramCkByteData, boolean paramBoolean, long paramLong3, CkString paramCkString);
/*       */   
/*       */   public static final native String CkRsa_encryptBytesENC(long paramLong1, CkRsa paramCkRsa, long paramLong2, CkByteData paramCkByteData, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkRsa_EncryptString(long paramLong1, CkRsa paramCkRsa, String paramString, boolean paramBoolean, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkRsa_EncryptStringENC(long paramLong1, CkRsa paramCkRsa, String paramString, boolean paramBoolean, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkRsa_encryptStringENC(long paramLong, CkRsa paramCkRsa, String paramString, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkRsa_ExportPrivateKey(long paramLong1, CkRsa paramCkRsa, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkRsa_exportPrivateKey(long paramLong, CkRsa paramCkRsa);
/*       */   
/*       */   public static final native long CkRsa_ExportPrivateKeyObj(long paramLong, CkRsa paramCkRsa);
/*       */   
/*       */   public static final native boolean CkRsa_ExportPublicKey(long paramLong1, CkRsa paramCkRsa, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkRsa_exportPublicKey(long paramLong, CkRsa paramCkRsa);
/*       */   
/*       */   public static final native long CkRsa_ExportPublicKeyObj(long paramLong, CkRsa paramCkRsa);
/*       */   
/*       */   public static final native boolean CkRsa_GenerateKey(long paramLong, CkRsa paramCkRsa, int paramInt);
/*       */   
/*       */   public static final native boolean CkRsa_ImportPrivateKey(long paramLong, CkRsa paramCkRsa, String paramString);
/*       */   
/*       */   public static final native boolean CkRsa_ImportPrivateKeyObj(long paramLong1, CkRsa paramCkRsa, long paramLong2, CkPrivateKey paramCkPrivateKey);
/*       */   
/*       */   public static final native boolean CkRsa_ImportPublicKey(long paramLong, CkRsa paramCkRsa, String paramString);
/*       */   
/*       */   public static final native boolean CkRsa_ImportPublicKeyObj(long paramLong1, CkRsa paramCkRsa, long paramLong2, CkPublicKey paramCkPublicKey);
/*       */   
/*       */   public static final native boolean CkRsa_OpenSslSignBytes(long paramLong1, CkRsa paramCkRsa, long paramLong2, CkByteData paramCkByteData1, long paramLong3, CkByteData paramCkByteData2);
/*       */   
/*       */   public static final native boolean CkRsa_OpenSslSignBytesENC(long paramLong1, CkRsa paramCkRsa, long paramLong2, CkByteData paramCkByteData, long paramLong3, CkString paramCkString);
/*       */   
/*       */   public static final native String CkRsa_openSslSignBytesENC(long paramLong1, CkRsa paramCkRsa, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkRsa_OpenSslSignString(long paramLong1, CkRsa paramCkRsa, String paramString, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkRsa_OpenSslSignStringENC(long paramLong1, CkRsa paramCkRsa, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkRsa_openSslSignStringENC(long paramLong, CkRsa paramCkRsa, String paramString);
/*       */   
/*       */   public static final native boolean CkRsa_OpenSslVerifyBytes(long paramLong1, CkRsa paramCkRsa, long paramLong2, CkByteData paramCkByteData1, long paramLong3, CkByteData paramCkByteData2);
/*       */   
/*       */   public static final native boolean CkRsa_OpenSslVerifyBytesENC(long paramLong1, CkRsa paramCkRsa, String paramString, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkRsa_OpenSslVerifyString(long paramLong1, CkRsa paramCkRsa, long paramLong2, CkByteData paramCkByteData, long paramLong3, CkString paramCkString);
/*       */   
/*       */   public static final native String CkRsa_openSslVerifyString(long paramLong1, CkRsa paramCkRsa, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkRsa_OpenSslVerifyStringENC(long paramLong1, CkRsa paramCkRsa, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkRsa_openSslVerifyStringENC(long paramLong, CkRsa paramCkRsa, String paramString);
/*       */   
/*       */   public static final native boolean CkRsa_SaveLastError(long paramLong, CkRsa paramCkRsa, String paramString);
/*       */   
/*       */   public static final native boolean CkRsa_SetX509Cert(long paramLong1, CkRsa paramCkRsa, long paramLong2, CkCert paramCkCert, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkRsa_SignBytes(long paramLong1, CkRsa paramCkRsa, long paramLong2, CkByteData paramCkByteData1, String paramString, long paramLong3, CkByteData paramCkByteData2);
/*       */   
/*       */   public static final native boolean CkRsa_SignBytesENC(long paramLong1, CkRsa paramCkRsa, long paramLong2, CkByteData paramCkByteData, String paramString, long paramLong3, CkString paramCkString);
/*       */   
/*       */   public static final native String CkRsa_signBytesENC(long paramLong1, CkRsa paramCkRsa, long paramLong2, CkByteData paramCkByteData, String paramString);
/*       */   
/*       */   public static final native boolean CkRsa_SignHash(long paramLong1, CkRsa paramCkRsa, long paramLong2, CkByteData paramCkByteData1, String paramString, long paramLong3, CkByteData paramCkByteData2);
/*       */   
/*       */   public static final native boolean CkRsa_SignHashENC(long paramLong1, CkRsa paramCkRsa, String paramString1, String paramString2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkRsa_signHashENC(long paramLong, CkRsa paramCkRsa, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkRsa_SignString(long paramLong1, CkRsa paramCkRsa, String paramString1, String paramString2, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkRsa_SignStringENC(long paramLong1, CkRsa paramCkRsa, String paramString1, String paramString2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkRsa_signStringENC(long paramLong, CkRsa paramCkRsa, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkRsa_SnkToXml(long paramLong1, CkRsa paramCkRsa, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkRsa_snkToXml(long paramLong, CkRsa paramCkRsa, String paramString);
/*       */   
/*       */   public static final native boolean CkRsa_UnlockComponent(long paramLong, CkRsa paramCkRsa, String paramString);
/*       */   
/*       */   public static final native boolean CkRsa_VerifyBytes(long paramLong1, CkRsa paramCkRsa, long paramLong2, CkByteData paramCkByteData1, String paramString, long paramLong3, CkByteData paramCkByteData2);
/*       */   
/*       */   public static final native boolean CkRsa_VerifyBytesENC(long paramLong1, CkRsa paramCkRsa, long paramLong2, CkByteData paramCkByteData, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkRsa_VerifyHash(long paramLong1, CkRsa paramCkRsa, long paramLong2, CkByteData paramCkByteData1, String paramString, long paramLong3, CkByteData paramCkByteData2);
/*       */   
/*       */   public static final native boolean CkRsa_VerifyHashENC(long paramLong, CkRsa paramCkRsa, String paramString1, String paramString2, String paramString3);
/*       */   
/*       */   public static final native boolean CkRsa_VerifyPrivateKey(long paramLong, CkRsa paramCkRsa, String paramString);
/*       */   
/*       */   public static final native boolean CkRsa_VerifyString(long paramLong1, CkRsa paramCkRsa, String paramString1, String paramString2, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkRsa_VerifyStringENC(long paramLong, CkRsa paramCkRsa, String paramString1, String paramString2, String paramString3);
/*       */   
/*       */   public static final native long new_CkRss();
/*       */   
/*       */   public static final native void delete_CkRss(long paramLong);
/*       */   
/*       */   public static final native void CkRss_LastErrorXml(long paramLong1, CkRss paramCkRss, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkRss_LastErrorHtml(long paramLong1, CkRss paramCkRss, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkRss_LastErrorText(long paramLong1, CkRss paramCkRss, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkRss_put_EventCallbackObject(long paramLong1, CkRss paramCkRss, long paramLong2, CkBaseProgress paramCkBaseProgress);
/*       */   
/*       */   public static final native void CkRss_get_DebugLogFilePath(long paramLong1, CkRss paramCkRss, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkRss_debugLogFilePath(long paramLong, CkRss paramCkRss);
/*       */   
/*       */   public static final native void CkRss_put_DebugLogFilePath(long paramLong, CkRss paramCkRss, String paramString);
/*       */   
/*       */   public static final native void CkRss_get_LastErrorHtml(long paramLong1, CkRss paramCkRss, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkRss_lastErrorHtml(long paramLong, CkRss paramCkRss);
/*       */   
/*       */   public static final native void CkRss_get_LastErrorText(long paramLong1, CkRss paramCkRss, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkRss_lastErrorText(long paramLong, CkRss paramCkRss);
/*       */   
/*       */   public static final native void CkRss_get_LastErrorXml(long paramLong1, CkRss paramCkRss, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkRss_lastErrorXml(long paramLong, CkRss paramCkRss);
/*       */   
/*       */   public static final native boolean CkRss_get_LastMethodSuccess(long paramLong, CkRss paramCkRss);
/*       */   
/*       */   public static final native void CkRss_put_LastMethodSuccess(long paramLong, CkRss paramCkRss, boolean paramBoolean);
/*       */   
/*       */   public static final native int CkRss_get_NumChannels(long paramLong, CkRss paramCkRss);
/*       */   
/*       */   public static final native int CkRss_get_NumItems(long paramLong, CkRss paramCkRss);
/*       */   
/*       */   public static final native boolean CkRss_get_VerboseLogging(long paramLong, CkRss paramCkRss);
/*       */   
/*       */   public static final native void CkRss_put_VerboseLogging(long paramLong, CkRss paramCkRss, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkRss_get_Version(long paramLong1, CkRss paramCkRss, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkRss_version(long paramLong, CkRss paramCkRss);
/*       */   
/*       */   public static final native long CkRss_AddNewChannel(long paramLong, CkRss paramCkRss);
/*       */   
/*       */   public static final native long CkRss_AddNewImage(long paramLong, CkRss paramCkRss);
/*       */   
/*       */   public static final native long CkRss_AddNewItem(long paramLong, CkRss paramCkRss);
/*       */   
/*       */   public static final native boolean CkRss_DownloadRss(long paramLong, CkRss paramCkRss, String paramString);
/*       */   
/*       */   public static final native long CkRss_DownloadRssAsync(long paramLong, CkRss paramCkRss, String paramString);
/*       */   
/*       */   public static final native boolean CkRss_GetAttr(long paramLong1, CkRss paramCkRss, String paramString1, String paramString2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkRss_getAttr(long paramLong, CkRss paramCkRss, String paramString1, String paramString2);
/*       */   
/*       */   public static final native String CkRss_attr(long paramLong, CkRss paramCkRss, String paramString1, String paramString2);
/*       */   
/*       */   public static final native long CkRss_GetChannel(long paramLong, CkRss paramCkRss, int paramInt);
/*       */   
/*       */   public static final native int CkRss_GetCount(long paramLong, CkRss paramCkRss, String paramString);
/*       */   
/*       */   public static final native boolean CkRss_GetDate(long paramLong1, CkRss paramCkRss, String paramString, long paramLong2, SYSTEMTIME paramSYSTEMTIME);
/*       */   
/*       */   public static final native boolean CkRss_GetDateStr(long paramLong1, CkRss paramCkRss, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkRss_getDateStr(long paramLong, CkRss paramCkRss, String paramString);
/*       */   
/*       */   public static final native String CkRss_dateStr(long paramLong, CkRss paramCkRss, String paramString);
/*       */   
/*       */   public static final native long CkRss_GetImage(long paramLong, CkRss paramCkRss);
/*       */   
/*       */   public static final native int CkRss_GetInt(long paramLong, CkRss paramCkRss, String paramString);
/*       */   
/*       */   public static final native long CkRss_GetItem(long paramLong, CkRss paramCkRss, int paramInt);
/*       */   
/*       */   public static final native boolean CkRss_GetString(long paramLong1, CkRss paramCkRss, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkRss_getString(long paramLong, CkRss paramCkRss, String paramString);
/*       */   
/*       */   public static final native String CkRss_string(long paramLong, CkRss paramCkRss, String paramString);
/*       */   
/*       */   public static final native boolean CkRss_LoadRssFile(long paramLong, CkRss paramCkRss, String paramString);
/*       */   
/*       */   public static final native boolean CkRss_LoadRssString(long paramLong, CkRss paramCkRss, String paramString);
/*       */   
/*       */   public static final native boolean CkRss_MGetAttr(long paramLong1, CkRss paramCkRss, String paramString1, int paramInt, String paramString2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkRss_mGetAttr(long paramLong, CkRss paramCkRss, String paramString1, int paramInt, String paramString2);
/*       */   
/*       */   public static final native boolean CkRss_MGetString(long paramLong1, CkRss paramCkRss, String paramString, int paramInt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkRss_mGetString(long paramLong, CkRss paramCkRss, String paramString, int paramInt);
/*       */   
/*       */   public static final native boolean CkRss_MSetAttr(long paramLong, CkRss paramCkRss, String paramString1, int paramInt, String paramString2, String paramString3);
/*       */   
/*       */   public static final native boolean CkRss_MSetString(long paramLong, CkRss paramCkRss, String paramString1, int paramInt, String paramString2);
/*       */   
/*       */   public static final native void CkRss_NewRss(long paramLong, CkRss paramCkRss);
/*       */   
/*       */   public static final native void CkRss_Remove(long paramLong, CkRss paramCkRss, String paramString);
/*       */   
/*       */   public static final native boolean CkRss_SaveLastError(long paramLong, CkRss paramCkRss, String paramString);
/*       */   
/*       */   public static final native void CkRss_SetAttr(long paramLong, CkRss paramCkRss, String paramString1, String paramString2, String paramString3);
/*       */   
/*       */   public static final native void CkRss_SetDate(long paramLong1, CkRss paramCkRss, String paramString, long paramLong2, SYSTEMTIME paramSYSTEMTIME);
/*       */   
/*       */   public static final native void CkRss_SetDateNow(long paramLong, CkRss paramCkRss, String paramString);
/*       */   
/*       */   public static final native void CkRss_SetDateStr(long paramLong, CkRss paramCkRss, String paramString1, String paramString2);
/*       */   
/*       */   public static final native void CkRss_SetInt(long paramLong, CkRss paramCkRss, String paramString, int paramInt);
/*       */   
/*       */   public static final native void CkRss_SetString(long paramLong, CkRss paramCkRss, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkRss_ToXmlString(long paramLong1, CkRss paramCkRss, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkRss_toXmlString(long paramLong, CkRss paramCkRss);
/*       */   
/*       */   public static final native long new_CkScp();
/*       */   
/*       */   public static final native void delete_CkScp(long paramLong);
/*       */   
/*       */   public static final native void CkScp_LastErrorXml(long paramLong1, CkScp paramCkScp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkScp_LastErrorHtml(long paramLong1, CkScp paramCkScp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkScp_LastErrorText(long paramLong1, CkScp paramCkScp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkScp_put_EventCallbackObject(long paramLong1, CkScp paramCkScp, long paramLong2, CkBaseProgress paramCkBaseProgress);
/*       */   
/*       */   public static final native boolean CkScp_get_AbortCurrent(long paramLong, CkScp paramCkScp);
/*       */   
/*       */   public static final native void CkScp_put_AbortCurrent(long paramLong, CkScp paramCkScp, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkScp_get_DebugLogFilePath(long paramLong1, CkScp paramCkScp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkScp_debugLogFilePath(long paramLong, CkScp paramCkScp);
/*       */   
/*       */   public static final native void CkScp_put_DebugLogFilePath(long paramLong, CkScp paramCkScp, String paramString);
/*       */   
/*       */   public static final native int CkScp_get_HeartbeatMs(long paramLong, CkScp paramCkScp);
/*       */   
/*       */   public static final native void CkScp_put_HeartbeatMs(long paramLong, CkScp paramCkScp, int paramInt);
/*       */   
/*       */   public static final native void CkScp_get_LastErrorHtml(long paramLong1, CkScp paramCkScp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkScp_lastErrorHtml(long paramLong, CkScp paramCkScp);
/*       */   
/*       */   public static final native void CkScp_get_LastErrorText(long paramLong1, CkScp paramCkScp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkScp_lastErrorText(long paramLong, CkScp paramCkScp);
/*       */   
/*       */   public static final native void CkScp_get_LastErrorXml(long paramLong1, CkScp paramCkScp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkScp_lastErrorXml(long paramLong, CkScp paramCkScp);
/*       */   
/*       */   public static final native boolean CkScp_get_LastMethodSuccess(long paramLong, CkScp paramCkScp);
/*       */   
/*       */   public static final native void CkScp_put_LastMethodSuccess(long paramLong, CkScp paramCkScp, boolean paramBoolean);
/*       */   
/*       */   public static final native int CkScp_get_PercentDoneScale(long paramLong, CkScp paramCkScp);
/*       */   
/*       */   public static final native void CkScp_put_PercentDoneScale(long paramLong, CkScp paramCkScp, int paramInt);
/*       */   
/*       */   public static final native void CkScp_get_SyncedFiles(long paramLong1, CkScp paramCkScp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkScp_syncedFiles(long paramLong, CkScp paramCkScp);
/*       */   
/*       */   public static final native void CkScp_put_SyncedFiles(long paramLong, CkScp paramCkScp, String paramString);
/*       */   
/*       */   public static final native void CkScp_get_SyncMustMatch(long paramLong1, CkScp paramCkScp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkScp_syncMustMatch(long paramLong, CkScp paramCkScp);
/*       */   
/*       */   public static final native void CkScp_put_SyncMustMatch(long paramLong, CkScp paramCkScp, String paramString);
/*       */   
/*       */   public static final native void CkScp_get_SyncMustMatchDir(long paramLong1, CkScp paramCkScp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkScp_syncMustMatchDir(long paramLong, CkScp paramCkScp);
/*       */   
/*       */   public static final native void CkScp_put_SyncMustMatchDir(long paramLong, CkScp paramCkScp, String paramString);
/*       */   
/*       */   public static final native void CkScp_get_SyncMustNotMatch(long paramLong1, CkScp paramCkScp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkScp_syncMustNotMatch(long paramLong, CkScp paramCkScp);
/*       */   
/*       */   public static final native void CkScp_put_SyncMustNotMatch(long paramLong, CkScp paramCkScp, String paramString);
/*       */   
/*       */   public static final native void CkScp_get_SyncMustNotMatchDir(long paramLong1, CkScp paramCkScp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkScp_syncMustNotMatchDir(long paramLong, CkScp paramCkScp);
/*       */   
/*       */   public static final native void CkScp_put_SyncMustNotMatchDir(long paramLong, CkScp paramCkScp, String paramString);
/*       */   
/*       */   public static final native boolean CkScp_get_VerboseLogging(long paramLong, CkScp paramCkScp);
/*       */   
/*       */   public static final native void CkScp_put_VerboseLogging(long paramLong, CkScp paramCkScp, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkScp_get_Version(long paramLong1, CkScp paramCkScp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkScp_version(long paramLong, CkScp paramCkScp);
/*       */   
/*       */   public static final native boolean CkScp_DownloadBinary(long paramLong1, CkScp paramCkScp, String paramString, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native long CkScp_DownloadBinaryAsync(long paramLong, CkScp paramCkScp, String paramString);
/*       */   
/*       */   public static final native boolean CkScp_DownloadBinaryEncoded(long paramLong1, CkScp paramCkScp, String paramString1, String paramString2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkScp_downloadBinaryEncoded(long paramLong, CkScp paramCkScp, String paramString1, String paramString2);
/*       */   
/*       */   public static final native long CkScp_DownloadBinaryEncodedAsync(long paramLong, CkScp paramCkScp, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkScp_DownloadFile(long paramLong, CkScp paramCkScp, String paramString1, String paramString2);
/*       */   
/*       */   public static final native long CkScp_DownloadFileAsync(long paramLong, CkScp paramCkScp, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkScp_DownloadString(long paramLong1, CkScp paramCkScp, String paramString1, String paramString2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkScp_downloadString(long paramLong, CkScp paramCkScp, String paramString1, String paramString2);
/*       */   
/*       */   public static final native long CkScp_DownloadStringAsync(long paramLong, CkScp paramCkScp, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkScp_SaveLastError(long paramLong, CkScp paramCkScp, String paramString);
/*       */   
/*       */   public static final native boolean CkScp_SyncTreeDownload(long paramLong, CkScp paramCkScp, String paramString1, String paramString2, int paramInt, boolean paramBoolean);
/*       */   
/*       */   public static final native long CkScp_SyncTreeDownloadAsync(long paramLong, CkScp paramCkScp, String paramString1, String paramString2, int paramInt, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkScp_SyncTreeUpload(long paramLong, CkScp paramCkScp, String paramString1, String paramString2, int paramInt, boolean paramBoolean);
/*       */   
/*       */   public static final native long CkScp_SyncTreeUploadAsync(long paramLong, CkScp paramCkScp, String paramString1, String paramString2, int paramInt, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkScp_UploadBinary(long paramLong1, CkScp paramCkScp, String paramString, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native long CkScp_UploadBinaryAsync(long paramLong1, CkScp paramCkScp, String paramString, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkScp_UploadBinaryEncoded(long paramLong, CkScp paramCkScp, String paramString1, String paramString2, String paramString3);
/*       */   
/*       */   public static final native long CkScp_UploadBinaryEncodedAsync(long paramLong, CkScp paramCkScp, String paramString1, String paramString2, String paramString3);
/*       */   
/*       */   public static final native boolean CkScp_UploadFile(long paramLong, CkScp paramCkScp, String paramString1, String paramString2);
/*       */   
/*       */   public static final native long CkScp_UploadFileAsync(long paramLong, CkScp paramCkScp, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkScp_UploadString(long paramLong, CkScp paramCkScp, String paramString1, String paramString2, String paramString3);
/*       */   
/*       */   public static final native long CkScp_UploadStringAsync(long paramLong, CkScp paramCkScp, String paramString1, String paramString2, String paramString3);
/*       */   
/*       */   public static final native boolean CkScp_UseSsh(long paramLong1, CkScp paramCkScp, long paramLong2, CkSsh paramCkSsh);
/*       */   
/*       */   public static final native long new_CkSFtp();
/*       */   
/*       */   public static final native void delete_CkSFtp(long paramLong);
/*       */   
/*       */   public static final native void CkSFtp_LastErrorXml(long paramLong1, CkSFtp paramCkSFtp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkSFtp_LastErrorHtml(long paramLong1, CkSFtp paramCkSFtp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkSFtp_LastErrorText(long paramLong1, CkSFtp paramCkSFtp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkSFtp_put_EventCallbackObject(long paramLong1, CkSFtp paramCkSFtp, long paramLong2, CkSFtpProgress paramCkSFtpProgress);
/*       */   
/*       */   public static final native boolean CkSFtp_get_AbortCurrent(long paramLong, CkSFtp paramCkSFtp);
/*       */   
/*       */   public static final native void CkSFtp_put_AbortCurrent(long paramLong, CkSFtp paramCkSFtp, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkSFtp_get_AccumulateBuffer(long paramLong1, CkSFtp paramCkSFtp, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native int CkSFtp_get_AuthFailReason(long paramLong, CkSFtp paramCkSFtp);
/*       */   
/*       */   public static final native int CkSFtp_get_BandwidthThrottleDown(long paramLong, CkSFtp paramCkSFtp);
/*       */   
/*       */   public static final native void CkSFtp_put_BandwidthThrottleDown(long paramLong, CkSFtp paramCkSFtp, int paramInt);
/*       */   
/*       */   public static final native int CkSFtp_get_BandwidthThrottleUp(long paramLong, CkSFtp paramCkSFtp);
/*       */   
/*       */   public static final native void CkSFtp_put_BandwidthThrottleUp(long paramLong, CkSFtp paramCkSFtp, int paramInt);
/*       */   
/*       */   public static final native void CkSFtp_get_ClientIdentifier(long paramLong1, CkSFtp paramCkSFtp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSFtp_clientIdentifier(long paramLong, CkSFtp paramCkSFtp);
/*       */   
/*       */   public static final native void CkSFtp_put_ClientIdentifier(long paramLong, CkSFtp paramCkSFtp, String paramString);
/*       */   
/*       */   public static final native void CkSFtp_get_ClientIpAddress(long paramLong1, CkSFtp paramCkSFtp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSFtp_clientIpAddress(long paramLong, CkSFtp paramCkSFtp);
/*       */   
/*       */   public static final native void CkSFtp_put_ClientIpAddress(long paramLong, CkSFtp paramCkSFtp, String paramString);
/*       */   
/*       */   public static final native int CkSFtp_get_ConnectTimeoutMs(long paramLong, CkSFtp paramCkSFtp);
/*       */   
/*       */   public static final native void CkSFtp_put_ConnectTimeoutMs(long paramLong, CkSFtp paramCkSFtp, int paramInt);
/*       */   
/*       */   public static final native void CkSFtp_get_DebugLogFilePath(long paramLong1, CkSFtp paramCkSFtp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSFtp_debugLogFilePath(long paramLong, CkSFtp paramCkSFtp);
/*       */   
/*       */   public static final native void CkSFtp_put_DebugLogFilePath(long paramLong, CkSFtp paramCkSFtp, String paramString);
/*       */   
/*       */   public static final native int CkSFtp_get_DisconnectCode(long paramLong, CkSFtp paramCkSFtp);
/*       */   
/*       */   public static final native void CkSFtp_get_DisconnectReason(long paramLong1, CkSFtp paramCkSFtp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSFtp_disconnectReason(long paramLong, CkSFtp paramCkSFtp);
/*       */   
/*       */   public static final native boolean CkSFtp_get_EnableCache(long paramLong, CkSFtp paramCkSFtp);
/*       */   
/*       */   public static final native void CkSFtp_put_EnableCache(long paramLong, CkSFtp paramCkSFtp, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkSFtp_get_EnableCompression(long paramLong, CkSFtp paramCkSFtp);
/*       */   
/*       */   public static final native void CkSFtp_put_EnableCompression(long paramLong, CkSFtp paramCkSFtp, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkSFtp_get_FilenameCharset(long paramLong1, CkSFtp paramCkSFtp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSFtp_filenameCharset(long paramLong, CkSFtp paramCkSFtp);
/*       */   
/*       */   public static final native void CkSFtp_put_FilenameCharset(long paramLong, CkSFtp paramCkSFtp, String paramString);
/*       */   
/*       */   public static final native void CkSFtp_get_ForceCipher(long paramLong1, CkSFtp paramCkSFtp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSFtp_forceCipher(long paramLong, CkSFtp paramCkSFtp);
/*       */   
/*       */   public static final native void CkSFtp_put_ForceCipher(long paramLong, CkSFtp paramCkSFtp, String paramString);
/*       */   
/*       */   public static final native boolean CkSFtp_get_ForceV3(long paramLong, CkSFtp paramCkSFtp);
/*       */   
/*       */   public static final native void CkSFtp_put_ForceV3(long paramLong, CkSFtp paramCkSFtp, boolean paramBoolean);
/*       */   
/*       */   public static final native int CkSFtp_get_HeartbeatMs(long paramLong, CkSFtp paramCkSFtp);
/*       */   
/*       */   public static final native void CkSFtp_put_HeartbeatMs(long paramLong, CkSFtp paramCkSFtp, int paramInt);
/*       */   
/*       */   public static final native void CkSFtp_get_HostKeyAlg(long paramLong1, CkSFtp paramCkSFtp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSFtp_hostKeyAlg(long paramLong, CkSFtp paramCkSFtp);
/*       */   
/*       */   public static final native void CkSFtp_put_HostKeyAlg(long paramLong, CkSFtp paramCkSFtp, String paramString);
/*       */   
/*       */   public static final native void CkSFtp_get_HostKeyFingerprint(long paramLong1, CkSFtp paramCkSFtp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSFtp_hostKeyFingerprint(long paramLong, CkSFtp paramCkSFtp);
/*       */   
/*       */   public static final native void CkSFtp_get_HttpProxyAuthMethod(long paramLong1, CkSFtp paramCkSFtp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSFtp_httpProxyAuthMethod(long paramLong, CkSFtp paramCkSFtp);
/*       */   
/*       */   public static final native void CkSFtp_put_HttpProxyAuthMethod(long paramLong, CkSFtp paramCkSFtp, String paramString);
/*       */   
/*       */   public static final native void CkSFtp_get_HttpProxyDomain(long paramLong1, CkSFtp paramCkSFtp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSFtp_httpProxyDomain(long paramLong, CkSFtp paramCkSFtp);
/*       */   
/*       */   public static final native void CkSFtp_put_HttpProxyDomain(long paramLong, CkSFtp paramCkSFtp, String paramString);
/*       */   
/*       */   public static final native void CkSFtp_get_HttpProxyHostname(long paramLong1, CkSFtp paramCkSFtp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSFtp_httpProxyHostname(long paramLong, CkSFtp paramCkSFtp);
/*       */   
/*       */   public static final native void CkSFtp_put_HttpProxyHostname(long paramLong, CkSFtp paramCkSFtp, String paramString);
/*       */   
/*       */   public static final native void CkSFtp_get_HttpProxyPassword(long paramLong1, CkSFtp paramCkSFtp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSFtp_httpProxyPassword(long paramLong, CkSFtp paramCkSFtp);
/*       */   
/*       */   public static final native void CkSFtp_put_HttpProxyPassword(long paramLong, CkSFtp paramCkSFtp, String paramString);
/*       */   
/*       */   public static final native int CkSFtp_get_HttpProxyPort(long paramLong, CkSFtp paramCkSFtp);
/*       */   
/*       */   public static final native void CkSFtp_put_HttpProxyPort(long paramLong, CkSFtp paramCkSFtp, int paramInt);
/*       */   
/*       */   public static final native void CkSFtp_get_HttpProxyUsername(long paramLong1, CkSFtp paramCkSFtp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSFtp_httpProxyUsername(long paramLong, CkSFtp paramCkSFtp);
/*       */   
/*       */   public static final native void CkSFtp_put_HttpProxyUsername(long paramLong, CkSFtp paramCkSFtp, String paramString);
/*       */   
/*       */   public static final native int CkSFtp_get_IdleTimeoutMs(long paramLong, CkSFtp paramCkSFtp);
/*       */   
/*       */   public static final native void CkSFtp_put_IdleTimeoutMs(long paramLong, CkSFtp paramCkSFtp, int paramInt);
/*       */   
/*       */   public static final native boolean CkSFtp_get_IncludeDotDirs(long paramLong, CkSFtp paramCkSFtp);
/*       */   
/*       */   public static final native void CkSFtp_put_IncludeDotDirs(long paramLong, CkSFtp paramCkSFtp, boolean paramBoolean);
/*       */   
/*       */   public static final native int CkSFtp_get_InitializeFailCode(long paramLong, CkSFtp paramCkSFtp);
/*       */   
/*       */   public static final native void CkSFtp_get_InitializeFailReason(long paramLong1, CkSFtp paramCkSFtp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSFtp_initializeFailReason(long paramLong, CkSFtp paramCkSFtp);
/*       */   
/*       */   public static final native boolean CkSFtp_get_IsConnected(long paramLong, CkSFtp paramCkSFtp);
/*       */   
/*       */   public static final native boolean CkSFtp_get_KeepSessionLog(long paramLong, CkSFtp paramCkSFtp);
/*       */   
/*       */   public static final native void CkSFtp_put_KeepSessionLog(long paramLong, CkSFtp paramCkSFtp, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkSFtp_get_LastErrorHtml(long paramLong1, CkSFtp paramCkSFtp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSFtp_lastErrorHtml(long paramLong, CkSFtp paramCkSFtp);
/*       */   
/*       */   public static final native void CkSFtp_get_LastErrorText(long paramLong1, CkSFtp paramCkSFtp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSFtp_lastErrorText(long paramLong, CkSFtp paramCkSFtp);
/*       */   
/*       */   public static final native void CkSFtp_get_LastErrorXml(long paramLong1, CkSFtp paramCkSFtp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSFtp_lastErrorXml(long paramLong, CkSFtp paramCkSFtp);
/*       */   
/*       */   public static final native boolean CkSFtp_get_LastMethodSuccess(long paramLong, CkSFtp paramCkSFtp);
/*       */   
/*       */   public static final native void CkSFtp_put_LastMethodSuccess(long paramLong, CkSFtp paramCkSFtp, boolean paramBoolean);
/*       */   
/*       */   public static final native int CkSFtp_get_MaxPacketSize(long paramLong, CkSFtp paramCkSFtp);
/*       */   
/*       */   public static final native void CkSFtp_put_MaxPacketSize(long paramLong, CkSFtp paramCkSFtp, int paramInt);
/*       */   
/*       */   public static final native boolean CkSFtp_get_PasswordChangeRequested(long paramLong, CkSFtp paramCkSFtp);
/*       */   
/*       */   public static final native int CkSFtp_get_PercentDoneScale(long paramLong, CkSFtp paramCkSFtp);
/*       */   
/*       */   public static final native void CkSFtp_put_PercentDoneScale(long paramLong, CkSFtp paramCkSFtp, int paramInt);
/*       */   
/*       */   public static final native boolean CkSFtp_get_PreferIpv6(long paramLong, CkSFtp paramCkSFtp);
/*       */   
/*       */   public static final native void CkSFtp_put_PreferIpv6(long paramLong, CkSFtp paramCkSFtp, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkSFtp_get_PreserveDate(long paramLong, CkSFtp paramCkSFtp);
/*       */   
/*       */   public static final native void CkSFtp_put_PreserveDate(long paramLong, CkSFtp paramCkSFtp, boolean paramBoolean);
/*       */   
/*       */   public static final native int CkSFtp_get_ProtocolVersion(long paramLong, CkSFtp paramCkSFtp);
/*       */   
/*       */   public static final native void CkSFtp_get_ReadDirMustMatch(long paramLong1, CkSFtp paramCkSFtp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSFtp_readDirMustMatch(long paramLong, CkSFtp paramCkSFtp);
/*       */   
/*       */   public static final native void CkSFtp_put_ReadDirMustMatch(long paramLong, CkSFtp paramCkSFtp, String paramString);
/*       */   
/*       */   public static final native void CkSFtp_get_ReadDirMustNotMatch(long paramLong1, CkSFtp paramCkSFtp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSFtp_readDirMustNotMatch(long paramLong, CkSFtp paramCkSFtp);
/*       */   
/*       */   public static final native void CkSFtp_put_ReadDirMustNotMatch(long paramLong, CkSFtp paramCkSFtp, String paramString);
/*       */   
/*       */   public static final native void CkSFtp_get_ServerIdentifier(long paramLong1, CkSFtp paramCkSFtp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSFtp_serverIdentifier(long paramLong, CkSFtp paramCkSFtp);
/*       */   
/*       */   public static final native void CkSFtp_get_SessionLog(long paramLong1, CkSFtp paramCkSFtp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSFtp_sessionLog(long paramLong, CkSFtp paramCkSFtp);
/*       */   
/*       */   public static final native void CkSFtp_get_SocksHostname(long paramLong1, CkSFtp paramCkSFtp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSFtp_socksHostname(long paramLong, CkSFtp paramCkSFtp);
/*       */   
/*       */   public static final native void CkSFtp_put_SocksHostname(long paramLong, CkSFtp paramCkSFtp, String paramString);
/*       */   
/*       */   public static final native void CkSFtp_get_SocksPassword(long paramLong1, CkSFtp paramCkSFtp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSFtp_socksPassword(long paramLong, CkSFtp paramCkSFtp);
/*       */   
/*       */   public static final native void CkSFtp_put_SocksPassword(long paramLong, CkSFtp paramCkSFtp, String paramString);
/*       */   
/*       */   public static final native int CkSFtp_get_SocksPort(long paramLong, CkSFtp paramCkSFtp);
/*       */   
/*       */   public static final native void CkSFtp_put_SocksPort(long paramLong, CkSFtp paramCkSFtp, int paramInt);
/*       */   
/*       */   public static final native void CkSFtp_get_SocksUsername(long paramLong1, CkSFtp paramCkSFtp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSFtp_socksUsername(long paramLong, CkSFtp paramCkSFtp);
/*       */   
/*       */   public static final native void CkSFtp_put_SocksUsername(long paramLong, CkSFtp paramCkSFtp, String paramString);
/*       */   
/*       */   public static final native int CkSFtp_get_SocksVersion(long paramLong, CkSFtp paramCkSFtp);
/*       */   
/*       */   public static final native void CkSFtp_put_SocksVersion(long paramLong, CkSFtp paramCkSFtp, int paramInt);
/*       */   
/*       */   public static final native int CkSFtp_get_SoRcvBuf(long paramLong, CkSFtp paramCkSFtp);
/*       */   
/*       */   public static final native void CkSFtp_put_SoRcvBuf(long paramLong, CkSFtp paramCkSFtp, int paramInt);
/*       */   
/*       */   public static final native int CkSFtp_get_SoSndBuf(long paramLong, CkSFtp paramCkSFtp);
/*       */   
/*       */   public static final native void CkSFtp_put_SoSndBuf(long paramLong, CkSFtp paramCkSFtp, int paramInt);
/*       */   
/*       */   public static final native void CkSFtp_get_SyncDirectives(long paramLong1, CkSFtp paramCkSFtp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSFtp_syncDirectives(long paramLong, CkSFtp paramCkSFtp);
/*       */   
/*       */   public static final native void CkSFtp_put_SyncDirectives(long paramLong, CkSFtp paramCkSFtp, String paramString);
/*       */   
/*       */   public static final native void CkSFtp_get_SyncedFiles(long paramLong1, CkSFtp paramCkSFtp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSFtp_syncedFiles(long paramLong, CkSFtp paramCkSFtp);
/*       */   
/*       */   public static final native void CkSFtp_put_SyncedFiles(long paramLong, CkSFtp paramCkSFtp, String paramString);
/*       */   
/*       */   public static final native void CkSFtp_get_SyncMustMatch(long paramLong1, CkSFtp paramCkSFtp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSFtp_syncMustMatch(long paramLong, CkSFtp paramCkSFtp);
/*       */   
/*       */   public static final native void CkSFtp_put_SyncMustMatch(long paramLong, CkSFtp paramCkSFtp, String paramString);
/*       */   
/*       */   public static final native void CkSFtp_get_SyncMustNotMatch(long paramLong1, CkSFtp paramCkSFtp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSFtp_syncMustNotMatch(long paramLong, CkSFtp paramCkSFtp);
/*       */   
/*       */   public static final native void CkSFtp_put_SyncMustNotMatch(long paramLong, CkSFtp paramCkSFtp, String paramString);
/*       */   
/*       */   public static final native boolean CkSFtp_get_TcpNoDelay(long paramLong, CkSFtp paramCkSFtp);
/*       */   
/*       */   public static final native void CkSFtp_put_TcpNoDelay(long paramLong, CkSFtp paramCkSFtp, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkSFtp_get_UncommonOptions(long paramLong1, CkSFtp paramCkSFtp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSFtp_uncommonOptions(long paramLong, CkSFtp paramCkSFtp);
/*       */   
/*       */   public static final native void CkSFtp_put_UncommonOptions(long paramLong, CkSFtp paramCkSFtp, String paramString);
/*       */   
/*       */   public static final native int CkSFtp_get_UploadChunkSize(long paramLong, CkSFtp paramCkSFtp);
/*       */   
/*       */   public static final native void CkSFtp_put_UploadChunkSize(long paramLong, CkSFtp paramCkSFtp, int paramInt);
/*       */   
/*       */   public static final native boolean CkSFtp_get_UtcMode(long paramLong, CkSFtp paramCkSFtp);
/*       */   
/*       */   public static final native void CkSFtp_put_UtcMode(long paramLong, CkSFtp paramCkSFtp, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkSFtp_get_VerboseLogging(long paramLong, CkSFtp paramCkSFtp);
/*       */   
/*       */   public static final native void CkSFtp_put_VerboseLogging(long paramLong, CkSFtp paramCkSFtp, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkSFtp_get_Version(long paramLong1, CkSFtp paramCkSFtp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSFtp_version(long paramLong, CkSFtp paramCkSFtp);
/*       */   
/*       */   public static final native long CkSFtp_get_XferByteCount(long paramLong, CkSFtp paramCkSFtp);
/*       */   
/*       */   public static final native int CkSFtp_AccumulateBytes(long paramLong, CkSFtp paramCkSFtp, String paramString, int paramInt);
/*       */   
/*       */   public static final native long CkSFtp_AccumulateBytesAsync(long paramLong, CkSFtp paramCkSFtp, String paramString, int paramInt);
/*       */   
/*       */   public static final native boolean CkSFtp_Add64(long paramLong1, CkSFtp paramCkSFtp, String paramString1, String paramString2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSFtp_add64(long paramLong, CkSFtp paramCkSFtp, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkSFtp_AuthenticatePk(long paramLong1, CkSFtp paramCkSFtp, String paramString, long paramLong2, CkSshKey paramCkSshKey);
/*       */   
/*       */   public static final native long CkSFtp_AuthenticatePkAsync(long paramLong1, CkSFtp paramCkSFtp, String paramString, long paramLong2, CkSshKey paramCkSshKey);
/*       */   
/*       */   public static final native boolean CkSFtp_AuthenticatePw(long paramLong, CkSFtp paramCkSFtp, String paramString1, String paramString2);
/*       */   
/*       */   public static final native long CkSFtp_AuthenticatePwAsync(long paramLong, CkSFtp paramCkSFtp, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkSFtp_AuthenticatePwPk(long paramLong1, CkSFtp paramCkSFtp, String paramString1, String paramString2, long paramLong2, CkSshKey paramCkSshKey);
/*       */   
/*       */   public static final native long CkSFtp_AuthenticatePwPkAsync(long paramLong1, CkSFtp paramCkSFtp, String paramString1, String paramString2, long paramLong2, CkSshKey paramCkSshKey);
/*       */   
/*       */   public static final native boolean CkSFtp_AuthenticateSecPw(long paramLong1, CkSFtp paramCkSFtp, long paramLong2, CkSecureString paramCkSecureString1, long paramLong3, CkSecureString paramCkSecureString2);
/*       */   
/*       */   public static final native long CkSFtp_AuthenticateSecPwAsync(long paramLong1, CkSFtp paramCkSFtp, long paramLong2, CkSecureString paramCkSecureString1, long paramLong3, CkSecureString paramCkSecureString2);
/*       */   
/*       */   public static final native boolean CkSFtp_AuthenticateSecPwPk(long paramLong1, CkSFtp paramCkSFtp, long paramLong2, CkSecureString paramCkSecureString1, long paramLong3, CkSecureString paramCkSecureString2, long paramLong4, CkSshKey paramCkSshKey);
/*       */   
/*       */   public static final native long CkSFtp_AuthenticateSecPwPkAsync(long paramLong1, CkSFtp paramCkSFtp, long paramLong2, CkSecureString paramCkSecureString1, long paramLong3, CkSecureString paramCkSecureString2, long paramLong4, CkSshKey paramCkSshKey);
/*       */   
/*       */   public static final native void CkSFtp_ClearAccumulateBuffer(long paramLong, CkSFtp paramCkSFtp);
/*       */   
/*       */   public static final native void CkSFtp_ClearCache(long paramLong, CkSFtp paramCkSFtp);
/*       */   
/*       */   public static final native void CkSFtp_ClearSessionLog(long paramLong, CkSFtp paramCkSFtp);
/*       */   
/*       */   public static final native boolean CkSFtp_CloseHandle(long paramLong, CkSFtp paramCkSFtp, String paramString);
/*       */   
/*       */   public static final native long CkSFtp_CloseHandleAsync(long paramLong, CkSFtp paramCkSFtp, String paramString);
/*       */   
/*       */   public static final native boolean CkSFtp_Connect(long paramLong, CkSFtp paramCkSFtp, String paramString, int paramInt);
/*       */   
/*       */   public static final native long CkSFtp_ConnectAsync(long paramLong, CkSFtp paramCkSFtp, String paramString, int paramInt);
/*       */   
/*       */   public static final native boolean CkSFtp_ConnectThroughSsh(long paramLong1, CkSFtp paramCkSFtp, long paramLong2, CkSsh paramCkSsh, String paramString, int paramInt);
/*       */   
/*       */   public static final native long CkSFtp_ConnectThroughSshAsync(long paramLong1, CkSFtp paramCkSFtp, long paramLong2, CkSsh paramCkSsh, String paramString, int paramInt);
/*       */   
/*       */   public static final native boolean CkSFtp_CopyFileAttr(long paramLong, CkSFtp paramCkSFtp, String paramString1, String paramString2, boolean paramBoolean);
/*       */   
/*       */   public static final native long CkSFtp_CopyFileAttrAsync(long paramLong, CkSFtp paramCkSFtp, String paramString1, String paramString2, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkSFtp_CreateDir(long paramLong, CkSFtp paramCkSFtp, String paramString);
/*       */   
/*       */   public static final native long CkSFtp_CreateDirAsync(long paramLong, CkSFtp paramCkSFtp, String paramString);
/*       */   
/*       */   public static final native void CkSFtp_Disconnect(long paramLong, CkSFtp paramCkSFtp);
/*       */   
/*       */   public static final native boolean CkSFtp_DownloadBd(long paramLong1, CkSFtp paramCkSFtp, String paramString, long paramLong2, CkBinData paramCkBinData);
/*       */   
/*       */   public static final native long CkSFtp_DownloadBdAsync(long paramLong1, CkSFtp paramCkSFtp, String paramString, long paramLong2, CkBinData paramCkBinData);
/*       */   
/*       */   public static final native boolean CkSFtp_DownloadFile(long paramLong, CkSFtp paramCkSFtp, String paramString1, String paramString2);
/*       */   
/*       */   public static final native long CkSFtp_DownloadFileAsync(long paramLong, CkSFtp paramCkSFtp, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkSFtp_DownloadFileByName(long paramLong, CkSFtp paramCkSFtp, String paramString1, String paramString2);
/*       */   
/*       */   public static final native long CkSFtp_DownloadFileByNameAsync(long paramLong, CkSFtp paramCkSFtp, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkSFtp_DownloadSb(long paramLong1, CkSFtp paramCkSFtp, String paramString1, String paramString2, long paramLong2, CkStringBuilder paramCkStringBuilder);
/*       */   
/*       */   public static final native long CkSFtp_DownloadSbAsync(long paramLong1, CkSFtp paramCkSFtp, String paramString1, String paramString2, long paramLong2, CkStringBuilder paramCkStringBuilder);
/*       */   
/*       */   public static final native boolean CkSFtp_Eof(long paramLong, CkSFtp paramCkSFtp, String paramString);
/*       */   
/*       */   public static final native int CkSFtp_FileExists(long paramLong, CkSFtp paramCkSFtp, String paramString, boolean paramBoolean);
/*       */   
/*       */   public static final native long CkSFtp_FileExistsAsync(long paramLong, CkSFtp paramCkSFtp, String paramString, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkSFtp_Fsync(long paramLong, CkSFtp paramCkSFtp, String paramString);
/*       */   
/*       */   public static final native long CkSFtp_FsyncAsync(long paramLong, CkSFtp paramCkSFtp, String paramString);
/*       */   
/*       */   public static final native long CkSFtp_GetFileCreateDt(long paramLong, CkSFtp paramCkSFtp, String paramString, boolean paramBoolean1, boolean paramBoolean2);
/*       */   
/*       */   public static final native long CkSFtp_GetFileCreateDtAsync(long paramLong, CkSFtp paramCkSFtp, String paramString, boolean paramBoolean1, boolean paramBoolean2);
/*       */   
/*       */   public static final native boolean CkSFtp_GetFileCreateTime(long paramLong1, CkSFtp paramCkSFtp, String paramString, boolean paramBoolean1, boolean paramBoolean2, long paramLong2, SYSTEMTIME paramSYSTEMTIME);
/*       */   
/*       */   public static final native boolean CkSFtp_GetFileCreateTimeStr(long paramLong1, CkSFtp paramCkSFtp, String paramString, boolean paramBoolean1, boolean paramBoolean2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSFtp_getFileCreateTimeStr(long paramLong, CkSFtp paramCkSFtp, String paramString, boolean paramBoolean1, boolean paramBoolean2);
/*       */   
/*       */   public static final native String CkSFtp_fileCreateTimeStr(long paramLong, CkSFtp paramCkSFtp, String paramString, boolean paramBoolean1, boolean paramBoolean2);
/*       */   
/*       */   public static final native long CkSFtp_GetFileCreateTimeStrAsync(long paramLong, CkSFtp paramCkSFtp, String paramString, boolean paramBoolean1, boolean paramBoolean2);
/*       */   
/*       */   public static final native boolean CkSFtp_GetFileGroup(long paramLong1, CkSFtp paramCkSFtp, String paramString, boolean paramBoolean1, boolean paramBoolean2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSFtp_getFileGroup(long paramLong, CkSFtp paramCkSFtp, String paramString, boolean paramBoolean1, boolean paramBoolean2);
/*       */   
/*       */   public static final native String CkSFtp_fileGroup(long paramLong, CkSFtp paramCkSFtp, String paramString, boolean paramBoolean1, boolean paramBoolean2);
/*       */   
/*       */   public static final native long CkSFtp_GetFileGroupAsync(long paramLong, CkSFtp paramCkSFtp, String paramString, boolean paramBoolean1, boolean paramBoolean2);
/*       */   
/*       */   public static final native boolean CkSFtp_GetFileLastAccess(long paramLong1, CkSFtp paramCkSFtp, String paramString, boolean paramBoolean1, boolean paramBoolean2, long paramLong2, SYSTEMTIME paramSYSTEMTIME);
/*       */   
/*       */   public static final native long CkSFtp_GetFileLastAccessDt(long paramLong, CkSFtp paramCkSFtp, String paramString, boolean paramBoolean1, boolean paramBoolean2);
/*       */   
/*       */   public static final native long CkSFtp_GetFileLastAccessDtAsync(long paramLong, CkSFtp paramCkSFtp, String paramString, boolean paramBoolean1, boolean paramBoolean2);
/*       */   
/*       */   public static final native boolean CkSFtp_GetFileLastAccessStr(long paramLong1, CkSFtp paramCkSFtp, String paramString, boolean paramBoolean1, boolean paramBoolean2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSFtp_getFileLastAccessStr(long paramLong, CkSFtp paramCkSFtp, String paramString, boolean paramBoolean1, boolean paramBoolean2);
/*       */   
/*       */   public static final native String CkSFtp_fileLastAccessStr(long paramLong, CkSFtp paramCkSFtp, String paramString, boolean paramBoolean1, boolean paramBoolean2);
/*       */   
/*       */   public static final native long CkSFtp_GetFileLastAccessStrAsync(long paramLong, CkSFtp paramCkSFtp, String paramString, boolean paramBoolean1, boolean paramBoolean2);
/*       */   
/*       */   public static final native boolean CkSFtp_GetFileLastModified(long paramLong1, CkSFtp paramCkSFtp, String paramString, boolean paramBoolean1, boolean paramBoolean2, long paramLong2, SYSTEMTIME paramSYSTEMTIME);
/*       */   
/*       */   public static final native long CkSFtp_GetFileLastModifiedDt(long paramLong, CkSFtp paramCkSFtp, String paramString, boolean paramBoolean1, boolean paramBoolean2);
/*       */   
/*       */   public static final native long CkSFtp_GetFileLastModifiedDtAsync(long paramLong, CkSFtp paramCkSFtp, String paramString, boolean paramBoolean1, boolean paramBoolean2);
/*       */   
/*       */   public static final native boolean CkSFtp_GetFileLastModifiedStr(long paramLong1, CkSFtp paramCkSFtp, String paramString, boolean paramBoolean1, boolean paramBoolean2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSFtp_getFileLastModifiedStr(long paramLong, CkSFtp paramCkSFtp, String paramString, boolean paramBoolean1, boolean paramBoolean2);
/*       */   
/*       */   public static final native String CkSFtp_fileLastModifiedStr(long paramLong, CkSFtp paramCkSFtp, String paramString, boolean paramBoolean1, boolean paramBoolean2);
/*       */   
/*       */   public static final native long CkSFtp_GetFileLastModifiedStrAsync(long paramLong, CkSFtp paramCkSFtp, String paramString, boolean paramBoolean1, boolean paramBoolean2);
/*       */   
/*       */   public static final native boolean CkSFtp_GetFileOwner(long paramLong1, CkSFtp paramCkSFtp, String paramString, boolean paramBoolean1, boolean paramBoolean2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSFtp_getFileOwner(long paramLong, CkSFtp paramCkSFtp, String paramString, boolean paramBoolean1, boolean paramBoolean2);
/*       */   
/*       */   public static final native String CkSFtp_fileOwner(long paramLong, CkSFtp paramCkSFtp, String paramString, boolean paramBoolean1, boolean paramBoolean2);
/*       */   
/*       */   public static final native long CkSFtp_GetFileOwnerAsync(long paramLong, CkSFtp paramCkSFtp, String paramString, boolean paramBoolean1, boolean paramBoolean2);
/*       */   
/*       */   public static final native int CkSFtp_GetFilePermissions(long paramLong, CkSFtp paramCkSFtp, String paramString, boolean paramBoolean1, boolean paramBoolean2);
/*       */   
/*       */   public static final native long CkSFtp_GetFilePermissionsAsync(long paramLong, CkSFtp paramCkSFtp, String paramString, boolean paramBoolean1, boolean paramBoolean2);
/*       */   
/*       */   public static final native int CkSFtp_GetFileSize32(long paramLong, CkSFtp paramCkSFtp, String paramString, boolean paramBoolean1, boolean paramBoolean2);
/*       */   
/*       */   public static final native long CkSFtp_GetFileSize64(long paramLong, CkSFtp paramCkSFtp, String paramString, boolean paramBoolean1, boolean paramBoolean2);
/*       */   
/*       */   public static final native boolean CkSFtp_GetFileSizeStr(long paramLong1, CkSFtp paramCkSFtp, String paramString, boolean paramBoolean1, boolean paramBoolean2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSFtp_getFileSizeStr(long paramLong, CkSFtp paramCkSFtp, String paramString, boolean paramBoolean1, boolean paramBoolean2);
/*       */   
/*       */   public static final native String CkSFtp_fileSizeStr(long paramLong, CkSFtp paramCkSFtp, String paramString, boolean paramBoolean1, boolean paramBoolean2);
/*       */   
/*       */   public static final native boolean CkSFtp_HardLink(long paramLong, CkSFtp paramCkSFtp, String paramString1, String paramString2);
/*       */   
/*       */   public static final native long CkSFtp_HardLinkAsync(long paramLong, CkSFtp paramCkSFtp, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkSFtp_InitializeSftp(long paramLong, CkSFtp paramCkSFtp);
/*       */   
/*       */   public static final native long CkSFtp_InitializeSftpAsync(long paramLong, CkSFtp paramCkSFtp);
/*       */   
/*       */   public static final native boolean CkSFtp_LastReadFailed(long paramLong, CkSFtp paramCkSFtp, String paramString);
/*       */   
/*       */   public static final native int CkSFtp_LastReadNumBytes(long paramLong, CkSFtp paramCkSFtp, String paramString);
/*       */   
/*       */   public static final native boolean CkSFtp_OpenDir(long paramLong1, CkSFtp paramCkSFtp, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSFtp_openDir(long paramLong, CkSFtp paramCkSFtp, String paramString);
/*       */   
/*       */   public static final native long CkSFtp_OpenDirAsync(long paramLong, CkSFtp paramCkSFtp, String paramString);
/*       */   
/*       */   public static final native boolean CkSFtp_OpenFile(long paramLong1, CkSFtp paramCkSFtp, String paramString1, String paramString2, String paramString3, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSFtp_openFile(long paramLong, CkSFtp paramCkSFtp, String paramString1, String paramString2, String paramString3);
/*       */   
/*       */   public static final native long CkSFtp_OpenFileAsync(long paramLong, CkSFtp paramCkSFtp, String paramString1, String paramString2, String paramString3);
/*       */   
/*       */   public static final native long CkSFtp_ReadDir(long paramLong, CkSFtp paramCkSFtp, String paramString);
/*       */   
/*       */   public static final native long CkSFtp_ReadDirAsync(long paramLong, CkSFtp paramCkSFtp, String paramString);
/*       */   
/*       */   public static final native boolean CkSFtp_ReadFileBytes(long paramLong1, CkSFtp paramCkSFtp, String paramString, int paramInt, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native long CkSFtp_ReadFileBytesAsync(long paramLong, CkSFtp paramCkSFtp, String paramString, int paramInt);
/*       */   
/*       */   public static final native boolean CkSFtp_ReadFileBytes32(long paramLong1, CkSFtp paramCkSFtp, String paramString, int paramInt1, int paramInt2, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkSFtp_ReadFileBytes64(long paramLong1, CkSFtp paramCkSFtp, String paramString, long paramLong2, int paramInt, long paramLong3, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkSFtp_ReadFileBytes64s(long paramLong1, CkSFtp paramCkSFtp, String paramString1, String paramString2, int paramInt, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkSFtp_ReadFileText(long paramLong1, CkSFtp paramCkSFtp, String paramString1, int paramInt, String paramString2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSFtp_readFileText(long paramLong, CkSFtp paramCkSFtp, String paramString1, int paramInt, String paramString2);
/*       */   
/*       */   public static final native long CkSFtp_ReadFileTextAsync(long paramLong, CkSFtp paramCkSFtp, String paramString1, int paramInt, String paramString2);
/*       */   
/*       */   public static final native boolean CkSFtp_ReadFileText32(long paramLong1, CkSFtp paramCkSFtp, String paramString1, int paramInt1, int paramInt2, String paramString2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSFtp_readFileText32(long paramLong, CkSFtp paramCkSFtp, String paramString1, int paramInt1, int paramInt2, String paramString2);
/*       */   
/*       */   public static final native boolean CkSFtp_ReadFileText64(long paramLong1, CkSFtp paramCkSFtp, String paramString1, long paramLong2, int paramInt, String paramString2, long paramLong3, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSFtp_readFileText64(long paramLong1, CkSFtp paramCkSFtp, String paramString1, long paramLong2, int paramInt, String paramString2);
/*       */   
/*       */   public static final native boolean CkSFtp_ReadFileText64s(long paramLong1, CkSFtp paramCkSFtp, String paramString1, String paramString2, int paramInt, String paramString3, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSFtp_readFileText64s(long paramLong, CkSFtp paramCkSFtp, String paramString1, String paramString2, int paramInt, String paramString3);
/*       */   
/*       */   public static final native boolean CkSFtp_ReadLink(long paramLong1, CkSFtp paramCkSFtp, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSFtp_readLink(long paramLong, CkSFtp paramCkSFtp, String paramString);
/*       */   
/*       */   public static final native long CkSFtp_ReadLinkAsync(long paramLong, CkSFtp paramCkSFtp, String paramString);
/*       */   
/*       */   public static final native boolean CkSFtp_RealPath(long paramLong1, CkSFtp paramCkSFtp, String paramString1, String paramString2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSFtp_realPath(long paramLong, CkSFtp paramCkSFtp, String paramString1, String paramString2);
/*       */   
/*       */   public static final native long CkSFtp_RealPathAsync(long paramLong, CkSFtp paramCkSFtp, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkSFtp_RemoveDir(long paramLong, CkSFtp paramCkSFtp, String paramString);
/*       */   
/*       */   public static final native long CkSFtp_RemoveDirAsync(long paramLong, CkSFtp paramCkSFtp, String paramString);
/*       */   
/*       */   public static final native boolean CkSFtp_RemoveFile(long paramLong, CkSFtp paramCkSFtp, String paramString);
/*       */   
/*       */   public static final native long CkSFtp_RemoveFileAsync(long paramLong, CkSFtp paramCkSFtp, String paramString);
/*       */   
/*       */   public static final native boolean CkSFtp_RenameFileOrDir(long paramLong, CkSFtp paramCkSFtp, String paramString1, String paramString2);
/*       */   
/*       */   public static final native long CkSFtp_RenameFileOrDirAsync(long paramLong, CkSFtp paramCkSFtp, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkSFtp_ResumeDownloadFileByName(long paramLong, CkSFtp paramCkSFtp, String paramString1, String paramString2);
/*       */   
/*       */   public static final native long CkSFtp_ResumeDownloadFileByNameAsync(long paramLong, CkSFtp paramCkSFtp, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkSFtp_ResumeUploadFileByName(long paramLong, CkSFtp paramCkSFtp, String paramString1, String paramString2);
/*       */   
/*       */   public static final native long CkSFtp_ResumeUploadFileByNameAsync(long paramLong, CkSFtp paramCkSFtp, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkSFtp_SaveLastError(long paramLong, CkSFtp paramCkSFtp, String paramString);
/*       */   
/*       */   public static final native boolean CkSFtp_SendIgnore(long paramLong, CkSFtp paramCkSFtp);
/*       */   
/*       */   public static final native long CkSFtp_SendIgnoreAsync(long paramLong, CkSFtp paramCkSFtp);
/*       */   
/*       */   public static final native boolean CkSFtp_SetCreateDt(long paramLong1, CkSFtp paramCkSFtp, String paramString, boolean paramBoolean, long paramLong2, CkDateTime paramCkDateTime);
/*       */   
/*       */   public static final native long CkSFtp_SetCreateDtAsync(long paramLong1, CkSFtp paramCkSFtp, String paramString, boolean paramBoolean, long paramLong2, CkDateTime paramCkDateTime);
/*       */   
/*       */   public static final native boolean CkSFtp_SetCreateTime(long paramLong1, CkSFtp paramCkSFtp, String paramString, boolean paramBoolean, long paramLong2, SYSTEMTIME paramSYSTEMTIME);
/*       */   
/*       */   public static final native boolean CkSFtp_SetCreateTimeStr(long paramLong, CkSFtp paramCkSFtp, String paramString1, boolean paramBoolean, String paramString2);
/*       */   
/*       */   public static final native long CkSFtp_SetCreateTimeStrAsync(long paramLong, CkSFtp paramCkSFtp, String paramString1, boolean paramBoolean, String paramString2);
/*       */   
/*       */   public static final native boolean CkSFtp_SetLastAccessDt(long paramLong1, CkSFtp paramCkSFtp, String paramString, boolean paramBoolean, long paramLong2, CkDateTime paramCkDateTime);
/*       */   
/*       */   public static final native long CkSFtp_SetLastAccessDtAsync(long paramLong1, CkSFtp paramCkSFtp, String paramString, boolean paramBoolean, long paramLong2, CkDateTime paramCkDateTime);
/*       */   
/*       */   public static final native boolean CkSFtp_SetLastAccessTime(long paramLong1, CkSFtp paramCkSFtp, String paramString, boolean paramBoolean, long paramLong2, SYSTEMTIME paramSYSTEMTIME);
/*       */   
/*       */   public static final native boolean CkSFtp_SetLastAccessTimeStr(long paramLong, CkSFtp paramCkSFtp, String paramString1, boolean paramBoolean, String paramString2);
/*       */   
/*       */   public static final native long CkSFtp_SetLastAccessTimeStrAsync(long paramLong, CkSFtp paramCkSFtp, String paramString1, boolean paramBoolean, String paramString2);
/*       */   
/*       */   public static final native boolean CkSFtp_SetLastModifiedDt(long paramLong1, CkSFtp paramCkSFtp, String paramString, boolean paramBoolean, long paramLong2, CkDateTime paramCkDateTime);
/*       */   
/*       */   public static final native long CkSFtp_SetLastModifiedDtAsync(long paramLong1, CkSFtp paramCkSFtp, String paramString, boolean paramBoolean, long paramLong2, CkDateTime paramCkDateTime);
/*       */   
/*       */   public static final native boolean CkSFtp_SetLastModifiedTime(long paramLong1, CkSFtp paramCkSFtp, String paramString, boolean paramBoolean, long paramLong2, SYSTEMTIME paramSYSTEMTIME);
/*       */   
/*       */   public static final native boolean CkSFtp_SetLastModifiedTimeStr(long paramLong, CkSFtp paramCkSFtp, String paramString1, boolean paramBoolean, String paramString2);
/*       */   
/*       */   public static final native long CkSFtp_SetLastModifiedTimeStrAsync(long paramLong, CkSFtp paramCkSFtp, String paramString1, boolean paramBoolean, String paramString2);
/*       */   
/*       */   public static final native boolean CkSFtp_SetOwnerAndGroup(long paramLong, CkSFtp paramCkSFtp, String paramString1, boolean paramBoolean, String paramString2, String paramString3);
/*       */   
/*       */   public static final native long CkSFtp_SetOwnerAndGroupAsync(long paramLong, CkSFtp paramCkSFtp, String paramString1, boolean paramBoolean, String paramString2, String paramString3);
/*       */   
/*       */   public static final native boolean CkSFtp_SetPermissions(long paramLong, CkSFtp paramCkSFtp, String paramString, boolean paramBoolean, int paramInt);
/*       */   
/*       */   public static final native long CkSFtp_SetPermissionsAsync(long paramLong, CkSFtp paramCkSFtp, String paramString, boolean paramBoolean, int paramInt);
/*       */   
/*       */   public static final native boolean CkSFtp_SymLink(long paramLong, CkSFtp paramCkSFtp, String paramString1, String paramString2);
/*       */   
/*       */   public static final native long CkSFtp_SymLinkAsync(long paramLong, CkSFtp paramCkSFtp, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkSFtp_SyncTreeDownload(long paramLong, CkSFtp paramCkSFtp, String paramString1, String paramString2, int paramInt, boolean paramBoolean);
/*       */   
/*       */   public static final native long CkSFtp_SyncTreeDownloadAsync(long paramLong, CkSFtp paramCkSFtp, String paramString1, String paramString2, int paramInt, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkSFtp_SyncTreeUpload(long paramLong, CkSFtp paramCkSFtp, String paramString1, String paramString2, int paramInt, boolean paramBoolean);
/*       */   
/*       */   public static final native long CkSFtp_SyncTreeUploadAsync(long paramLong, CkSFtp paramCkSFtp, String paramString1, String paramString2, int paramInt, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkSFtp_UnlockComponent(long paramLong, CkSFtp paramCkSFtp, String paramString);
/*       */   
/*       */   public static final native boolean CkSFtp_UploadBd(long paramLong1, CkSFtp paramCkSFtp, long paramLong2, CkBinData paramCkBinData, String paramString);
/*       */   
/*       */   public static final native long CkSFtp_UploadBdAsync(long paramLong1, CkSFtp paramCkSFtp, long paramLong2, CkBinData paramCkBinData, String paramString);
/*       */   
/*       */   public static final native boolean CkSFtp_UploadFile(long paramLong, CkSFtp paramCkSFtp, String paramString1, String paramString2);
/*       */   
/*       */   public static final native long CkSFtp_UploadFileAsync(long paramLong, CkSFtp paramCkSFtp, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkSFtp_UploadFileByName(long paramLong, CkSFtp paramCkSFtp, String paramString1, String paramString2);
/*       */   
/*       */   public static final native long CkSFtp_UploadFileByNameAsync(long paramLong, CkSFtp paramCkSFtp, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkSFtp_UploadSb(long paramLong1, CkSFtp paramCkSFtp, long paramLong2, CkStringBuilder paramCkStringBuilder, String paramString1, String paramString2, boolean paramBoolean);
/*       */   
/*       */   public static final native long CkSFtp_UploadSbAsync(long paramLong1, CkSFtp paramCkSFtp, long paramLong2, CkStringBuilder paramCkStringBuilder, String paramString1, String paramString2, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkSFtp_WriteFileBytes(long paramLong1, CkSFtp paramCkSFtp, String paramString, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native long CkSFtp_WriteFileBytesAsync(long paramLong1, CkSFtp paramCkSFtp, String paramString, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkSFtp_WriteFileBytes32(long paramLong1, CkSFtp paramCkSFtp, String paramString, int paramInt, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkSFtp_WriteFileBytes64(long paramLong1, CkSFtp paramCkSFtp, String paramString, long paramLong2, long paramLong3, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkSFtp_WriteFileBytes64s(long paramLong1, CkSFtp paramCkSFtp, String paramString1, String paramString2, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkSFtp_WriteFileText(long paramLong, CkSFtp paramCkSFtp, String paramString1, String paramString2, String paramString3);
/*       */   
/*       */   public static final native long CkSFtp_WriteFileTextAsync(long paramLong, CkSFtp paramCkSFtp, String paramString1, String paramString2, String paramString3);
/*       */   
/*       */   public static final native boolean CkSFtp_WriteFileText32(long paramLong, CkSFtp paramCkSFtp, String paramString1, int paramInt, String paramString2, String paramString3);
/*       */   
/*       */   public static final native boolean CkSFtp_WriteFileText64(long paramLong1, CkSFtp paramCkSFtp, String paramString1, long paramLong2, String paramString2, String paramString3);
/*       */   
/*       */   public static final native boolean CkSFtp_WriteFileText64s(long paramLong, CkSFtp paramCkSFtp, String paramString1, String paramString2, String paramString3, String paramString4);
/*       */   
/*       */   public static final native long new_CkSFtpDir();
/*       */   
/*       */   public static final native void delete_CkSFtpDir(long paramLong);
/*       */   
/*       */   public static final native boolean CkSFtpDir_get_LastMethodSuccess(long paramLong, CkSFtpDir paramCkSFtpDir);
/*       */   
/*       */   public static final native void CkSFtpDir_put_LastMethodSuccess(long paramLong, CkSFtpDir paramCkSFtpDir, boolean paramBoolean);
/*       */   
/*       */   public static final native int CkSFtpDir_get_NumFilesAndDirs(long paramLong, CkSFtpDir paramCkSFtpDir);
/*       */   
/*       */   public static final native void CkSFtpDir_get_OriginalPath(long paramLong1, CkSFtpDir paramCkSFtpDir, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSFtpDir_originalPath(long paramLong, CkSFtpDir paramCkSFtpDir);
/*       */   
/*       */   public static final native boolean CkSFtpDir_GetFilename(long paramLong1, CkSFtpDir paramCkSFtpDir, int paramInt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSFtpDir_getFilename(long paramLong, CkSFtpDir paramCkSFtpDir, int paramInt);
/*       */   
/*       */   public static final native String CkSFtpDir_filename(long paramLong, CkSFtpDir paramCkSFtpDir, int paramInt);
/*       */   
/*       */   public static final native long CkSFtpDir_GetFileObject(long paramLong, CkSFtpDir paramCkSFtpDir, int paramInt);
/*       */   
/*       */   public static final native boolean CkSFtpDir_LoadTaskResult(long paramLong1, CkSFtpDir paramCkSFtpDir, long paramLong2, CkTask paramCkTask);
/*       */   
/*       */   public static final native long new_CkSFtpFile();
/*       */   
/*       */   public static final native void delete_CkSFtpFile(long paramLong);
/*       */   
/*       */   public static final native void CkSFtpFile_get_CreateTime(long paramLong1, CkSFtpFile paramCkSFtpFile, long paramLong2, SYSTEMTIME paramSYSTEMTIME);
/*       */   
/*       */   public static final native void CkSFtpFile_get_CreateTimeStr(long paramLong1, CkSFtpFile paramCkSFtpFile, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSFtpFile_createTimeStr(long paramLong, CkSFtpFile paramCkSFtpFile);
/*       */   
/*       */   public static final native void CkSFtpFile_get_Filename(long paramLong1, CkSFtpFile paramCkSFtpFile, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSFtpFile_filename(long paramLong, CkSFtpFile paramCkSFtpFile);
/*       */   
/*       */   public static final native void CkSFtpFile_get_FileType(long paramLong1, CkSFtpFile paramCkSFtpFile, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSFtpFile_fileType(long paramLong, CkSFtpFile paramCkSFtpFile);
/*       */   
/*       */   public static final native int CkSFtpFile_get_Gid(long paramLong, CkSFtpFile paramCkSFtpFile);
/*       */   
/*       */   public static final native void CkSFtpFile_get_Group(long paramLong1, CkSFtpFile paramCkSFtpFile, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSFtpFile_group(long paramLong, CkSFtpFile paramCkSFtpFile);
/*       */   
/*       */   public static final native boolean CkSFtpFile_get_IsAppendOnly(long paramLong, CkSFtpFile paramCkSFtpFile);
/*       */   
/*       */   public static final native boolean CkSFtpFile_get_IsArchive(long paramLong, CkSFtpFile paramCkSFtpFile);
/*       */   
/*       */   public static final native boolean CkSFtpFile_get_IsCaseInsensitive(long paramLong, CkSFtpFile paramCkSFtpFile);
/*       */   
/*       */   public static final native boolean CkSFtpFile_get_IsCompressed(long paramLong, CkSFtpFile paramCkSFtpFile);
/*       */   
/*       */   public static final native boolean CkSFtpFile_get_IsDirectory(long paramLong, CkSFtpFile paramCkSFtpFile);
/*       */   
/*       */   public static final native boolean CkSFtpFile_get_IsEncrypted(long paramLong, CkSFtpFile paramCkSFtpFile);
/*       */   
/*       */   public static final native boolean CkSFtpFile_get_IsHidden(long paramLong, CkSFtpFile paramCkSFtpFile);
/*       */   
/*       */   public static final native boolean CkSFtpFile_get_IsImmutable(long paramLong, CkSFtpFile paramCkSFtpFile);
/*       */   
/*       */   public static final native boolean CkSFtpFile_get_IsReadOnly(long paramLong, CkSFtpFile paramCkSFtpFile);
/*       */   
/*       */   public static final native boolean CkSFtpFile_get_IsRegular(long paramLong, CkSFtpFile paramCkSFtpFile);
/*       */   
/*       */   public static final native boolean CkSFtpFile_get_IsSparse(long paramLong, CkSFtpFile paramCkSFtpFile);
/*       */   
/*       */   public static final native boolean CkSFtpFile_get_IsSymLink(long paramLong, CkSFtpFile paramCkSFtpFile);
/*       */   
/*       */   public static final native boolean CkSFtpFile_get_IsSync(long paramLong, CkSFtpFile paramCkSFtpFile);
/*       */   
/*       */   public static final native boolean CkSFtpFile_get_IsSystem(long paramLong, CkSFtpFile paramCkSFtpFile);
/*       */   
/*       */   public static final native void CkSFtpFile_get_LastAccessTime(long paramLong1, CkSFtpFile paramCkSFtpFile, long paramLong2, SYSTEMTIME paramSYSTEMTIME);
/*       */   
/*       */   public static final native void CkSFtpFile_get_LastAccessTimeStr(long paramLong1, CkSFtpFile paramCkSFtpFile, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSFtpFile_lastAccessTimeStr(long paramLong, CkSFtpFile paramCkSFtpFile);
/*       */   
/*       */   public static final native boolean CkSFtpFile_get_LastMethodSuccess(long paramLong, CkSFtpFile paramCkSFtpFile);
/*       */   
/*       */   public static final native void CkSFtpFile_put_LastMethodSuccess(long paramLong, CkSFtpFile paramCkSFtpFile, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkSFtpFile_get_LastModifiedTime(long paramLong1, CkSFtpFile paramCkSFtpFile, long paramLong2, SYSTEMTIME paramSYSTEMTIME);
/*       */   
/*       */   public static final native void CkSFtpFile_get_LastModifiedTimeStr(long paramLong1, CkSFtpFile paramCkSFtpFile, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSFtpFile_lastModifiedTimeStr(long paramLong, CkSFtpFile paramCkSFtpFile);
/*       */   
/*       */   public static final native void CkSFtpFile_get_Owner(long paramLong1, CkSFtpFile paramCkSFtpFile, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSFtpFile_owner(long paramLong, CkSFtpFile paramCkSFtpFile);
/*       */   
/*       */   public static final native int CkSFtpFile_get_Permissions(long paramLong, CkSFtpFile paramCkSFtpFile);
/*       */   
/*       */   public static final native int CkSFtpFile_get_Size32(long paramLong, CkSFtpFile paramCkSFtpFile);
/*       */   
/*       */   public static final native void CkSFtpFile_get_SizeStr(long paramLong1, CkSFtpFile paramCkSFtpFile, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSFtpFile_sizeStr(long paramLong, CkSFtpFile paramCkSFtpFile);
/*       */   
/*       */   public static final native int CkSFtpFile_get_Uid(long paramLong, CkSFtpFile paramCkSFtpFile);
/*       */   
/*       */   public static final native long CkSFtpFile_GetCreateDt(long paramLong, CkSFtpFile paramCkSFtpFile);
/*       */   
/*       */   public static final native long CkSFtpFile_GetLastAccessDt(long paramLong, CkSFtpFile paramCkSFtpFile);
/*       */   
/*       */   public static final native long CkSFtpFile_GetLastModifiedDt(long paramLong, CkSFtpFile paramCkSFtpFile);
/*       */   
/*       */   public static final native long new_CkSocket();
/*       */   
/*       */   public static final native void delete_CkSocket(long paramLong);
/*       */   
/*       */   public static final native void CkSocket_LastErrorXml(long paramLong1, CkSocket paramCkSocket, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkSocket_LastErrorHtml(long paramLong1, CkSocket paramCkSocket, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkSocket_LastErrorText(long paramLong1, CkSocket paramCkSocket, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkSocket_put_EventCallbackObject(long paramLong1, CkSocket paramCkSocket, long paramLong2, CkBaseProgress paramCkBaseProgress);
/*       */   
/*       */   public static final native boolean CkSocket_get_AbortCurrent(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native void CkSocket_put_AbortCurrent(long paramLong, CkSocket paramCkSocket, boolean paramBoolean);
/*       */   
/*       */   public static final native int CkSocket_get_AcceptFailReason(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native boolean CkSocket_get_AsyncAcceptFinished(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native void CkSocket_get_AsyncAcceptLog(long paramLong1, CkSocket paramCkSocket, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSocket_asyncAcceptLog(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native boolean CkSocket_get_AsyncAcceptSuccess(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native boolean CkSocket_get_AsyncConnectFinished(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native void CkSocket_get_AsyncConnectLog(long paramLong1, CkSocket paramCkSocket, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSocket_asyncConnectLog(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native boolean CkSocket_get_AsyncConnectSuccess(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native boolean CkSocket_get_AsyncDnsFinished(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native void CkSocket_get_AsyncDnsLog(long paramLong1, CkSocket paramCkSocket, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSocket_asyncDnsLog(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native void CkSocket_get_AsyncDnsResult(long paramLong1, CkSocket paramCkSocket, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSocket_asyncDnsResult(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native boolean CkSocket_get_AsyncDnsSuccess(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native void CkSocket_get_AsyncReceivedBytes(long paramLong1, CkSocket paramCkSocket, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native void CkSocket_get_AsyncReceivedString(long paramLong1, CkSocket paramCkSocket, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSocket_asyncReceivedString(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native boolean CkSocket_get_AsyncReceiveFinished(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native void CkSocket_get_AsyncReceiveLog(long paramLong1, CkSocket paramCkSocket, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSocket_asyncReceiveLog(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native boolean CkSocket_get_AsyncReceiveSuccess(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native boolean CkSocket_get_AsyncSendFinished(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native void CkSocket_get_AsyncSendLog(long paramLong1, CkSocket paramCkSocket, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSocket_asyncSendLog(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native boolean CkSocket_get_AsyncSendSuccess(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native int CkSocket_get_BandwidthThrottleDown(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native void CkSocket_put_BandwidthThrottleDown(long paramLong, CkSocket paramCkSocket, int paramInt);
/*       */   
/*       */   public static final native int CkSocket_get_BandwidthThrottleUp(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native void CkSocket_put_BandwidthThrottleUp(long paramLong, CkSocket paramCkSocket, int paramInt);
/*       */   
/*       */   public static final native boolean CkSocket_get_BigEndian(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native void CkSocket_put_BigEndian(long paramLong, CkSocket paramCkSocket, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkSocket_get_ClientIpAddress(long paramLong1, CkSocket paramCkSocket, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSocket_clientIpAddress(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native void CkSocket_put_ClientIpAddress(long paramLong, CkSocket paramCkSocket, String paramString);
/*       */   
/*       */   public static final native int CkSocket_get_ClientPort(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native void CkSocket_put_ClientPort(long paramLong, CkSocket paramCkSocket, int paramInt);
/*       */   
/*       */   public static final native int CkSocket_get_ConnectFailReason(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native int CkSocket_get_DebugConnectDelayMs(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native void CkSocket_put_DebugConnectDelayMs(long paramLong, CkSocket paramCkSocket, int paramInt);
/*       */   
/*       */   public static final native int CkSocket_get_DebugDnsDelayMs(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native void CkSocket_put_DebugDnsDelayMs(long paramLong, CkSocket paramCkSocket, int paramInt);
/*       */   
/*       */   public static final native void CkSocket_get_DebugLogFilePath(long paramLong1, CkSocket paramCkSocket, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSocket_debugLogFilePath(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native void CkSocket_put_DebugLogFilePath(long paramLong, CkSocket paramCkSocket, String paramString);
/*       */   
/*       */   public static final native int CkSocket_get_ElapsedSeconds(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native int CkSocket_get_HeartbeatMs(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native void CkSocket_put_HeartbeatMs(long paramLong, CkSocket paramCkSocket, int paramInt);
/*       */   
/*       */   public static final native void CkSocket_get_HttpProxyAuthMethod(long paramLong1, CkSocket paramCkSocket, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSocket_httpProxyAuthMethod(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native void CkSocket_put_HttpProxyAuthMethod(long paramLong, CkSocket paramCkSocket, String paramString);
/*       */   
/*       */   public static final native void CkSocket_get_HttpProxyDomain(long paramLong1, CkSocket paramCkSocket, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSocket_httpProxyDomain(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native void CkSocket_put_HttpProxyDomain(long paramLong, CkSocket paramCkSocket, String paramString);
/*       */   
/*       */   public static final native boolean CkSocket_get_HttpProxyForHttp(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native void CkSocket_put_HttpProxyForHttp(long paramLong, CkSocket paramCkSocket, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkSocket_get_HttpProxyHostname(long paramLong1, CkSocket paramCkSocket, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSocket_httpProxyHostname(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native void CkSocket_put_HttpProxyHostname(long paramLong, CkSocket paramCkSocket, String paramString);
/*       */   
/*       */   public static final native void CkSocket_get_HttpProxyPassword(long paramLong1, CkSocket paramCkSocket, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSocket_httpProxyPassword(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native void CkSocket_put_HttpProxyPassword(long paramLong, CkSocket paramCkSocket, String paramString);
/*       */   
/*       */   public static final native int CkSocket_get_HttpProxyPort(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native void CkSocket_put_HttpProxyPort(long paramLong, CkSocket paramCkSocket, int paramInt);
/*       */   
/*       */   public static final native void CkSocket_get_HttpProxyUsername(long paramLong1, CkSocket paramCkSocket, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSocket_httpProxyUsername(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native void CkSocket_put_HttpProxyUsername(long paramLong, CkSocket paramCkSocket, String paramString);
/*       */   
/*       */   public static final native boolean CkSocket_get_IsConnected(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native boolean CkSocket_get_KeepAlive(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native void CkSocket_put_KeepAlive(long paramLong, CkSocket paramCkSocket, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkSocket_get_KeepSessionLog(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native void CkSocket_put_KeepSessionLog(long paramLong, CkSocket paramCkSocket, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkSocket_get_LastErrorHtml(long paramLong1, CkSocket paramCkSocket, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSocket_lastErrorHtml(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native void CkSocket_get_LastErrorText(long paramLong1, CkSocket paramCkSocket, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSocket_lastErrorText(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native void CkSocket_get_LastErrorXml(long paramLong1, CkSocket paramCkSocket, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSocket_lastErrorXml(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native boolean CkSocket_get_LastMethodFailed(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native boolean CkSocket_get_LastMethodSuccess(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native void CkSocket_put_LastMethodSuccess(long paramLong, CkSocket paramCkSocket, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkSocket_get_ListenIpv6(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native void CkSocket_put_ListenIpv6(long paramLong, CkSocket paramCkSocket, boolean paramBoolean);
/*       */   
/*       */   public static final native int CkSocket_get_ListenPort(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native void CkSocket_get_LocalIpAddress(long paramLong1, CkSocket paramCkSocket, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSocket_localIpAddress(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native int CkSocket_get_LocalPort(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native int CkSocket_get_MaxReadIdleMs(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native void CkSocket_put_MaxReadIdleMs(long paramLong, CkSocket paramCkSocket, int paramInt);
/*       */   
/*       */   public static final native int CkSocket_get_MaxSendIdleMs(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native void CkSocket_put_MaxSendIdleMs(long paramLong, CkSocket paramCkSocket, int paramInt);
/*       */   
/*       */   public static final native void CkSocket_get_MyIpAddress(long paramLong1, CkSocket paramCkSocket, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSocket_myIpAddress(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native int CkSocket_get_NumReceivedClientCerts(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native int CkSocket_get_NumSocketsInSet(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native int CkSocket_get_NumSslAcceptableClientCAs(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native int CkSocket_get_ObjectId(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native int CkSocket_get_PercentDoneScale(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native void CkSocket_put_PercentDoneScale(long paramLong, CkSocket paramCkSocket, int paramInt);
/*       */   
/*       */   public static final native boolean CkSocket_get_PreferIpv6(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native void CkSocket_put_PreferIpv6(long paramLong, CkSocket paramCkSocket, boolean paramBoolean);
/*       */   
/*       */   public static final native int CkSocket_get_ReceivedCount(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native void CkSocket_put_ReceivedCount(long paramLong, CkSocket paramCkSocket, int paramInt);
/*       */   
/*       */   public static final native int CkSocket_get_ReceivedInt(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native void CkSocket_put_ReceivedInt(long paramLong, CkSocket paramCkSocket, int paramInt);
/*       */   
/*       */   public static final native int CkSocket_get_ReceiveFailReason(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native int CkSocket_get_ReceivePacketSize(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native void CkSocket_put_ReceivePacketSize(long paramLong, CkSocket paramCkSocket, int paramInt);
/*       */   
/*       */   public static final native void CkSocket_get_RemoteIpAddress(long paramLong1, CkSocket paramCkSocket, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSocket_remoteIpAddress(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native int CkSocket_get_RemotePort(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native boolean CkSocket_get_RequireSslCertVerify(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native void CkSocket_put_RequireSslCertVerify(long paramLong, CkSocket paramCkSocket, boolean paramBoolean);
/*       */   
/*       */   public static final native int CkSocket_get_SelectorIndex(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native void CkSocket_put_SelectorIndex(long paramLong, CkSocket paramCkSocket, int paramInt);
/*       */   
/*       */   public static final native int CkSocket_get_SelectorReadIndex(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native void CkSocket_put_SelectorReadIndex(long paramLong, CkSocket paramCkSocket, int paramInt);
/*       */   
/*       */   public static final native int CkSocket_get_SelectorWriteIndex(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native void CkSocket_put_SelectorWriteIndex(long paramLong, CkSocket paramCkSocket, int paramInt);
/*       */   
/*       */   public static final native int CkSocket_get_SendFailReason(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native int CkSocket_get_SendPacketSize(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native void CkSocket_put_SendPacketSize(long paramLong, CkSocket paramCkSocket, int paramInt);
/*       */   
/*       */   public static final native void CkSocket_get_SessionLog(long paramLong1, CkSocket paramCkSocket, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSocket_sessionLog(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native void CkSocket_get_SessionLogEncoding(long paramLong1, CkSocket paramCkSocket, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSocket_sessionLogEncoding(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native void CkSocket_put_SessionLogEncoding(long paramLong, CkSocket paramCkSocket, String paramString);
/*       */   
/*       */   public static final native void CkSocket_get_SocksHostname(long paramLong1, CkSocket paramCkSocket, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSocket_socksHostname(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native void CkSocket_put_SocksHostname(long paramLong, CkSocket paramCkSocket, String paramString);
/*       */   
/*       */   public static final native void CkSocket_get_SocksPassword(long paramLong1, CkSocket paramCkSocket, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSocket_socksPassword(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native void CkSocket_put_SocksPassword(long paramLong, CkSocket paramCkSocket, String paramString);
/*       */   
/*       */   public static final native int CkSocket_get_SocksPort(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native void CkSocket_put_SocksPort(long paramLong, CkSocket paramCkSocket, int paramInt);
/*       */   
/*       */   public static final native void CkSocket_get_SocksUsername(long paramLong1, CkSocket paramCkSocket, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSocket_socksUsername(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native void CkSocket_put_SocksUsername(long paramLong, CkSocket paramCkSocket, String paramString);
/*       */   
/*       */   public static final native int CkSocket_get_SocksVersion(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native void CkSocket_put_SocksVersion(long paramLong, CkSocket paramCkSocket, int paramInt);
/*       */   
/*       */   public static final native int CkSocket_get_SoRcvBuf(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native void CkSocket_put_SoRcvBuf(long paramLong, CkSocket paramCkSocket, int paramInt);
/*       */   
/*       */   public static final native boolean CkSocket_get_SoReuseAddr(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native void CkSocket_put_SoReuseAddr(long paramLong, CkSocket paramCkSocket, boolean paramBoolean);
/*       */   
/*       */   public static final native int CkSocket_get_SoSndBuf(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native void CkSocket_put_SoSndBuf(long paramLong, CkSocket paramCkSocket, int paramInt);
/*       */   
/*       */   public static final native boolean CkSocket_get_Ssl(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native void CkSocket_put_Ssl(long paramLong, CkSocket paramCkSocket, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkSocket_get_SslAllowedCiphers(long paramLong1, CkSocket paramCkSocket, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSocket_sslAllowedCiphers(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native void CkSocket_put_SslAllowedCiphers(long paramLong, CkSocket paramCkSocket, String paramString);
/*       */   
/*       */   public static final native void CkSocket_get_SslProtocol(long paramLong1, CkSocket paramCkSocket, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSocket_sslProtocol(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native void CkSocket_put_SslProtocol(long paramLong, CkSocket paramCkSocket, String paramString);
/*       */   
/*       */   public static final native void CkSocket_get_StringCharset(long paramLong1, CkSocket paramCkSocket, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSocket_stringCharset(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native void CkSocket_put_StringCharset(long paramLong, CkSocket paramCkSocket, String paramString);
/*       */   
/*       */   public static final native boolean CkSocket_get_TcpNoDelay(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native void CkSocket_put_TcpNoDelay(long paramLong, CkSocket paramCkSocket, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkSocket_get_TlsCipherSuite(long paramLong1, CkSocket paramCkSocket, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSocket_tlsCipherSuite(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native void CkSocket_get_TlsPinSet(long paramLong1, CkSocket paramCkSocket, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSocket_tlsPinSet(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native void CkSocket_put_TlsPinSet(long paramLong, CkSocket paramCkSocket, String paramString);
/*       */   
/*       */   public static final native void CkSocket_get_TlsVersion(long paramLong1, CkSocket paramCkSocket, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSocket_tlsVersion(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native void CkSocket_get_UserData(long paramLong1, CkSocket paramCkSocket, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSocket_userData(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native void CkSocket_put_UserData(long paramLong, CkSocket paramCkSocket, String paramString);
/*       */   
/*       */   public static final native boolean CkSocket_get_VerboseLogging(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native void CkSocket_put_VerboseLogging(long paramLong, CkSocket paramCkSocket, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkSocket_get_Version(long paramLong1, CkSocket paramCkSocket, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSocket_version(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native long CkSocket_AcceptNextConnection(long paramLong, CkSocket paramCkSocket, int paramInt);
/*       */   
/*       */   public static final native long CkSocket_AcceptNextConnectionAsync(long paramLong, CkSocket paramCkSocket, int paramInt);
/*       */   
/*       */   public static final native boolean CkSocket_AddSslAcceptableClientCaDn(long paramLong, CkSocket paramCkSocket, String paramString);
/*       */   
/*       */   public static final native void CkSocket_AsyncAcceptAbort(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native long CkSocket_AsyncAcceptSocket(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native boolean CkSocket_AsyncAcceptStart(long paramLong, CkSocket paramCkSocket, int paramInt);
/*       */   
/*       */   public static final native void CkSocket_AsyncConnectAbort(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native boolean CkSocket_AsyncConnectStart(long paramLong, CkSocket paramCkSocket, String paramString, int paramInt1, boolean paramBoolean, int paramInt2);
/*       */   
/*       */   public static final native void CkSocket_AsyncDnsAbort(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native boolean CkSocket_AsyncDnsStart(long paramLong, CkSocket paramCkSocket, String paramString, int paramInt);
/*       */   
/*       */   public static final native void CkSocket_AsyncReceiveAbort(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native boolean CkSocket_AsyncReceiveBytes(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native boolean CkSocket_AsyncReceiveBytesN(long paramLong1, CkSocket paramCkSocket, long paramLong2);
/*       */   
/*       */   public static final native boolean CkSocket_AsyncReceiveString(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native boolean CkSocket_AsyncReceiveToCRLF(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native boolean CkSocket_AsyncReceiveUntilMatch(long paramLong, CkSocket paramCkSocket, String paramString);
/*       */   
/*       */   public static final native void CkSocket_AsyncSendAbort(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native boolean CkSocket_AsyncSendByteData(long paramLong1, CkSocket paramCkSocket, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkSocket_AsyncSendBytes(long paramLong1, CkSocket paramCkSocket, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkSocket_AsyncSendString(long paramLong, CkSocket paramCkSocket, String paramString);
/*       */   
/*       */   public static final native boolean CkSocket_BindAndListen(long paramLong, CkSocket paramCkSocket, int paramInt1, int paramInt2);
/*       */   
/*       */   public static final native long CkSocket_BindAndListenAsync(long paramLong, CkSocket paramCkSocket, int paramInt1, int paramInt2);
/*       */   
/*       */   public static final native int CkSocket_BindAndListenPortRange(long paramLong, CkSocket paramCkSocket, int paramInt1, int paramInt2, int paramInt3);
/*       */   
/*       */   public static final native long CkSocket_BindAndListenPortRangeAsync(long paramLong, CkSocket paramCkSocket, int paramInt1, int paramInt2, int paramInt3);
/*       */   
/*       */   public static final native boolean CkSocket_BuildHttpGetRequest(long paramLong1, CkSocket paramCkSocket, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSocket_buildHttpGetRequest(long paramLong, CkSocket paramCkSocket, String paramString);
/*       */   
/*       */   public static final native int CkSocket_CheckWriteable(long paramLong, CkSocket paramCkSocket, int paramInt);
/*       */   
/*       */   public static final native long CkSocket_CheckWriteableAsync(long paramLong, CkSocket paramCkSocket, int paramInt);
/*       */   
/*       */   public static final native void CkSocket_ClearSessionLog(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native long CkSocket_CloneSocket(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native boolean CkSocket_Close(long paramLong, CkSocket paramCkSocket, int paramInt);
/*       */   
/*       */   public static final native long CkSocket_CloseAsync(long paramLong, CkSocket paramCkSocket, int paramInt);
/*       */   
/*       */   public static final native boolean CkSocket_Connect(long paramLong, CkSocket paramCkSocket, String paramString, int paramInt1, boolean paramBoolean, int paramInt2);
/*       */   
/*       */   public static final native long CkSocket_ConnectAsync(long paramLong, CkSocket paramCkSocket, String paramString, int paramInt1, boolean paramBoolean, int paramInt2);
/*       */   
/*       */   public static final native boolean CkSocket_ConvertFromSsl(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native long CkSocket_ConvertFromSslAsync(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native boolean CkSocket_ConvertToSsl(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native long CkSocket_ConvertToSslAsync(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native void CkSocket_DnsCacheClear(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native boolean CkSocket_DnsLookup(long paramLong1, CkSocket paramCkSocket, String paramString, int paramInt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSocket_dnsLookup(long paramLong, CkSocket paramCkSocket, String paramString, int paramInt);
/*       */   
/*       */   public static final native long CkSocket_DnsLookupAsync(long paramLong, CkSocket paramCkSocket, String paramString, int paramInt);
/*       */   
/*       */   public static final native long CkSocket_GetMyCert(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native long CkSocket_GetReceivedClientCert(long paramLong, CkSocket paramCkSocket, int paramInt);
/*       */   
/*       */   public static final native boolean CkSocket_GetSslAcceptableClientCaDn(long paramLong1, CkSocket paramCkSocket, int paramInt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSocket_getSslAcceptableClientCaDn(long paramLong, CkSocket paramCkSocket, int paramInt);
/*       */   
/*       */   public static final native String CkSocket_sslAcceptableClientCaDn(long paramLong, CkSocket paramCkSocket, int paramInt);
/*       */   
/*       */   public static final native long CkSocket_GetSslServerCert(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native boolean CkSocket_InitSslServer(long paramLong1, CkSocket paramCkSocket, long paramLong2, CkCert paramCkCert);
/*       */   
/*       */   public static final native boolean CkSocket_IsUnlocked(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native boolean CkSocket_LoadTaskResult(long paramLong1, CkSocket paramCkSocket, long paramLong2, CkTask paramCkTask);
/*       */   
/*       */   public static final native boolean CkSocket_PollDataAvailable(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native long CkSocket_PollDataAvailableAsync(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native boolean CkSocket_ReceiveBd(long paramLong1, CkSocket paramCkSocket, long paramLong2, CkBinData paramCkBinData);
/*       */   
/*       */   public static final native long CkSocket_ReceiveBdAsync(long paramLong1, CkSocket paramCkSocket, long paramLong2, CkBinData paramCkBinData);
/*       */   
/*       */   public static final native boolean CkSocket_ReceiveBdN(long paramLong1, CkSocket paramCkSocket, long paramLong2, long paramLong3, CkBinData paramCkBinData);
/*       */   
/*       */   public static final native long CkSocket_ReceiveBdNAsync(long paramLong1, CkSocket paramCkSocket, long paramLong2, long paramLong3, CkBinData paramCkBinData);
/*       */   
/*       */   public static final native boolean CkSocket_ReceiveByte(long paramLong, CkSocket paramCkSocket, boolean paramBoolean);
/*       */   
/*       */   public static final native long CkSocket_ReceiveByteAsync(long paramLong, CkSocket paramCkSocket, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkSocket_ReceiveBytes(long paramLong1, CkSocket paramCkSocket, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native long CkSocket_ReceiveBytesAsync(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native boolean CkSocket_ReceiveBytesENC(long paramLong1, CkSocket paramCkSocket, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSocket_receiveBytesENC(long paramLong, CkSocket paramCkSocket, String paramString);
/*       */   
/*       */   public static final native long CkSocket_ReceiveBytesENCAsync(long paramLong, CkSocket paramCkSocket, String paramString);
/*       */   
/*       */   public static final native boolean CkSocket_ReceiveBytesN(long paramLong1, CkSocket paramCkSocket, long paramLong2, long paramLong3, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native long CkSocket_ReceiveBytesNAsync(long paramLong1, CkSocket paramCkSocket, long paramLong2);
/*       */   
/*       */   public static final native boolean CkSocket_ReceiveBytesToFile(long paramLong, CkSocket paramCkSocket, String paramString);
/*       */   
/*       */   public static final native long CkSocket_ReceiveBytesToFileAsync(long paramLong, CkSocket paramCkSocket, String paramString);
/*       */   
/*       */   public static final native int CkSocket_ReceiveCount(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native long CkSocket_ReceiveCountAsync(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native boolean CkSocket_ReceiveInt16(long paramLong, CkSocket paramCkSocket, boolean paramBoolean1, boolean paramBoolean2);
/*       */   
/*       */   public static final native long CkSocket_ReceiveInt16Async(long paramLong, CkSocket paramCkSocket, boolean paramBoolean1, boolean paramBoolean2);
/*       */   
/*       */   public static final native boolean CkSocket_ReceiveInt32(long paramLong, CkSocket paramCkSocket, boolean paramBoolean);
/*       */   
/*       */   public static final native long CkSocket_ReceiveInt32Async(long paramLong, CkSocket paramCkSocket, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkSocket_ReceiveNBytesENC(long paramLong1, CkSocket paramCkSocket, long paramLong2, String paramString, long paramLong3, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSocket_receiveNBytesENC(long paramLong1, CkSocket paramCkSocket, long paramLong2, String paramString);
/*       */   
/*       */   public static final native long CkSocket_ReceiveNBytesENCAsync(long paramLong1, CkSocket paramCkSocket, long paramLong2, String paramString);
/*       */   
/*       */   public static final native boolean CkSocket_ReceiveSb(long paramLong1, CkSocket paramCkSocket, long paramLong2, CkStringBuilder paramCkStringBuilder);
/*       */   
/*       */   public static final native long CkSocket_ReceiveSbAsync(long paramLong1, CkSocket paramCkSocket, long paramLong2, CkStringBuilder paramCkStringBuilder);
/*       */   
/*       */   public static final native boolean CkSocket_ReceiveString(long paramLong1, CkSocket paramCkSocket, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSocket_receiveString(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native long CkSocket_ReceiveStringAsync(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native boolean CkSocket_ReceiveStringMaxN(long paramLong1, CkSocket paramCkSocket, int paramInt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSocket_receiveStringMaxN(long paramLong, CkSocket paramCkSocket, int paramInt);
/*       */   
/*       */   public static final native long CkSocket_ReceiveStringMaxNAsync(long paramLong, CkSocket paramCkSocket, int paramInt);
/*       */   
/*       */   public static final native boolean CkSocket_ReceiveStringUntilByte(long paramLong1, CkSocket paramCkSocket, int paramInt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSocket_receiveStringUntilByte(long paramLong, CkSocket paramCkSocket, int paramInt);
/*       */   
/*       */   public static final native long CkSocket_ReceiveStringUntilByteAsync(long paramLong, CkSocket paramCkSocket, int paramInt);
/*       */   
/*       */   public static final native boolean CkSocket_ReceiveToCRLF(long paramLong1, CkSocket paramCkSocket, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSocket_receiveToCRLF(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native long CkSocket_ReceiveToCRLFAsync(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native boolean CkSocket_ReceiveUntilByte(long paramLong1, CkSocket paramCkSocket, int paramInt, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native long CkSocket_ReceiveUntilByteAsync(long paramLong, CkSocket paramCkSocket, int paramInt);
/*       */   
/*       */   public static final native boolean CkSocket_ReceiveUntilMatch(long paramLong1, CkSocket paramCkSocket, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSocket_receiveUntilMatch(long paramLong, CkSocket paramCkSocket, String paramString);
/*       */   
/*       */   public static final native long CkSocket_ReceiveUntilMatchAsync(long paramLong, CkSocket paramCkSocket, String paramString);
/*       */   
/*       */   public static final native boolean CkSocket_SaveLastError(long paramLong, CkSocket paramCkSocket, String paramString);
/*       */   
/*       */   public static final native int CkSocket_SelectForReading(long paramLong, CkSocket paramCkSocket, int paramInt);
/*       */   
/*       */   public static final native long CkSocket_SelectForReadingAsync(long paramLong, CkSocket paramCkSocket, int paramInt);
/*       */   
/*       */   public static final native int CkSocket_SelectForWriting(long paramLong, CkSocket paramCkSocket, int paramInt);
/*       */   
/*       */   public static final native long CkSocket_SelectForWritingAsync(long paramLong, CkSocket paramCkSocket, int paramInt);
/*       */   
/*       */   public static final native boolean CkSocket_SendBd(long paramLong1, CkSocket paramCkSocket, long paramLong2, CkBinData paramCkBinData, long paramLong3, long paramLong4);
/*       */   
/*       */   public static final native long CkSocket_SendBdAsync(long paramLong1, CkSocket paramCkSocket, long paramLong2, CkBinData paramCkBinData, long paramLong3, long paramLong4);
/*       */   
/*       */   public static final native boolean CkSocket_SendByte(long paramLong, CkSocket paramCkSocket, int paramInt);
/*       */   
/*       */   public static final native long CkSocket_SendByteAsync(long paramLong, CkSocket paramCkSocket, int paramInt);
/*       */   
/*       */   public static final native boolean CkSocket_SendBytes(long paramLong1, CkSocket paramCkSocket, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native long CkSocket_SendBytesAsync(long paramLong1, CkSocket paramCkSocket, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkSocket_SendBytesENC(long paramLong, CkSocket paramCkSocket, String paramString1, String paramString2);
/*       */   
/*       */   public static final native long CkSocket_SendBytesENCAsync(long paramLong, CkSocket paramCkSocket, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkSocket_SendCount(long paramLong, CkSocket paramCkSocket, int paramInt);
/*       */   
/*       */   public static final native long CkSocket_SendCountAsync(long paramLong, CkSocket paramCkSocket, int paramInt);
/*       */   
/*       */   public static final native boolean CkSocket_SendInt16(long paramLong, CkSocket paramCkSocket, int paramInt, boolean paramBoolean);
/*       */   
/*       */   public static final native long CkSocket_SendInt16Async(long paramLong, CkSocket paramCkSocket, int paramInt, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkSocket_SendInt32(long paramLong, CkSocket paramCkSocket, int paramInt, boolean paramBoolean);
/*       */   
/*       */   public static final native long CkSocket_SendInt32Async(long paramLong, CkSocket paramCkSocket, int paramInt, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkSocket_SendSb(long paramLong1, CkSocket paramCkSocket, long paramLong2, CkStringBuilder paramCkStringBuilder);
/*       */   
/*       */   public static final native long CkSocket_SendSbAsync(long paramLong1, CkSocket paramCkSocket, long paramLong2, CkStringBuilder paramCkStringBuilder);
/*       */   
/*       */   public static final native boolean CkSocket_SendString(long paramLong, CkSocket paramCkSocket, String paramString);
/*       */   
/*       */   public static final native long CkSocket_SendStringAsync(long paramLong, CkSocket paramCkSocket, String paramString);
/*       */   
/*       */   public static final native boolean CkSocket_SendWakeOnLan(long paramLong, CkSocket paramCkSocket, String paramString1, int paramInt, String paramString2);
/*       */   
/*       */   public static final native boolean CkSocket_SetSslClientCert(long paramLong1, CkSocket paramCkSocket, long paramLong2, CkCert paramCkCert);
/*       */   
/*       */   public static final native boolean CkSocket_SetSslClientCertPem(long paramLong, CkSocket paramCkSocket, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkSocket_SetSslClientCertPfx(long paramLong, CkSocket paramCkSocket, String paramString1, String paramString2);
/*       */   
/*       */   public static final native void CkSocket_SleepMs(long paramLong, CkSocket paramCkSocket, int paramInt);
/*       */   
/*       */   public static final native boolean CkSocket_SshAuthenticatePk(long paramLong1, CkSocket paramCkSocket, String paramString, long paramLong2, CkSshKey paramCkSshKey);
/*       */   
/*       */   public static final native long CkSocket_SshAuthenticatePkAsync(long paramLong1, CkSocket paramCkSocket, String paramString, long paramLong2, CkSshKey paramCkSshKey);
/*       */   
/*       */   public static final native boolean CkSocket_SshAuthenticatePw(long paramLong, CkSocket paramCkSocket, String paramString1, String paramString2);
/*       */   
/*       */   public static final native long CkSocket_SshAuthenticatePwAsync(long paramLong, CkSocket paramCkSocket, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkSocket_SshCloseTunnel(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native long CkSocket_SshCloseTunnelAsync(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native long CkSocket_SshOpenChannel(long paramLong, CkSocket paramCkSocket, String paramString, int paramInt1, boolean paramBoolean, int paramInt2);
/*       */   
/*       */   public static final native long CkSocket_SshOpenChannelAsync(long paramLong, CkSocket paramCkSocket, String paramString, int paramInt1, boolean paramBoolean, int paramInt2);
/*       */   
/*       */   public static final native boolean CkSocket_SshOpenTunnel(long paramLong, CkSocket paramCkSocket, String paramString, int paramInt);
/*       */   
/*       */   public static final native long CkSocket_SshOpenTunnelAsync(long paramLong, CkSocket paramCkSocket, String paramString, int paramInt);
/*       */   
/*       */   public static final native void CkSocket_StartTiming(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native boolean CkSocket_TakeSocket(long paramLong1, CkSocket paramCkSocket1, long paramLong2, CkSocket paramCkSocket2);
/*       */   
/*       */   public static final native boolean CkSocket_TlsRenegotiate(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native long CkSocket_TlsRenegotiateAsync(long paramLong, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native boolean CkSocket_UnlockComponent(long paramLong, CkSocket paramCkSocket, String paramString);
/*       */   
/*       */   public static final native boolean CkSocket_UseSsh(long paramLong1, CkSocket paramCkSocket, long paramLong2, CkSsh paramCkSsh);
/*       */   
/*       */   public static final native long new_CkSpider();
/*       */   
/*       */   public static final native void delete_CkSpider(long paramLong);
/*       */   
/*       */   public static final native void CkSpider_LastErrorXml(long paramLong1, CkSpider paramCkSpider, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkSpider_LastErrorHtml(long paramLong1, CkSpider paramCkSpider, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkSpider_LastErrorText(long paramLong1, CkSpider paramCkSpider, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkSpider_put_EventCallbackObject(long paramLong1, CkSpider paramCkSpider, long paramLong2, CkBaseProgress paramCkBaseProgress);
/*       */   
/*       */   public static final native boolean CkSpider_get_AbortCurrent(long paramLong, CkSpider paramCkSpider);
/*       */   
/*       */   public static final native void CkSpider_put_AbortCurrent(long paramLong, CkSpider paramCkSpider, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkSpider_get_AvoidHttps(long paramLong, CkSpider paramCkSpider);
/*       */   
/*       */   public static final native void CkSpider_put_AvoidHttps(long paramLong, CkSpider paramCkSpider, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkSpider_get_CacheDir(long paramLong1, CkSpider paramCkSpider, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSpider_cacheDir(long paramLong, CkSpider paramCkSpider);
/*       */   
/*       */   public static final native void CkSpider_put_CacheDir(long paramLong, CkSpider paramCkSpider, String paramString);
/*       */   
/*       */   public static final native boolean CkSpider_get_ChopAtQuery(long paramLong, CkSpider paramCkSpider);
/*       */   
/*       */   public static final native void CkSpider_put_ChopAtQuery(long paramLong, CkSpider paramCkSpider, boolean paramBoolean);
/*       */   
/*       */   public static final native int CkSpider_get_ConnectTimeout(long paramLong, CkSpider paramCkSpider);
/*       */   
/*       */   public static final native void CkSpider_put_ConnectTimeout(long paramLong, CkSpider paramCkSpider, int paramInt);
/*       */   
/*       */   public static final native void CkSpider_get_DebugLogFilePath(long paramLong1, CkSpider paramCkSpider, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSpider_debugLogFilePath(long paramLong, CkSpider paramCkSpider);
/*       */   
/*       */   public static final native void CkSpider_put_DebugLogFilePath(long paramLong, CkSpider paramCkSpider, String paramString);
/*       */   
/*       */   public static final native void CkSpider_get_Domain(long paramLong1, CkSpider paramCkSpider, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSpider_domain(long paramLong, CkSpider paramCkSpider);
/*       */   
/*       */   public static final native boolean CkSpider_get_FetchFromCache(long paramLong, CkSpider paramCkSpider);
/*       */   
/*       */   public static final native void CkSpider_put_FetchFromCache(long paramLong, CkSpider paramCkSpider, boolean paramBoolean);
/*       */   
/*       */   public static final native int CkSpider_get_HeartbeatMs(long paramLong, CkSpider paramCkSpider);
/*       */   
/*       */   public static final native void CkSpider_put_HeartbeatMs(long paramLong, CkSpider paramCkSpider, int paramInt);
/*       */   
/*       */   public static final native void CkSpider_get_LastErrorHtml(long paramLong1, CkSpider paramCkSpider, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSpider_lastErrorHtml(long paramLong, CkSpider paramCkSpider);
/*       */   
/*       */   public static final native void CkSpider_get_LastErrorText(long paramLong1, CkSpider paramCkSpider, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSpider_lastErrorText(long paramLong, CkSpider paramCkSpider);
/*       */   
/*       */   public static final native void CkSpider_get_LastErrorXml(long paramLong1, CkSpider paramCkSpider, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSpider_lastErrorXml(long paramLong, CkSpider paramCkSpider);
/*       */   
/*       */   public static final native boolean CkSpider_get_LastFromCache(long paramLong, CkSpider paramCkSpider);
/*       */   
/*       */   public static final native void CkSpider_get_LastHtml(long paramLong1, CkSpider paramCkSpider, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSpider_lastHtml(long paramLong, CkSpider paramCkSpider);
/*       */   
/*       */   public static final native void CkSpider_get_LastHtmlDescription(long paramLong1, CkSpider paramCkSpider, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSpider_lastHtmlDescription(long paramLong, CkSpider paramCkSpider);
/*       */   
/*       */   public static final native void CkSpider_get_LastHtmlKeywords(long paramLong1, CkSpider paramCkSpider, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSpider_lastHtmlKeywords(long paramLong, CkSpider paramCkSpider);
/*       */   
/*       */   public static final native void CkSpider_get_LastHtmlTitle(long paramLong1, CkSpider paramCkSpider, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSpider_lastHtmlTitle(long paramLong, CkSpider paramCkSpider);
/*       */   
/*       */   public static final native boolean CkSpider_get_LastMethodSuccess(long paramLong, CkSpider paramCkSpider);
/*       */   
/*       */   public static final native void CkSpider_put_LastMethodSuccess(long paramLong, CkSpider paramCkSpider, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkSpider_get_LastModDate(long paramLong1, CkSpider paramCkSpider, long paramLong2, SYSTEMTIME paramSYSTEMTIME);
/*       */   
/*       */   public static final native void CkSpider_get_LastModDateStr(long paramLong1, CkSpider paramCkSpider, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSpider_lastModDateStr(long paramLong, CkSpider paramCkSpider);
/*       */   
/*       */   public static final native void CkSpider_get_LastUrl(long paramLong1, CkSpider paramCkSpider, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSpider_lastUrl(long paramLong, CkSpider paramCkSpider);
/*       */   
/*       */   public static final native int CkSpider_get_MaxResponseSize(long paramLong, CkSpider paramCkSpider);
/*       */   
/*       */   public static final native void CkSpider_put_MaxResponseSize(long paramLong, CkSpider paramCkSpider, int paramInt);
/*       */   
/*       */   public static final native int CkSpider_get_MaxUrlLen(long paramLong, CkSpider paramCkSpider);
/*       */   
/*       */   public static final native void CkSpider_put_MaxUrlLen(long paramLong, CkSpider paramCkSpider, int paramInt);
/*       */   
/*       */   public static final native int CkSpider_get_NumAvoidPatterns(long paramLong, CkSpider paramCkSpider);
/*       */   
/*       */   public static final native int CkSpider_get_NumFailed(long paramLong, CkSpider paramCkSpider);
/*       */   
/*       */   public static final native int CkSpider_get_NumOutboundLinks(long paramLong, CkSpider paramCkSpider);
/*       */   
/*       */   public static final native int CkSpider_get_NumSpidered(long paramLong, CkSpider paramCkSpider);
/*       */   
/*       */   public static final native int CkSpider_get_NumUnspidered(long paramLong, CkSpider paramCkSpider);
/*       */   
/*       */   public static final native boolean CkSpider_get_PreferIpv6(long paramLong, CkSpider paramCkSpider);
/*       */   
/*       */   public static final native void CkSpider_put_PreferIpv6(long paramLong, CkSpider paramCkSpider, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkSpider_get_ProxyDomain(long paramLong1, CkSpider paramCkSpider, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSpider_proxyDomain(long paramLong, CkSpider paramCkSpider);
/*       */   
/*       */   public static final native void CkSpider_put_ProxyDomain(long paramLong, CkSpider paramCkSpider, String paramString);
/*       */   
/*       */   public static final native void CkSpider_get_ProxyLogin(long paramLong1, CkSpider paramCkSpider, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSpider_proxyLogin(long paramLong, CkSpider paramCkSpider);
/*       */   
/*       */   public static final native void CkSpider_put_ProxyLogin(long paramLong, CkSpider paramCkSpider, String paramString);
/*       */   
/*       */   public static final native void CkSpider_get_ProxyPassword(long paramLong1, CkSpider paramCkSpider, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSpider_proxyPassword(long paramLong, CkSpider paramCkSpider);
/*       */   
/*       */   public static final native void CkSpider_put_ProxyPassword(long paramLong, CkSpider paramCkSpider, String paramString);
/*       */   
/*       */   public static final native int CkSpider_get_ProxyPort(long paramLong, CkSpider paramCkSpider);
/*       */   
/*       */   public static final native void CkSpider_put_ProxyPort(long paramLong, CkSpider paramCkSpider, int paramInt);
/*       */   
/*       */   public static final native int CkSpider_get_ReadTimeout(long paramLong, CkSpider paramCkSpider);
/*       */   
/*       */   public static final native void CkSpider_put_ReadTimeout(long paramLong, CkSpider paramCkSpider, int paramInt);
/*       */   
/*       */   public static final native boolean CkSpider_get_UpdateCache(long paramLong, CkSpider paramCkSpider);
/*       */   
/*       */   public static final native void CkSpider_put_UpdateCache(long paramLong, CkSpider paramCkSpider, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkSpider_get_UserAgent(long paramLong1, CkSpider paramCkSpider, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSpider_userAgent(long paramLong, CkSpider paramCkSpider);
/*       */   
/*       */   public static final native void CkSpider_put_UserAgent(long paramLong, CkSpider paramCkSpider, String paramString);
/*       */   
/*       */   public static final native boolean CkSpider_get_VerboseLogging(long paramLong, CkSpider paramCkSpider);
/*       */   
/*       */   public static final native void CkSpider_put_VerboseLogging(long paramLong, CkSpider paramCkSpider, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkSpider_get_Version(long paramLong1, CkSpider paramCkSpider, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSpider_version(long paramLong, CkSpider paramCkSpider);
/*       */   
/*       */   public static final native int CkSpider_get_WindDownCount(long paramLong, CkSpider paramCkSpider);
/*       */   
/*       */   public static final native void CkSpider_put_WindDownCount(long paramLong, CkSpider paramCkSpider, int paramInt);
/*       */   
/*       */   public static final native void CkSpider_AddAvoidOutboundLinkPattern(long paramLong, CkSpider paramCkSpider, String paramString);
/*       */   
/*       */   public static final native void CkSpider_AddAvoidPattern(long paramLong, CkSpider paramCkSpider, String paramString);
/*       */   
/*       */   public static final native void CkSpider_AddMustMatchPattern(long paramLong, CkSpider paramCkSpider, String paramString);
/*       */   
/*       */   public static final native void CkSpider_AddUnspidered(long paramLong, CkSpider paramCkSpider, String paramString);
/*       */   
/*       */   public static final native boolean CkSpider_CanonicalizeUrl(long paramLong1, CkSpider paramCkSpider, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSpider_canonicalizeUrl(long paramLong, CkSpider paramCkSpider, String paramString);
/*       */   
/*       */   public static final native void CkSpider_ClearFailedUrls(long paramLong, CkSpider paramCkSpider);
/*       */   
/*       */   public static final native void CkSpider_ClearOutboundLinks(long paramLong, CkSpider paramCkSpider);
/*       */   
/*       */   public static final native void CkSpider_ClearSpideredUrls(long paramLong, CkSpider paramCkSpider);
/*       */   
/*       */   public static final native boolean CkSpider_CrawlNext(long paramLong, CkSpider paramCkSpider);
/*       */   
/*       */   public static final native long CkSpider_CrawlNextAsync(long paramLong, CkSpider paramCkSpider);
/*       */   
/*       */   public static final native boolean CkSpider_FetchRobotsText(long paramLong1, CkSpider paramCkSpider, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSpider_fetchRobotsText(long paramLong, CkSpider paramCkSpider);
/*       */   
/*       */   public static final native long CkSpider_FetchRobotsTextAsync(long paramLong, CkSpider paramCkSpider);
/*       */   
/*       */   public static final native boolean CkSpider_GetAvoidPattern(long paramLong1, CkSpider paramCkSpider, int paramInt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSpider_getAvoidPattern(long paramLong, CkSpider paramCkSpider, int paramInt);
/*       */   
/*       */   public static final native String CkSpider_avoidPattern(long paramLong, CkSpider paramCkSpider, int paramInt);
/*       */   
/*       */   public static final native boolean CkSpider_GetBaseDomain(long paramLong1, CkSpider paramCkSpider, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSpider_getBaseDomain(long paramLong, CkSpider paramCkSpider, String paramString);
/*       */   
/*       */   public static final native String CkSpider_baseDomain(long paramLong, CkSpider paramCkSpider, String paramString);
/*       */   
/*       */   public static final native boolean CkSpider_GetFailedUrl(long paramLong1, CkSpider paramCkSpider, int paramInt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSpider_getFailedUrl(long paramLong, CkSpider paramCkSpider, int paramInt);
/*       */   
/*       */   public static final native String CkSpider_failedUrl(long paramLong, CkSpider paramCkSpider, int paramInt);
/*       */   
/*       */   public static final native boolean CkSpider_GetOutboundLink(long paramLong1, CkSpider paramCkSpider, int paramInt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSpider_getOutboundLink(long paramLong, CkSpider paramCkSpider, int paramInt);
/*       */   
/*       */   public static final native String CkSpider_outboundLink(long paramLong, CkSpider paramCkSpider, int paramInt);
/*       */   
/*       */   public static final native boolean CkSpider_GetSpideredUrl(long paramLong1, CkSpider paramCkSpider, int paramInt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSpider_getSpideredUrl(long paramLong, CkSpider paramCkSpider, int paramInt);
/*       */   
/*       */   public static final native String CkSpider_spideredUrl(long paramLong, CkSpider paramCkSpider, int paramInt);
/*       */   
/*       */   public static final native boolean CkSpider_GetUnspideredUrl(long paramLong1, CkSpider paramCkSpider, int paramInt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSpider_getUnspideredUrl(long paramLong, CkSpider paramCkSpider, int paramInt);
/*       */   
/*       */   public static final native String CkSpider_unspideredUrl(long paramLong, CkSpider paramCkSpider, int paramInt);
/*       */   
/*       */   public static final native boolean CkSpider_GetUrlDomain(long paramLong1, CkSpider paramCkSpider, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSpider_getUrlDomain(long paramLong, CkSpider paramCkSpider, String paramString);
/*       */   
/*       */   public static final native String CkSpider_urlDomain(long paramLong, CkSpider paramCkSpider, String paramString);
/*       */   
/*       */   public static final native void CkSpider_Initialize(long paramLong, CkSpider paramCkSpider, String paramString);
/*       */   
/*       */   public static final native boolean CkSpider_RecrawlLast(long paramLong, CkSpider paramCkSpider);
/*       */   
/*       */   public static final native long CkSpider_RecrawlLastAsync(long paramLong, CkSpider paramCkSpider);
/*       */   
/*       */   public static final native boolean CkSpider_SaveLastError(long paramLong, CkSpider paramCkSpider, String paramString);
/*       */   
/*       */   public static final native void CkSpider_SkipUnspidered(long paramLong, CkSpider paramCkSpider, int paramInt);
/*       */   
/*       */   public static final native void CkSpider_SleepMs(long paramLong, CkSpider paramCkSpider, int paramInt);
/*       */   
/*       */   public static final native long new_CkSsh();
/*       */   
/*       */   public static final native void delete_CkSsh(long paramLong);
/*       */   
/*       */   public static final native void CkSsh_LastErrorXml(long paramLong1, CkSsh paramCkSsh, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkSsh_LastErrorHtml(long paramLong1, CkSsh paramCkSsh, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkSsh_LastErrorText(long paramLong1, CkSsh paramCkSsh, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkSsh_put_EventCallbackObject(long paramLong1, CkSsh paramCkSsh, long paramLong2, CkBaseProgress paramCkBaseProgress);
/*       */   
/*       */   public static final native boolean CkSsh_get_AbortCurrent(long paramLong, CkSsh paramCkSsh);
/*       */   
/*       */   public static final native void CkSsh_put_AbortCurrent(long paramLong, CkSsh paramCkSsh, boolean paramBoolean);
/*       */   
/*       */   public static final native int CkSsh_get_AuthFailReason(long paramLong, CkSsh paramCkSsh);
/*       */   
/*       */   public static final native boolean CkSsh_get_CaretControl(long paramLong, CkSsh paramCkSsh);
/*       */   
/*       */   public static final native void CkSsh_put_CaretControl(long paramLong, CkSsh paramCkSsh, boolean paramBoolean);
/*       */   
/*       */   public static final native int CkSsh_get_ChannelOpenFailCode(long paramLong, CkSsh paramCkSsh);
/*       */   
/*       */   public static final native void CkSsh_get_ChannelOpenFailReason(long paramLong1, CkSsh paramCkSsh, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSsh_channelOpenFailReason(long paramLong, CkSsh paramCkSsh);
/*       */   
/*       */   public static final native void CkSsh_get_ClientIdentifier(long paramLong1, CkSsh paramCkSsh, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSsh_clientIdentifier(long paramLong, CkSsh paramCkSsh);
/*       */   
/*       */   public static final native void CkSsh_put_ClientIdentifier(long paramLong, CkSsh paramCkSsh, String paramString);
/*       */   
/*       */   public static final native void CkSsh_get_ClientIpAddress(long paramLong1, CkSsh paramCkSsh, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSsh_clientIpAddress(long paramLong, CkSsh paramCkSsh);
/*       */   
/*       */   public static final native void CkSsh_put_ClientIpAddress(long paramLong, CkSsh paramCkSsh, String paramString);
/*       */   
/*       */   public static final native int CkSsh_get_ClientPort(long paramLong, CkSsh paramCkSsh);
/*       */   
/*       */   public static final native void CkSsh_put_ClientPort(long paramLong, CkSsh paramCkSsh, int paramInt);
/*       */   
/*       */   public static final native int CkSsh_get_ConnectTimeoutMs(long paramLong, CkSsh paramCkSsh);
/*       */   
/*       */   public static final native void CkSsh_put_ConnectTimeoutMs(long paramLong, CkSsh paramCkSsh, int paramInt);
/*       */   
/*       */   public static final native void CkSsh_get_DebugLogFilePath(long paramLong1, CkSsh paramCkSsh, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSsh_debugLogFilePath(long paramLong, CkSsh paramCkSsh);
/*       */   
/*       */   public static final native void CkSsh_put_DebugLogFilePath(long paramLong, CkSsh paramCkSsh, String paramString);
/*       */   
/*       */   public static final native int CkSsh_get_DisconnectCode(long paramLong, CkSsh paramCkSsh);
/*       */   
/*       */   public static final native void CkSsh_get_DisconnectReason(long paramLong1, CkSsh paramCkSsh, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSsh_disconnectReason(long paramLong, CkSsh paramCkSsh);
/*       */   
/*       */   public static final native boolean CkSsh_get_EnableCompression(long paramLong, CkSsh paramCkSsh);
/*       */   
/*       */   public static final native void CkSsh_put_EnableCompression(long paramLong, CkSsh paramCkSsh, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkSsh_get_ForceCipher(long paramLong1, CkSsh paramCkSsh, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSsh_forceCipher(long paramLong, CkSsh paramCkSsh);
/*       */   
/*       */   public static final native void CkSsh_put_ForceCipher(long paramLong, CkSsh paramCkSsh, String paramString);
/*       */   
/*       */   public static final native int CkSsh_get_HeartbeatMs(long paramLong, CkSsh paramCkSsh);
/*       */   
/*       */   public static final native void CkSsh_put_HeartbeatMs(long paramLong, CkSsh paramCkSsh, int paramInt);
/*       */   
/*       */   public static final native void CkSsh_get_HostKeyAlg(long paramLong1, CkSsh paramCkSsh, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSsh_hostKeyAlg(long paramLong, CkSsh paramCkSsh);
/*       */   
/*       */   public static final native void CkSsh_put_HostKeyAlg(long paramLong, CkSsh paramCkSsh, String paramString);
/*       */   
/*       */   public static final native void CkSsh_get_HostKeyFingerprint(long paramLong1, CkSsh paramCkSsh, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSsh_hostKeyFingerprint(long paramLong, CkSsh paramCkSsh);
/*       */   
/*       */   public static final native void CkSsh_get_HttpProxyAuthMethod(long paramLong1, CkSsh paramCkSsh, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSsh_httpProxyAuthMethod(long paramLong, CkSsh paramCkSsh);
/*       */   
/*       */   public static final native void CkSsh_put_HttpProxyAuthMethod(long paramLong, CkSsh paramCkSsh, String paramString);
/*       */   
/*       */   public static final native void CkSsh_get_HttpProxyDomain(long paramLong1, CkSsh paramCkSsh, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSsh_httpProxyDomain(long paramLong, CkSsh paramCkSsh);
/*       */   
/*       */   public static final native void CkSsh_put_HttpProxyDomain(long paramLong, CkSsh paramCkSsh, String paramString);
/*       */   
/*       */   public static final native void CkSsh_get_HttpProxyHostname(long paramLong1, CkSsh paramCkSsh, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSsh_httpProxyHostname(long paramLong, CkSsh paramCkSsh);
/*       */   
/*       */   public static final native void CkSsh_put_HttpProxyHostname(long paramLong, CkSsh paramCkSsh, String paramString);
/*       */   
/*       */   public static final native void CkSsh_get_HttpProxyPassword(long paramLong1, CkSsh paramCkSsh, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSsh_httpProxyPassword(long paramLong, CkSsh paramCkSsh);
/*       */   
/*       */   public static final native void CkSsh_put_HttpProxyPassword(long paramLong, CkSsh paramCkSsh, String paramString);
/*       */   
/*       */   public static final native int CkSsh_get_HttpProxyPort(long paramLong, CkSsh paramCkSsh);
/*       */   
/*       */   public static final native void CkSsh_put_HttpProxyPort(long paramLong, CkSsh paramCkSsh, int paramInt);
/*       */   
/*       */   public static final native void CkSsh_get_HttpProxyUsername(long paramLong1, CkSsh paramCkSsh, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSsh_httpProxyUsername(long paramLong, CkSsh paramCkSsh);
/*       */   
/*       */   public static final native void CkSsh_put_HttpProxyUsername(long paramLong, CkSsh paramCkSsh, String paramString);
/*       */   
/*       */   public static final native int CkSsh_get_IdleTimeoutMs(long paramLong, CkSsh paramCkSsh);
/*       */   
/*       */   public static final native void CkSsh_put_IdleTimeoutMs(long paramLong, CkSsh paramCkSsh, int paramInt);
/*       */   
/*       */   public static final native boolean CkSsh_get_IsConnected(long paramLong, CkSsh paramCkSsh);
/*       */   
/*       */   public static final native boolean CkSsh_get_KeepSessionLog(long paramLong, CkSsh paramCkSsh);
/*       */   
/*       */   public static final native void CkSsh_put_KeepSessionLog(long paramLong, CkSsh paramCkSsh, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkSsh_get_LastErrorHtml(long paramLong1, CkSsh paramCkSsh, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSsh_lastErrorHtml(long paramLong, CkSsh paramCkSsh);
/*       */   
/*       */   public static final native void CkSsh_get_LastErrorText(long paramLong1, CkSsh paramCkSsh, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSsh_lastErrorText(long paramLong, CkSsh paramCkSsh);
/*       */   
/*       */   public static final native void CkSsh_get_LastErrorXml(long paramLong1, CkSsh paramCkSsh, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSsh_lastErrorXml(long paramLong, CkSsh paramCkSsh);
/*       */   
/*       */   public static final native boolean CkSsh_get_LastMethodSuccess(long paramLong, CkSsh paramCkSsh);
/*       */   
/*       */   public static final native void CkSsh_put_LastMethodSuccess(long paramLong, CkSsh paramCkSsh, boolean paramBoolean);
/*       */   
/*       */   public static final native int CkSsh_get_MaxPacketSize(long paramLong, CkSsh paramCkSsh);
/*       */   
/*       */   public static final native void CkSsh_put_MaxPacketSize(long paramLong, CkSsh paramCkSsh, int paramInt);
/*       */   
/*       */   public static final native int CkSsh_get_NumOpenChannels(long paramLong, CkSsh paramCkSsh);
/*       */   
/*       */   public static final native boolean CkSsh_get_PasswordChangeRequested(long paramLong, CkSsh paramCkSsh);
/*       */   
/*       */   public static final native boolean CkSsh_get_PreferIpv6(long paramLong, CkSsh paramCkSsh);
/*       */   
/*       */   public static final native void CkSsh_put_PreferIpv6(long paramLong, CkSsh paramCkSsh, boolean paramBoolean);
/*       */   
/*       */   public static final native int CkSsh_get_ReadTimeoutMs(long paramLong, CkSsh paramCkSsh);
/*       */   
/*       */   public static final native void CkSsh_put_ReadTimeoutMs(long paramLong, CkSsh paramCkSsh, int paramInt);
/*       */   
/*       */   public static final native void CkSsh_get_ReqExecCharset(long paramLong1, CkSsh paramCkSsh, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSsh_reqExecCharset(long paramLong, CkSsh paramCkSsh);
/*       */   
/*       */   public static final native void CkSsh_put_ReqExecCharset(long paramLong, CkSsh paramCkSsh, String paramString);
/*       */   
/*       */   public static final native void CkSsh_get_ServerIdentifier(long paramLong1, CkSsh paramCkSsh, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSsh_serverIdentifier(long paramLong, CkSsh paramCkSsh);
/*       */   
/*       */   public static final native void CkSsh_get_SessionLog(long paramLong1, CkSsh paramCkSsh, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSsh_sessionLog(long paramLong, CkSsh paramCkSsh);
/*       */   
/*       */   public static final native void CkSsh_get_SocksHostname(long paramLong1, CkSsh paramCkSsh, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSsh_socksHostname(long paramLong, CkSsh paramCkSsh);
/*       */   
/*       */   public static final native void CkSsh_put_SocksHostname(long paramLong, CkSsh paramCkSsh, String paramString);
/*       */   
/*       */   public static final native void CkSsh_get_SocksPassword(long paramLong1, CkSsh paramCkSsh, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSsh_socksPassword(long paramLong, CkSsh paramCkSsh);
/*       */   
/*       */   public static final native void CkSsh_put_SocksPassword(long paramLong, CkSsh paramCkSsh, String paramString);
/*       */   
/*       */   public static final native int CkSsh_get_SocksPort(long paramLong, CkSsh paramCkSsh);
/*       */   
/*       */   public static final native void CkSsh_put_SocksPort(long paramLong, CkSsh paramCkSsh, int paramInt);
/*       */   
/*       */   public static final native void CkSsh_get_SocksUsername(long paramLong1, CkSsh paramCkSsh, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSsh_socksUsername(long paramLong, CkSsh paramCkSsh);
/*       */   
/*       */   public static final native void CkSsh_put_SocksUsername(long paramLong, CkSsh paramCkSsh, String paramString);
/*       */   
/*       */   public static final native int CkSsh_get_SocksVersion(long paramLong, CkSsh paramCkSsh);
/*       */   
/*       */   public static final native void CkSsh_put_SocksVersion(long paramLong, CkSsh paramCkSsh, int paramInt);
/*       */   
/*       */   public static final native int CkSsh_get_SoRcvBuf(long paramLong, CkSsh paramCkSsh);
/*       */   
/*       */   public static final native void CkSsh_put_SoRcvBuf(long paramLong, CkSsh paramCkSsh, int paramInt);
/*       */   
/*       */   public static final native int CkSsh_get_SoSndBuf(long paramLong, CkSsh paramCkSsh);
/*       */   
/*       */   public static final native void CkSsh_put_SoSndBuf(long paramLong, CkSsh paramCkSsh, int paramInt);
/*       */   
/*       */   public static final native boolean CkSsh_get_StderrToStdout(long paramLong, CkSsh paramCkSsh);
/*       */   
/*       */   public static final native void CkSsh_put_StderrToStdout(long paramLong, CkSsh paramCkSsh, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkSsh_get_StripColorCodes(long paramLong, CkSsh paramCkSsh);
/*       */   
/*       */   public static final native void CkSsh_put_StripColorCodes(long paramLong, CkSsh paramCkSsh, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkSsh_get_TcpNoDelay(long paramLong, CkSsh paramCkSsh);
/*       */   
/*       */   public static final native void CkSsh_put_TcpNoDelay(long paramLong, CkSsh paramCkSsh, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkSsh_get_UncommonOptions(long paramLong1, CkSsh paramCkSsh, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSsh_uncommonOptions(long paramLong, CkSsh paramCkSsh);
/*       */   
/*       */   public static final native void CkSsh_put_UncommonOptions(long paramLong, CkSsh paramCkSsh, String paramString);
/*       */   
/*       */   public static final native void CkSsh_get_UserAuthBanner(long paramLong1, CkSsh paramCkSsh, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSsh_userAuthBanner(long paramLong, CkSsh paramCkSsh);
/*       */   
/*       */   public static final native void CkSsh_put_UserAuthBanner(long paramLong, CkSsh paramCkSsh, String paramString);
/*       */   
/*       */   public static final native boolean CkSsh_get_VerboseLogging(long paramLong, CkSsh paramCkSsh);
/*       */   
/*       */   public static final native void CkSsh_put_VerboseLogging(long paramLong, CkSsh paramCkSsh, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkSsh_get_Version(long paramLong1, CkSsh paramCkSsh, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSsh_version(long paramLong, CkSsh paramCkSsh);
/*       */   
/*       */   public static final native boolean CkSsh_AuthenticatePk(long paramLong1, CkSsh paramCkSsh, String paramString, long paramLong2, CkSshKey paramCkSshKey);
/*       */   
/*       */   public static final native long CkSsh_AuthenticatePkAsync(long paramLong1, CkSsh paramCkSsh, String paramString, long paramLong2, CkSshKey paramCkSshKey);
/*       */   
/*       */   public static final native boolean CkSsh_AuthenticatePw(long paramLong, CkSsh paramCkSsh, String paramString1, String paramString2);
/*       */   
/*       */   public static final native long CkSsh_AuthenticatePwAsync(long paramLong, CkSsh paramCkSsh, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkSsh_AuthenticatePwPk(long paramLong1, CkSsh paramCkSsh, String paramString1, String paramString2, long paramLong2, CkSshKey paramCkSshKey);
/*       */   
/*       */   public static final native long CkSsh_AuthenticatePwPkAsync(long paramLong1, CkSsh paramCkSsh, String paramString1, String paramString2, long paramLong2, CkSshKey paramCkSshKey);
/*       */   
/*       */   public static final native boolean CkSsh_AuthenticateSecPw(long paramLong1, CkSsh paramCkSsh, long paramLong2, CkSecureString paramCkSecureString1, long paramLong3, CkSecureString paramCkSecureString2);
/*       */   
/*       */   public static final native long CkSsh_AuthenticateSecPwAsync(long paramLong1, CkSsh paramCkSsh, long paramLong2, CkSecureString paramCkSecureString1, long paramLong3, CkSecureString paramCkSecureString2);
/*       */   
/*       */   public static final native boolean CkSsh_AuthenticateSecPwPk(long paramLong1, CkSsh paramCkSsh, long paramLong2, CkSecureString paramCkSecureString1, long paramLong3, CkSecureString paramCkSecureString2, long paramLong4, CkSshKey paramCkSshKey);
/*       */   
/*       */   public static final native long CkSsh_AuthenticateSecPwPkAsync(long paramLong1, CkSsh paramCkSsh, long paramLong2, CkSecureString paramCkSecureString1, long paramLong3, CkSecureString paramCkSecureString2, long paramLong4, CkSshKey paramCkSshKey);
/*       */   
/*       */   public static final native boolean CkSsh_ChannelIsOpen(long paramLong, CkSsh paramCkSsh, int paramInt);
/*       */   
/*       */   public static final native int CkSsh_ChannelPoll(long paramLong, CkSsh paramCkSsh, int paramInt1, int paramInt2);
/*       */   
/*       */   public static final native long CkSsh_ChannelPollAsync(long paramLong, CkSsh paramCkSsh, int paramInt1, int paramInt2);
/*       */   
/*       */   public static final native int CkSsh_ChannelRead(long paramLong, CkSsh paramCkSsh, int paramInt);
/*       */   
/*       */   public static final native long CkSsh_ChannelReadAsync(long paramLong, CkSsh paramCkSsh, int paramInt);
/*       */   
/*       */   public static final native int CkSsh_ChannelReadAndPoll(long paramLong, CkSsh paramCkSsh, int paramInt1, int paramInt2);
/*       */   
/*       */   public static final native long CkSsh_ChannelReadAndPollAsync(long paramLong, CkSsh paramCkSsh, int paramInt1, int paramInt2);
/*       */   
/*       */   public static final native int CkSsh_ChannelReadAndPoll2(long paramLong, CkSsh paramCkSsh, int paramInt1, int paramInt2, int paramInt3);
/*       */   
/*       */   public static final native long CkSsh_ChannelReadAndPoll2Async(long paramLong, CkSsh paramCkSsh, int paramInt1, int paramInt2, int paramInt3);
/*       */   
/*       */   public static final native boolean CkSsh_ChannelReceivedClose(long paramLong, CkSsh paramCkSsh, int paramInt);
/*       */   
/*       */   public static final native boolean CkSsh_ChannelReceivedEof(long paramLong, CkSsh paramCkSsh, int paramInt);
/*       */   
/*       */   public static final native boolean CkSsh_ChannelReceivedExitStatus(long paramLong, CkSsh paramCkSsh, int paramInt);
/*       */   
/*       */   public static final native boolean CkSsh_ChannelReceiveToClose(long paramLong, CkSsh paramCkSsh, int paramInt);
/*       */   
/*       */   public static final native long CkSsh_ChannelReceiveToCloseAsync(long paramLong, CkSsh paramCkSsh, int paramInt);
/*       */   
/*       */   public static final native boolean CkSsh_ChannelReceiveUntilMatch(long paramLong, CkSsh paramCkSsh, int paramInt, String paramString1, String paramString2, boolean paramBoolean);
/*       */   
/*       */   public static final native long CkSsh_ChannelReceiveUntilMatchAsync(long paramLong, CkSsh paramCkSsh, int paramInt, String paramString1, String paramString2, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkSsh_ChannelReceiveUntilMatchN(long paramLong1, CkSsh paramCkSsh, int paramInt, long paramLong2, CkStringArray paramCkStringArray, String paramString, boolean paramBoolean);
/*       */   
/*       */   public static final native long CkSsh_ChannelReceiveUntilMatchNAsync(long paramLong1, CkSsh paramCkSsh, int paramInt, long paramLong2, CkStringArray paramCkStringArray, String paramString, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkSsh_ChannelRelease(long paramLong, CkSsh paramCkSsh, int paramInt);
/*       */   
/*       */   public static final native boolean CkSsh_ChannelSendClose(long paramLong, CkSsh paramCkSsh, int paramInt);
/*       */   
/*       */   public static final native long CkSsh_ChannelSendCloseAsync(long paramLong, CkSsh paramCkSsh, int paramInt);
/*       */   
/*       */   public static final native boolean CkSsh_ChannelSendData(long paramLong1, CkSsh paramCkSsh, int paramInt, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native long CkSsh_ChannelSendDataAsync(long paramLong1, CkSsh paramCkSsh, int paramInt, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkSsh_ChannelSendEof(long paramLong, CkSsh paramCkSsh, int paramInt);
/*       */   
/*       */   public static final native long CkSsh_ChannelSendEofAsync(long paramLong, CkSsh paramCkSsh, int paramInt);
/*       */   
/*       */   public static final native boolean CkSsh_ChannelSendString(long paramLong, CkSsh paramCkSsh, int paramInt, String paramString1, String paramString2);
/*       */   
/*       */   public static final native long CkSsh_ChannelSendStringAsync(long paramLong, CkSsh paramCkSsh, int paramInt, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkSsh_CheckConnection(long paramLong, CkSsh paramCkSsh);
/*       */   
/*       */   public static final native void CkSsh_ClearTtyModes(long paramLong, CkSsh paramCkSsh);
/*       */   
/*       */   public static final native boolean CkSsh_Connect(long paramLong, CkSsh paramCkSsh, String paramString, int paramInt);
/*       */   
/*       */   public static final native long CkSsh_ConnectAsync(long paramLong, CkSsh paramCkSsh, String paramString, int paramInt);
/*       */   
/*       */   public static final native boolean CkSsh_ConnectThroughSsh(long paramLong1, CkSsh paramCkSsh1, long paramLong2, CkSsh paramCkSsh2, String paramString, int paramInt);
/*       */   
/*       */   public static final native long CkSsh_ConnectThroughSshAsync(long paramLong1, CkSsh paramCkSsh1, long paramLong2, CkSsh paramCkSsh2, String paramString, int paramInt);
/*       */   
/*       */   public static final native boolean CkSsh_ContinueKeyboardAuth(long paramLong1, CkSsh paramCkSsh, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSsh_continueKeyboardAuth(long paramLong, CkSsh paramCkSsh, String paramString);
/*       */   
/*       */   public static final native long CkSsh_ContinueKeyboardAuthAsync(long paramLong, CkSsh paramCkSsh, String paramString);
/*       */   
/*       */   public static final native void CkSsh_Disconnect(long paramLong, CkSsh paramCkSsh);
/*       */   
/*       */   public static final native int CkSsh_GetChannelExitStatus(long paramLong, CkSsh paramCkSsh, int paramInt);
/*       */   
/*       */   public static final native int CkSsh_GetChannelNumber(long paramLong, CkSsh paramCkSsh, int paramInt);
/*       */   
/*       */   public static final native boolean CkSsh_GetChannelType(long paramLong1, CkSsh paramCkSsh, int paramInt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSsh_getChannelType(long paramLong, CkSsh paramCkSsh, int paramInt);
/*       */   
/*       */   public static final native String CkSsh_channelType(long paramLong, CkSsh paramCkSsh, int paramInt);
/*       */   
/*       */   public static final native boolean CkSsh_GetReceivedData(long paramLong1, CkSsh paramCkSsh, int paramInt, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkSsh_GetReceivedDataN(long paramLong1, CkSsh paramCkSsh, int paramInt1, int paramInt2, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native int CkSsh_GetReceivedNumBytes(long paramLong, CkSsh paramCkSsh, int paramInt);
/*       */   
/*       */   public static final native boolean CkSsh_GetReceivedStderr(long paramLong1, CkSsh paramCkSsh, int paramInt, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkSsh_GetReceivedStderrText(long paramLong1, CkSsh paramCkSsh, int paramInt, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSsh_getReceivedStderrText(long paramLong, CkSsh paramCkSsh, int paramInt, String paramString);
/*       */   
/*       */   public static final native String CkSsh_receivedStderrText(long paramLong, CkSsh paramCkSsh, int paramInt, String paramString);
/*       */   
/*       */   public static final native boolean CkSsh_GetReceivedText(long paramLong1, CkSsh paramCkSsh, int paramInt, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSsh_getReceivedText(long paramLong, CkSsh paramCkSsh, int paramInt, String paramString);
/*       */   
/*       */   public static final native String CkSsh_receivedText(long paramLong, CkSsh paramCkSsh, int paramInt, String paramString);
/*       */   
/*       */   public static final native boolean CkSsh_GetReceivedTextS(long paramLong1, CkSsh paramCkSsh, int paramInt, String paramString1, String paramString2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSsh_getReceivedTextS(long paramLong, CkSsh paramCkSsh, int paramInt, String paramString1, String paramString2);
/*       */   
/*       */   public static final native String CkSsh_receivedTextS(long paramLong, CkSsh paramCkSsh, int paramInt, String paramString1, String paramString2);
/*       */   
/*       */   public static final native int CkSsh_OpenCustomChannel(long paramLong, CkSsh paramCkSsh, String paramString);
/*       */   
/*       */   public static final native long CkSsh_OpenCustomChannelAsync(long paramLong, CkSsh paramCkSsh, String paramString);
/*       */   
/*       */   public static final native int CkSsh_OpenDirectTcpIpChannel(long paramLong, CkSsh paramCkSsh, String paramString, int paramInt);
/*       */   
/*       */   public static final native long CkSsh_OpenDirectTcpIpChannelAsync(long paramLong, CkSsh paramCkSsh, String paramString, int paramInt);
/*       */   
/*       */   public static final native int CkSsh_OpenSessionChannel(long paramLong, CkSsh paramCkSsh);
/*       */   
/*       */   public static final native long CkSsh_OpenSessionChannelAsync(long paramLong, CkSsh paramCkSsh);
/*       */   
/*       */   public static final native boolean CkSsh_PeekReceivedText(long paramLong1, CkSsh paramCkSsh, int paramInt, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSsh_peekReceivedText(long paramLong, CkSsh paramCkSsh, int paramInt, String paramString);
/*       */   
/*       */   public static final native int CkSsh_QuickCmdCheck(long paramLong, CkSsh paramCkSsh, int paramInt);
/*       */   
/*       */   public static final native long CkSsh_QuickCmdCheckAsync(long paramLong, CkSsh paramCkSsh, int paramInt);
/*       */   
/*       */   public static final native int CkSsh_QuickCmdSend(long paramLong, CkSsh paramCkSsh, String paramString);
/*       */   
/*       */   public static final native long CkSsh_QuickCmdSendAsync(long paramLong, CkSsh paramCkSsh, String paramString);
/*       */   
/*       */   public static final native boolean CkSsh_QuickCommand(long paramLong1, CkSsh paramCkSsh, String paramString1, String paramString2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSsh_quickCommand(long paramLong, CkSsh paramCkSsh, String paramString1, String paramString2);
/*       */   
/*       */   public static final native long CkSsh_QuickCommandAsync(long paramLong, CkSsh paramCkSsh, String paramString1, String paramString2);
/*       */   
/*       */   public static final native int CkSsh_QuickShell(long paramLong, CkSsh paramCkSsh);
/*       */   
/*       */   public static final native long CkSsh_QuickShellAsync(long paramLong, CkSsh paramCkSsh);
/*       */   
/*       */   public static final native boolean CkSsh_ReKey(long paramLong, CkSsh paramCkSsh);
/*       */   
/*       */   public static final native long CkSsh_ReKeyAsync(long paramLong, CkSsh paramCkSsh);
/*       */   
/*       */   public static final native boolean CkSsh_SaveLastError(long paramLong, CkSsh paramCkSsh, String paramString);
/*       */   
/*       */   public static final native boolean CkSsh_SendIgnore(long paramLong, CkSsh paramCkSsh);
/*       */   
/*       */   public static final native long CkSsh_SendIgnoreAsync(long paramLong, CkSsh paramCkSsh);
/*       */   
/*       */   public static final native boolean CkSsh_SendReqExec(long paramLong, CkSsh paramCkSsh, int paramInt, String paramString);
/*       */   
/*       */   public static final native long CkSsh_SendReqExecAsync(long paramLong, CkSsh paramCkSsh, int paramInt, String paramString);
/*       */   
/*       */   public static final native boolean CkSsh_SendReqPty(long paramLong, CkSsh paramCkSsh, int paramInt1, String paramString, int paramInt2, int paramInt3, int paramInt4, int paramInt5);
/*       */   
/*       */   public static final native long CkSsh_SendReqPtyAsync(long paramLong, CkSsh paramCkSsh, int paramInt1, String paramString, int paramInt2, int paramInt3, int paramInt4, int paramInt5);
/*       */   
/*       */   public static final native boolean CkSsh_SendReqSetEnv(long paramLong, CkSsh paramCkSsh, int paramInt, String paramString1, String paramString2);
/*       */   
/*       */   public static final native long CkSsh_SendReqSetEnvAsync(long paramLong, CkSsh paramCkSsh, int paramInt, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkSsh_SendReqShell(long paramLong, CkSsh paramCkSsh, int paramInt);
/*       */   
/*       */   public static final native long CkSsh_SendReqShellAsync(long paramLong, CkSsh paramCkSsh, int paramInt);
/*       */   
/*       */   public static final native boolean CkSsh_SendReqSignal(long paramLong, CkSsh paramCkSsh, int paramInt, String paramString);
/*       */   
/*       */   public static final native long CkSsh_SendReqSignalAsync(long paramLong, CkSsh paramCkSsh, int paramInt, String paramString);
/*       */   
/*       */   public static final native boolean CkSsh_SendReqSubsystem(long paramLong, CkSsh paramCkSsh, int paramInt, String paramString);
/*       */   
/*       */   public static final native long CkSsh_SendReqSubsystemAsync(long paramLong, CkSsh paramCkSsh, int paramInt, String paramString);
/*       */   
/*       */   public static final native boolean CkSsh_SendReqWindowChange(long paramLong, CkSsh paramCkSsh, int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5);
/*       */   
/*       */   public static final native long CkSsh_SendReqWindowChangeAsync(long paramLong, CkSsh paramCkSsh, int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5);
/*       */   
/*       */   public static final native boolean CkSsh_SendReqX11Forwarding(long paramLong, CkSsh paramCkSsh, int paramInt1, boolean paramBoolean, String paramString1, String paramString2, int paramInt2);
/*       */   
/*       */   public static final native long CkSsh_SendReqX11ForwardingAsync(long paramLong, CkSsh paramCkSsh, int paramInt1, boolean paramBoolean, String paramString1, String paramString2, int paramInt2);
/*       */   
/*       */   public static final native boolean CkSsh_SendReqXonXoff(long paramLong, CkSsh paramCkSsh, int paramInt, boolean paramBoolean);
/*       */   
/*       */   public static final native long CkSsh_SendReqXonXoffAsync(long paramLong, CkSsh paramCkSsh, int paramInt, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkSsh_SetTtyMode(long paramLong, CkSsh paramCkSsh, String paramString, int paramInt);
/*       */   
/*       */   public static final native boolean CkSsh_StartKeyboardAuth(long paramLong1, CkSsh paramCkSsh, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSsh_startKeyboardAuth(long paramLong, CkSsh paramCkSsh, String paramString);
/*       */   
/*       */   public static final native long CkSsh_StartKeyboardAuthAsync(long paramLong, CkSsh paramCkSsh, String paramString);
/*       */   
/*       */   public static final native boolean CkSsh_UnlockComponent(long paramLong, CkSsh paramCkSsh, String paramString);
/*       */   
/*       */   public static final native int CkSsh_WaitForChannelMessage(long paramLong, CkSsh paramCkSsh, int paramInt);
/*       */   
/*       */   public static final native long CkSsh_WaitForChannelMessageAsync(long paramLong, CkSsh paramCkSsh, int paramInt);
/*       */   
/*       */   public static final native long new_CkSshKey();
/*       */   
/*       */   public static final native void delete_CkSshKey(long paramLong);
/*       */   
/*       */   public static final native void CkSshKey_LastErrorXml(long paramLong1, CkSshKey paramCkSshKey, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkSshKey_LastErrorHtml(long paramLong1, CkSshKey paramCkSshKey, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkSshKey_LastErrorText(long paramLong1, CkSshKey paramCkSshKey, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkSshKey_get_Comment(long paramLong1, CkSshKey paramCkSshKey, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSshKey_comment(long paramLong, CkSshKey paramCkSshKey);
/*       */   
/*       */   public static final native void CkSshKey_put_Comment(long paramLong, CkSshKey paramCkSshKey, String paramString);
/*       */   
/*       */   public static final native void CkSshKey_get_DebugLogFilePath(long paramLong1, CkSshKey paramCkSshKey, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSshKey_debugLogFilePath(long paramLong, CkSshKey paramCkSshKey);
/*       */   
/*       */   public static final native void CkSshKey_put_DebugLogFilePath(long paramLong, CkSshKey paramCkSshKey, String paramString);
/*       */   
/*       */   public static final native boolean CkSshKey_get_IsDsaKey(long paramLong, CkSshKey paramCkSshKey);
/*       */   
/*       */   public static final native boolean CkSshKey_get_IsPrivateKey(long paramLong, CkSshKey paramCkSshKey);
/*       */   
/*       */   public static final native boolean CkSshKey_get_IsRsaKey(long paramLong, CkSshKey paramCkSshKey);
/*       */   
/*       */   public static final native void CkSshKey_get_LastErrorHtml(long paramLong1, CkSshKey paramCkSshKey, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSshKey_lastErrorHtml(long paramLong, CkSshKey paramCkSshKey);
/*       */   
/*       */   public static final native void CkSshKey_get_LastErrorText(long paramLong1, CkSshKey paramCkSshKey, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSshKey_lastErrorText(long paramLong, CkSshKey paramCkSshKey);
/*       */   
/*       */   public static final native void CkSshKey_get_LastErrorXml(long paramLong1, CkSshKey paramCkSshKey, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSshKey_lastErrorXml(long paramLong, CkSshKey paramCkSshKey);
/*       */   
/*       */   public static final native boolean CkSshKey_get_LastMethodSuccess(long paramLong, CkSshKey paramCkSshKey);
/*       */   
/*       */   public static final native void CkSshKey_put_LastMethodSuccess(long paramLong, CkSshKey paramCkSshKey, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkSshKey_get_Password(long paramLong1, CkSshKey paramCkSshKey, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSshKey_password(long paramLong, CkSshKey paramCkSshKey);
/*       */   
/*       */   public static final native void CkSshKey_put_Password(long paramLong, CkSshKey paramCkSshKey, String paramString);
/*       */   
/*       */   public static final native boolean CkSshKey_get_VerboseLogging(long paramLong, CkSshKey paramCkSshKey);
/*       */   
/*       */   public static final native void CkSshKey_put_VerboseLogging(long paramLong, CkSshKey paramCkSshKey, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkSshKey_get_Version(long paramLong1, CkSshKey paramCkSshKey, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSshKey_version(long paramLong, CkSshKey paramCkSshKey);
/*       */   
/*       */   public static final native boolean CkSshKey_FromOpenSshPrivateKey(long paramLong, CkSshKey paramCkSshKey, String paramString);
/*       */   
/*       */   public static final native boolean CkSshKey_FromOpenSshPublicKey(long paramLong, CkSshKey paramCkSshKey, String paramString);
/*       */   
/*       */   public static final native boolean CkSshKey_FromPuttyPrivateKey(long paramLong, CkSshKey paramCkSshKey, String paramString);
/*       */   
/*       */   public static final native boolean CkSshKey_FromRfc4716PublicKey(long paramLong, CkSshKey paramCkSshKey, String paramString);
/*       */   
/*       */   public static final native boolean CkSshKey_FromXml(long paramLong, CkSshKey paramCkSshKey, String paramString);
/*       */   
/*       */   public static final native boolean CkSshKey_GenerateDsaKey(long paramLong, CkSshKey paramCkSshKey, int paramInt);
/*       */   
/*       */   public static final native boolean CkSshKey_GenerateRsaKey(long paramLong, CkSshKey paramCkSshKey, int paramInt1, int paramInt2);
/*       */   
/*       */   public static final native boolean CkSshKey_GenFingerprint(long paramLong1, CkSshKey paramCkSshKey, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSshKey_genFingerprint(long paramLong, CkSshKey paramCkSshKey);
/*       */   
/*       */   public static final native boolean CkSshKey_LoadText(long paramLong1, CkSshKey paramCkSshKey, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSshKey_loadText(long paramLong, CkSshKey paramCkSshKey, String paramString);
/*       */   
/*       */   public static final native boolean CkSshKey_SaveLastError(long paramLong, CkSshKey paramCkSshKey, String paramString);
/*       */   
/*       */   public static final native boolean CkSshKey_SaveText(long paramLong, CkSshKey paramCkSshKey, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkSshKey_ToOpenSshPrivateKey(long paramLong1, CkSshKey paramCkSshKey, boolean paramBoolean, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSshKey_toOpenSshPrivateKey(long paramLong, CkSshKey paramCkSshKey, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkSshKey_ToOpenSshPublicKey(long paramLong1, CkSshKey paramCkSshKey, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSshKey_toOpenSshPublicKey(long paramLong, CkSshKey paramCkSshKey);
/*       */   
/*       */   public static final native boolean CkSshKey_ToPuttyPrivateKey(long paramLong1, CkSshKey paramCkSshKey, boolean paramBoolean, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSshKey_toPuttyPrivateKey(long paramLong, CkSshKey paramCkSshKey, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkSshKey_ToRfc4716PublicKey(long paramLong1, CkSshKey paramCkSshKey, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSshKey_toRfc4716PublicKey(long paramLong, CkSshKey paramCkSshKey);
/*       */   
/*       */   public static final native boolean CkSshKey_ToXml(long paramLong1, CkSshKey paramCkSshKey, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSshKey_toXml(long paramLong, CkSshKey paramCkSshKey);
/*       */   
/*       */   public static final native long new_CkSshTunnel();
/*       */   
/*       */   public static final native void delete_CkSshTunnel(long paramLong);
/*       */   
/*       */   public static final native void CkSshTunnel_LastErrorXml(long paramLong1, CkSshTunnel paramCkSshTunnel, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkSshTunnel_LastErrorHtml(long paramLong1, CkSshTunnel paramCkSshTunnel, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkSshTunnel_LastErrorText(long paramLong1, CkSshTunnel paramCkSshTunnel, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkSshTunnel_put_EventCallbackObject(long paramLong1, CkSshTunnel paramCkSshTunnel, long paramLong2, CkBaseProgress paramCkBaseProgress);
/*       */   
/*       */   public static final native boolean CkSshTunnel_get_AbortCurrent(long paramLong, CkSshTunnel paramCkSshTunnel);
/*       */   
/*       */   public static final native void CkSshTunnel_put_AbortCurrent(long paramLong, CkSshTunnel paramCkSshTunnel, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkSshTunnel_get_AcceptLog(long paramLong1, CkSshTunnel paramCkSshTunnel, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSshTunnel_acceptLog(long paramLong, CkSshTunnel paramCkSshTunnel);
/*       */   
/*       */   public static final native void CkSshTunnel_put_AcceptLog(long paramLong, CkSshTunnel paramCkSshTunnel, String paramString);
/*       */   
/*       */   public static final native void CkSshTunnel_get_AcceptLogPath(long paramLong1, CkSshTunnel paramCkSshTunnel, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSshTunnel_acceptLogPath(long paramLong, CkSshTunnel paramCkSshTunnel);
/*       */   
/*       */   public static final native void CkSshTunnel_put_AcceptLogPath(long paramLong, CkSshTunnel paramCkSshTunnel, String paramString);
/*       */   
/*       */   public static final native int CkSshTunnel_get_ConnectTimeoutMs(long paramLong, CkSshTunnel paramCkSshTunnel);
/*       */   
/*       */   public static final native void CkSshTunnel_put_ConnectTimeoutMs(long paramLong, CkSshTunnel paramCkSshTunnel, int paramInt);
/*       */   
/*       */   public static final native void CkSshTunnel_get_DebugLogFilePath(long paramLong1, CkSshTunnel paramCkSshTunnel, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSshTunnel_debugLogFilePath(long paramLong, CkSshTunnel paramCkSshTunnel);
/*       */   
/*       */   public static final native void CkSshTunnel_put_DebugLogFilePath(long paramLong, CkSshTunnel paramCkSshTunnel, String paramString);
/*       */   
/*       */   public static final native void CkSshTunnel_get_DestHostname(long paramLong1, CkSshTunnel paramCkSshTunnel, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSshTunnel_destHostname(long paramLong, CkSshTunnel paramCkSshTunnel);
/*       */   
/*       */   public static final native void CkSshTunnel_put_DestHostname(long paramLong, CkSshTunnel paramCkSshTunnel, String paramString);
/*       */   
/*       */   public static final native int CkSshTunnel_get_DestPort(long paramLong, CkSshTunnel paramCkSshTunnel);
/*       */   
/*       */   public static final native void CkSshTunnel_put_DestPort(long paramLong, CkSshTunnel paramCkSshTunnel, int paramInt);
/*       */   
/*       */   public static final native boolean CkSshTunnel_get_DynamicPortForwarding(long paramLong, CkSshTunnel paramCkSshTunnel);
/*       */   
/*       */   public static final native void CkSshTunnel_put_DynamicPortForwarding(long paramLong, CkSshTunnel paramCkSshTunnel, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkSshTunnel_get_HostKeyFingerprint(long paramLong1, CkSshTunnel paramCkSshTunnel, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSshTunnel_hostKeyFingerprint(long paramLong, CkSshTunnel paramCkSshTunnel);
/*       */   
/*       */   public static final native void CkSshTunnel_get_HttpProxyAuthMethod(long paramLong1, CkSshTunnel paramCkSshTunnel, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSshTunnel_httpProxyAuthMethod(long paramLong, CkSshTunnel paramCkSshTunnel);
/*       */   
/*       */   public static final native void CkSshTunnel_put_HttpProxyAuthMethod(long paramLong, CkSshTunnel paramCkSshTunnel, String paramString);
/*       */   
/*       */   public static final native void CkSshTunnel_get_HttpProxyDomain(long paramLong1, CkSshTunnel paramCkSshTunnel, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSshTunnel_httpProxyDomain(long paramLong, CkSshTunnel paramCkSshTunnel);
/*       */   
/*       */   public static final native void CkSshTunnel_put_HttpProxyDomain(long paramLong, CkSshTunnel paramCkSshTunnel, String paramString);
/*       */   
/*       */   public static final native void CkSshTunnel_get_HttpProxyHostname(long paramLong1, CkSshTunnel paramCkSshTunnel, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSshTunnel_httpProxyHostname(long paramLong, CkSshTunnel paramCkSshTunnel);
/*       */   
/*       */   public static final native void CkSshTunnel_put_HttpProxyHostname(long paramLong, CkSshTunnel paramCkSshTunnel, String paramString);
/*       */   
/*       */   public static final native void CkSshTunnel_get_HttpProxyPassword(long paramLong1, CkSshTunnel paramCkSshTunnel, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSshTunnel_httpProxyPassword(long paramLong, CkSshTunnel paramCkSshTunnel);
/*       */   
/*       */   public static final native void CkSshTunnel_put_HttpProxyPassword(long paramLong, CkSshTunnel paramCkSshTunnel, String paramString);
/*       */   
/*       */   public static final native int CkSshTunnel_get_HttpProxyPort(long paramLong, CkSshTunnel paramCkSshTunnel);
/*       */   
/*       */   public static final native void CkSshTunnel_put_HttpProxyPort(long paramLong, CkSshTunnel paramCkSshTunnel, int paramInt);
/*       */   
/*       */   public static final native void CkSshTunnel_get_HttpProxyUsername(long paramLong1, CkSshTunnel paramCkSshTunnel, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSshTunnel_httpProxyUsername(long paramLong, CkSshTunnel paramCkSshTunnel);
/*       */   
/*       */   public static final native void CkSshTunnel_put_HttpProxyUsername(long paramLong, CkSshTunnel paramCkSshTunnel, String paramString);
/*       */   
/*       */   public static final native int CkSshTunnel_get_IdleTimeoutMs(long paramLong, CkSshTunnel paramCkSshTunnel);
/*       */   
/*       */   public static final native void CkSshTunnel_put_IdleTimeoutMs(long paramLong, CkSshTunnel paramCkSshTunnel, int paramInt);
/*       */   
/*       */   public static final native void CkSshTunnel_get_InboundSocksPassword(long paramLong1, CkSshTunnel paramCkSshTunnel, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSshTunnel_inboundSocksPassword(long paramLong, CkSshTunnel paramCkSshTunnel);
/*       */   
/*       */   public static final native void CkSshTunnel_put_InboundSocksPassword(long paramLong, CkSshTunnel paramCkSshTunnel, String paramString);
/*       */   
/*       */   public static final native void CkSshTunnel_get_InboundSocksUsername(long paramLong1, CkSshTunnel paramCkSshTunnel, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSshTunnel_inboundSocksUsername(long paramLong, CkSshTunnel paramCkSshTunnel);
/*       */   
/*       */   public static final native void CkSshTunnel_put_InboundSocksUsername(long paramLong, CkSshTunnel paramCkSshTunnel, String paramString);
/*       */   
/*       */   public static final native boolean CkSshTunnel_get_IsAccepting(long paramLong, CkSshTunnel paramCkSshTunnel);
/*       */   
/*       */   public static final native boolean CkSshTunnel_get_KeepAcceptLog(long paramLong, CkSshTunnel paramCkSshTunnel);
/*       */   
/*       */   public static final native void CkSshTunnel_put_KeepAcceptLog(long paramLong, CkSshTunnel paramCkSshTunnel, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkSshTunnel_get_KeepTunnelLog(long paramLong, CkSshTunnel paramCkSshTunnel);
/*       */   
/*       */   public static final native void CkSshTunnel_put_KeepTunnelLog(long paramLong, CkSshTunnel paramCkSshTunnel, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkSshTunnel_get_LastErrorHtml(long paramLong1, CkSshTunnel paramCkSshTunnel, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSshTunnel_lastErrorHtml(long paramLong, CkSshTunnel paramCkSshTunnel);
/*       */   
/*       */   public static final native void CkSshTunnel_get_LastErrorText(long paramLong1, CkSshTunnel paramCkSshTunnel, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSshTunnel_lastErrorText(long paramLong, CkSshTunnel paramCkSshTunnel);
/*       */   
/*       */   public static final native void CkSshTunnel_get_LastErrorXml(long paramLong1, CkSshTunnel paramCkSshTunnel, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSshTunnel_lastErrorXml(long paramLong, CkSshTunnel paramCkSshTunnel);
/*       */   
/*       */   public static final native boolean CkSshTunnel_get_LastMethodSuccess(long paramLong, CkSshTunnel paramCkSshTunnel);
/*       */   
/*       */   public static final native void CkSshTunnel_put_LastMethodSuccess(long paramLong, CkSshTunnel paramCkSshTunnel, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkSshTunnel_get_ListenBindIpAddress(long paramLong1, CkSshTunnel paramCkSshTunnel, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSshTunnel_listenBindIpAddress(long paramLong, CkSshTunnel paramCkSshTunnel);
/*       */   
/*       */   public static final native void CkSshTunnel_put_ListenBindIpAddress(long paramLong, CkSshTunnel paramCkSshTunnel, String paramString);
/*       */   
/*       */   public static final native int CkSshTunnel_get_ListenPort(long paramLong, CkSshTunnel paramCkSshTunnel);
/*       */   
/*       */   public static final native void CkSshTunnel_get_OutboundBindIpAddress(long paramLong1, CkSshTunnel paramCkSshTunnel, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSshTunnel_outboundBindIpAddress(long paramLong, CkSshTunnel paramCkSshTunnel);
/*       */   
/*       */   public static final native void CkSshTunnel_put_OutboundBindIpAddress(long paramLong, CkSshTunnel paramCkSshTunnel, String paramString);
/*       */   
/*       */   public static final native int CkSshTunnel_get_OutboundBindPort(long paramLong, CkSshTunnel paramCkSshTunnel);
/*       */   
/*       */   public static final native void CkSshTunnel_put_OutboundBindPort(long paramLong, CkSshTunnel paramCkSshTunnel, int paramInt);
/*       */   
/*       */   public static final native boolean CkSshTunnel_get_PreferIpv6(long paramLong, CkSshTunnel paramCkSshTunnel);
/*       */   
/*       */   public static final native void CkSshTunnel_put_PreferIpv6(long paramLong, CkSshTunnel paramCkSshTunnel, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkSshTunnel_get_SocksHostname(long paramLong1, CkSshTunnel paramCkSshTunnel, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSshTunnel_socksHostname(long paramLong, CkSshTunnel paramCkSshTunnel);
/*       */   
/*       */   public static final native void CkSshTunnel_put_SocksHostname(long paramLong, CkSshTunnel paramCkSshTunnel, String paramString);
/*       */   
/*       */   public static final native void CkSshTunnel_get_SocksPassword(long paramLong1, CkSshTunnel paramCkSshTunnel, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSshTunnel_socksPassword(long paramLong, CkSshTunnel paramCkSshTunnel);
/*       */   
/*       */   public static final native void CkSshTunnel_put_SocksPassword(long paramLong, CkSshTunnel paramCkSshTunnel, String paramString);
/*       */   
/*       */   public static final native int CkSshTunnel_get_SocksPort(long paramLong, CkSshTunnel paramCkSshTunnel);
/*       */   
/*       */   public static final native void CkSshTunnel_put_SocksPort(long paramLong, CkSshTunnel paramCkSshTunnel, int paramInt);
/*       */   
/*       */   public static final native void CkSshTunnel_get_SocksUsername(long paramLong1, CkSshTunnel paramCkSshTunnel, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSshTunnel_socksUsername(long paramLong, CkSshTunnel paramCkSshTunnel);
/*       */   
/*       */   public static final native void CkSshTunnel_put_SocksUsername(long paramLong, CkSshTunnel paramCkSshTunnel, String paramString);
/*       */   
/*       */   public static final native int CkSshTunnel_get_SocksVersion(long paramLong, CkSshTunnel paramCkSshTunnel);
/*       */   
/*       */   public static final native void CkSshTunnel_put_SocksVersion(long paramLong, CkSshTunnel paramCkSshTunnel, int paramInt);
/*       */   
/*       */   public static final native int CkSshTunnel_get_SoRcvBuf(long paramLong, CkSshTunnel paramCkSshTunnel);
/*       */   
/*       */   public static final native void CkSshTunnel_put_SoRcvBuf(long paramLong, CkSshTunnel paramCkSshTunnel, int paramInt);
/*       */   
/*       */   public static final native int CkSshTunnel_get_SoSndBuf(long paramLong, CkSshTunnel paramCkSshTunnel);
/*       */   
/*       */   public static final native void CkSshTunnel_put_SoSndBuf(long paramLong, CkSshTunnel paramCkSshTunnel, int paramInt);
/*       */   
/*       */   public static final native boolean CkSshTunnel_get_TcpNoDelay(long paramLong, CkSshTunnel paramCkSshTunnel);
/*       */   
/*       */   public static final native void CkSshTunnel_put_TcpNoDelay(long paramLong, CkSshTunnel paramCkSshTunnel, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkSshTunnel_get_TunnelLog(long paramLong1, CkSshTunnel paramCkSshTunnel, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSshTunnel_tunnelLog(long paramLong, CkSshTunnel paramCkSshTunnel);
/*       */   
/*       */   public static final native void CkSshTunnel_put_TunnelLog(long paramLong, CkSshTunnel paramCkSshTunnel, String paramString);
/*       */   
/*       */   public static final native void CkSshTunnel_get_TunnelLogPath(long paramLong1, CkSshTunnel paramCkSshTunnel, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSshTunnel_tunnelLogPath(long paramLong, CkSshTunnel paramCkSshTunnel);
/*       */   
/*       */   public static final native void CkSshTunnel_put_TunnelLogPath(long paramLong, CkSshTunnel paramCkSshTunnel, String paramString);
/*       */   
/*       */   public static final native void CkSshTunnel_get_UncommonOptions(long paramLong1, CkSshTunnel paramCkSshTunnel, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSshTunnel_uncommonOptions(long paramLong, CkSshTunnel paramCkSshTunnel);
/*       */   
/*       */   public static final native void CkSshTunnel_put_UncommonOptions(long paramLong, CkSshTunnel paramCkSshTunnel, String paramString);
/*       */   
/*       */   public static final native boolean CkSshTunnel_get_VerboseLogging(long paramLong, CkSshTunnel paramCkSshTunnel);
/*       */   
/*       */   public static final native void CkSshTunnel_put_VerboseLogging(long paramLong, CkSshTunnel paramCkSshTunnel, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkSshTunnel_get_Version(long paramLong1, CkSshTunnel paramCkSshTunnel, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSshTunnel_version(long paramLong, CkSshTunnel paramCkSshTunnel);
/*       */   
/*       */   public static final native boolean CkSshTunnel_AuthenticatePk(long paramLong1, CkSshTunnel paramCkSshTunnel, String paramString, long paramLong2, CkSshKey paramCkSshKey);
/*       */   
/*       */   public static final native long CkSshTunnel_AuthenticatePkAsync(long paramLong1, CkSshTunnel paramCkSshTunnel, String paramString, long paramLong2, CkSshKey paramCkSshKey);
/*       */   
/*       */   public static final native boolean CkSshTunnel_AuthenticatePw(long paramLong, CkSshTunnel paramCkSshTunnel, String paramString1, String paramString2);
/*       */   
/*       */   public static final native long CkSshTunnel_AuthenticatePwAsync(long paramLong, CkSshTunnel paramCkSshTunnel, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkSshTunnel_AuthenticatePwPk(long paramLong1, CkSshTunnel paramCkSshTunnel, String paramString1, String paramString2, long paramLong2, CkSshKey paramCkSshKey);
/*       */   
/*       */   public static final native long CkSshTunnel_AuthenticatePwPkAsync(long paramLong1, CkSshTunnel paramCkSshTunnel, String paramString1, String paramString2, long paramLong2, CkSshKey paramCkSshKey);
/*       */   
/*       */   public static final native boolean CkSshTunnel_AuthenticateSecPw(long paramLong1, CkSshTunnel paramCkSshTunnel, long paramLong2, CkSecureString paramCkSecureString1, long paramLong3, CkSecureString paramCkSecureString2);
/*       */   
/*       */   public static final native long CkSshTunnel_AuthenticateSecPwAsync(long paramLong1, CkSshTunnel paramCkSshTunnel, long paramLong2, CkSecureString paramCkSecureString1, long paramLong3, CkSecureString paramCkSecureString2);
/*       */   
/*       */   public static final native boolean CkSshTunnel_AuthenticateSecPwPk(long paramLong1, CkSshTunnel paramCkSshTunnel, long paramLong2, CkSecureString paramCkSecureString1, long paramLong3, CkSecureString paramCkSecureString2, long paramLong4, CkSshKey paramCkSshKey);
/*       */   
/*       */   public static final native long CkSshTunnel_AuthenticateSecPwPkAsync(long paramLong1, CkSshTunnel paramCkSshTunnel, long paramLong2, CkSecureString paramCkSecureString1, long paramLong3, CkSecureString paramCkSecureString2, long paramLong4, CkSshKey paramCkSshKey);
/*       */   
/*       */   public static final native boolean CkSshTunnel_BeginAccepting(long paramLong, CkSshTunnel paramCkSshTunnel, int paramInt);
/*       */   
/*       */   public static final native long CkSshTunnel_BeginAcceptingAsync(long paramLong, CkSshTunnel paramCkSshTunnel, int paramInt);
/*       */   
/*       */   public static final native boolean CkSshTunnel_CloseTunnel(long paramLong, CkSshTunnel paramCkSshTunnel, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkSshTunnel_Connect(long paramLong, CkSshTunnel paramCkSshTunnel, String paramString, int paramInt);
/*       */   
/*       */   public static final native long CkSshTunnel_ConnectAsync(long paramLong, CkSshTunnel paramCkSshTunnel, String paramString, int paramInt);
/*       */   
/*       */   public static final native boolean CkSshTunnel_ConnectThroughSsh(long paramLong1, CkSshTunnel paramCkSshTunnel, long paramLong2, CkSsh paramCkSsh, String paramString, int paramInt);
/*       */   
/*       */   public static final native long CkSshTunnel_ConnectThroughSshAsync(long paramLong1, CkSshTunnel paramCkSshTunnel, long paramLong2, CkSsh paramCkSsh, String paramString, int paramInt);
/*       */   
/*       */   public static final native boolean CkSshTunnel_DisconnectAllClients(long paramLong, CkSshTunnel paramCkSshTunnel, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkSshTunnel_GetCurrentState(long paramLong1, CkSshTunnel paramCkSshTunnel, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSshTunnel_getCurrentState(long paramLong, CkSshTunnel paramCkSshTunnel);
/*       */   
/*       */   public static final native String CkSshTunnel_currentState(long paramLong, CkSshTunnel paramCkSshTunnel);
/*       */   
/*       */   public static final native boolean CkSshTunnel_IsSshConnected(long paramLong, CkSshTunnel paramCkSshTunnel);
/*       */   
/*       */   public static final native boolean CkSshTunnel_SaveLastError(long paramLong, CkSshTunnel paramCkSshTunnel, String paramString);
/*       */   
/*       */   public static final native boolean CkSshTunnel_StopAccepting(long paramLong, CkSshTunnel paramCkSshTunnel, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkSshTunnel_UnlockComponent(long paramLong, CkSshTunnel paramCkSshTunnel, String paramString);
/*       */   
/*       */   public static final native long new_CkStringArray();
/*       */   
/*       */   public static final native void delete_CkStringArray(long paramLong);
/*       */   
/*       */   public static final native void CkStringArray_LastErrorXml(long paramLong1, CkStringArray paramCkStringArray, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkStringArray_LastErrorHtml(long paramLong1, CkStringArray paramCkStringArray, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkStringArray_LastErrorText(long paramLong1, CkStringArray paramCkStringArray, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native int CkStringArray_get_Count(long paramLong, CkStringArray paramCkStringArray);
/*       */   
/*       */   public static final native boolean CkStringArray_get_Crlf(long paramLong, CkStringArray paramCkStringArray);
/*       */   
/*       */   public static final native void CkStringArray_put_Crlf(long paramLong, CkStringArray paramCkStringArray, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkStringArray_get_DebugLogFilePath(long paramLong1, CkStringArray paramCkStringArray, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkStringArray_debugLogFilePath(long paramLong, CkStringArray paramCkStringArray);
/*       */   
/*       */   public static final native void CkStringArray_put_DebugLogFilePath(long paramLong, CkStringArray paramCkStringArray, String paramString);
/*       */   
/*       */   public static final native void CkStringArray_get_LastErrorHtml(long paramLong1, CkStringArray paramCkStringArray, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkStringArray_lastErrorHtml(long paramLong, CkStringArray paramCkStringArray);
/*       */   
/*       */   public static final native void CkStringArray_get_LastErrorText(long paramLong1, CkStringArray paramCkStringArray, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkStringArray_lastErrorText(long paramLong, CkStringArray paramCkStringArray);
/*       */   
/*       */   public static final native void CkStringArray_get_LastErrorXml(long paramLong1, CkStringArray paramCkStringArray, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkStringArray_lastErrorXml(long paramLong, CkStringArray paramCkStringArray);
/*       */   
/*       */   public static final native boolean CkStringArray_get_LastMethodSuccess(long paramLong, CkStringArray paramCkStringArray);
/*       */   
/*       */   public static final native void CkStringArray_put_LastMethodSuccess(long paramLong, CkStringArray paramCkStringArray, boolean paramBoolean);
/*       */   
/*       */   public static final native int CkStringArray_get_Length(long paramLong, CkStringArray paramCkStringArray);
/*       */   
/*       */   public static final native boolean CkStringArray_get_Trim(long paramLong, CkStringArray paramCkStringArray);
/*       */   
/*       */   public static final native void CkStringArray_put_Trim(long paramLong, CkStringArray paramCkStringArray, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkStringArray_get_Unique(long paramLong, CkStringArray paramCkStringArray);
/*       */   
/*       */   public static final native void CkStringArray_put_Unique(long paramLong, CkStringArray paramCkStringArray, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkStringArray_get_VerboseLogging(long paramLong, CkStringArray paramCkStringArray);
/*       */   
/*       */   public static final native void CkStringArray_put_VerboseLogging(long paramLong, CkStringArray paramCkStringArray, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkStringArray_get_Version(long paramLong1, CkStringArray paramCkStringArray, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkStringArray_version(long paramLong, CkStringArray paramCkStringArray);
/*       */   
/*       */   public static final native boolean CkStringArray_Append(long paramLong, CkStringArray paramCkStringArray, String paramString);
/*       */   
/*       */   public static final native boolean CkStringArray_AppendSerialized(long paramLong, CkStringArray paramCkStringArray, String paramString);
/*       */   
/*       */   public static final native void CkStringArray_Clear(long paramLong, CkStringArray paramCkStringArray);
/*       */   
/*       */   public static final native boolean CkStringArray_Contains(long paramLong, CkStringArray paramCkStringArray, String paramString);
/*       */   
/*       */   public static final native int CkStringArray_Find(long paramLong, CkStringArray paramCkStringArray, String paramString, int paramInt);
/*       */   
/*       */   public static final native int CkStringArray_FindFirstMatch(long paramLong, CkStringArray paramCkStringArray, String paramString, int paramInt);
/*       */   
/*       */   public static final native boolean CkStringArray_GetString(long paramLong1, CkStringArray paramCkStringArray, int paramInt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkStringArray_getString(long paramLong, CkStringArray paramCkStringArray, int paramInt);
/*       */   
/*       */   public static final native String CkStringArray_string(long paramLong, CkStringArray paramCkStringArray, int paramInt);
/*       */   
/*       */   public static final native int CkStringArray_GetStringLen(long paramLong, CkStringArray paramCkStringArray, int paramInt);
/*       */   
/*       */   public static final native void CkStringArray_InsertAt(long paramLong, CkStringArray paramCkStringArray, int paramInt, String paramString);
/*       */   
/*       */   public static final native boolean CkStringArray_LastString(long paramLong1, CkStringArray paramCkStringArray, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkStringArray_lastString(long paramLong, CkStringArray paramCkStringArray);
/*       */   
/*       */   public static final native boolean CkStringArray_LoadFromFile(long paramLong, CkStringArray paramCkStringArray, String paramString);
/*       */   
/*       */   public static final native boolean CkStringArray_LoadFromFile2(long paramLong, CkStringArray paramCkStringArray, String paramString1, String paramString2);
/*       */   
/*       */   public static final native void CkStringArray_LoadFromText(long paramLong, CkStringArray paramCkStringArray, String paramString);
/*       */   
/*       */   public static final native boolean CkStringArray_LoadTaskResult(long paramLong1, CkStringArray paramCkStringArray, long paramLong2, CkTask paramCkTask);
/*       */   
/*       */   public static final native boolean CkStringArray_Pop(long paramLong1, CkStringArray paramCkStringArray, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkStringArray_pop(long paramLong, CkStringArray paramCkStringArray);
/*       */   
/*       */   public static final native void CkStringArray_Prepend(long paramLong, CkStringArray paramCkStringArray, String paramString);
/*       */   
/*       */   public static final native void CkStringArray_Remove(long paramLong, CkStringArray paramCkStringArray, String paramString);
/*       */   
/*       */   public static final native boolean CkStringArray_RemoveAt(long paramLong, CkStringArray paramCkStringArray, int paramInt);
/*       */   
/*       */   public static final native void CkStringArray_ReplaceAt(long paramLong, CkStringArray paramCkStringArray, int paramInt, String paramString);
/*       */   
/*       */   public static final native boolean CkStringArray_SaveLastError(long paramLong, CkStringArray paramCkStringArray, String paramString);
/*       */   
/*       */   public static final native boolean CkStringArray_SaveNthToFile(long paramLong, CkStringArray paramCkStringArray, int paramInt, String paramString);
/*       */   
/*       */   public static final native boolean CkStringArray_SaveToFile(long paramLong, CkStringArray paramCkStringArray, String paramString);
/*       */   
/*       */   public static final native boolean CkStringArray_SaveToFile2(long paramLong, CkStringArray paramCkStringArray, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkStringArray_SaveToText(long paramLong1, CkStringArray paramCkStringArray, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkStringArray_saveToText(long paramLong, CkStringArray paramCkStringArray);
/*       */   
/*       */   public static final native boolean CkStringArray_Serialize(long paramLong1, CkStringArray paramCkStringArray, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkStringArray_serialize(long paramLong, CkStringArray paramCkStringArray);
/*       */   
/*       */   public static final native void CkStringArray_Sort(long paramLong, CkStringArray paramCkStringArray, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkStringArray_SplitAndAppend(long paramLong, CkStringArray paramCkStringArray, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkStringArray_StrAt(long paramLong1, CkStringArray paramCkStringArray, int paramInt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkStringArray_strAt(long paramLong, CkStringArray paramCkStringArray, int paramInt);
/*       */   
/*       */   public static final native void CkStringArray_Subtract(long paramLong1, CkStringArray paramCkStringArray1, long paramLong2, CkStringArray paramCkStringArray2);
/*       */   
/*       */   public static final native void CkStringArray_Union(long paramLong1, CkStringArray paramCkStringArray1, long paramLong2, CkStringArray paramCkStringArray2);
/*       */   
/*       */   public static final native long new_CkTar();
/*       */   
/*       */   public static final native void delete_CkTar(long paramLong);
/*       */   
/*       */   public static final native void CkTar_LastErrorXml(long paramLong1, CkTar paramCkTar, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkTar_LastErrorHtml(long paramLong1, CkTar paramCkTar, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkTar_LastErrorText(long paramLong1, CkTar paramCkTar, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkTar_put_EventCallbackObject(long paramLong1, CkTar paramCkTar, long paramLong2, CkTarProgress paramCkTarProgress);
/*       */   
/*       */   public static final native boolean CkTar_get_CaptureXmlListing(long paramLong, CkTar paramCkTar);
/*       */   
/*       */   public static final native void CkTar_put_CaptureXmlListing(long paramLong, CkTar paramCkTar, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkTar_get_Charset(long paramLong1, CkTar paramCkTar, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkTar_charset(long paramLong, CkTar paramCkTar);
/*       */   
/*       */   public static final native void CkTar_put_Charset(long paramLong, CkTar paramCkTar, String paramString);
/*       */   
/*       */   public static final native void CkTar_get_DebugLogFilePath(long paramLong1, CkTar paramCkTar, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkTar_debugLogFilePath(long paramLong, CkTar paramCkTar);
/*       */   
/*       */   public static final native void CkTar_put_DebugLogFilePath(long paramLong, CkTar paramCkTar, String paramString);
/*       */   
/*       */   public static final native int CkTar_get_DirMode(long paramLong, CkTar paramCkTar);
/*       */   
/*       */   public static final native void CkTar_put_DirMode(long paramLong, CkTar paramCkTar, int paramInt);
/*       */   
/*       */   public static final native void CkTar_get_DirPrefix(long paramLong1, CkTar paramCkTar, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkTar_dirPrefix(long paramLong, CkTar paramCkTar);
/*       */   
/*       */   public static final native void CkTar_put_DirPrefix(long paramLong, CkTar paramCkTar, String paramString);
/*       */   
/*       */   public static final native int CkTar_get_FileMode(long paramLong, CkTar paramCkTar);
/*       */   
/*       */   public static final native void CkTar_put_FileMode(long paramLong, CkTar paramCkTar, int paramInt);
/*       */   
/*       */   public static final native int CkTar_get_GroupId(long paramLong, CkTar paramCkTar);
/*       */   
/*       */   public static final native void CkTar_put_GroupId(long paramLong, CkTar paramCkTar, int paramInt);
/*       */   
/*       */   public static final native void CkTar_get_GroupName(long paramLong1, CkTar paramCkTar, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkTar_groupName(long paramLong, CkTar paramCkTar);
/*       */   
/*       */   public static final native void CkTar_put_GroupName(long paramLong, CkTar paramCkTar, String paramString);
/*       */   
/*       */   public static final native int CkTar_get_HeartbeatMs(long paramLong, CkTar paramCkTar);
/*       */   
/*       */   public static final native void CkTar_put_HeartbeatMs(long paramLong, CkTar paramCkTar, int paramInt);
/*       */   
/*       */   public static final native void CkTar_get_LastErrorHtml(long paramLong1, CkTar paramCkTar, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkTar_lastErrorHtml(long paramLong, CkTar paramCkTar);
/*       */   
/*       */   public static final native void CkTar_get_LastErrorText(long paramLong1, CkTar paramCkTar, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkTar_lastErrorText(long paramLong, CkTar paramCkTar);
/*       */   
/*       */   public static final native void CkTar_get_LastErrorXml(long paramLong1, CkTar paramCkTar, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkTar_lastErrorXml(long paramLong, CkTar paramCkTar);
/*       */   
/*       */   public static final native boolean CkTar_get_LastMethodSuccess(long paramLong, CkTar paramCkTar);
/*       */   
/*       */   public static final native void CkTar_put_LastMethodSuccess(long paramLong, CkTar paramCkTar, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkTar_get_MatchCaseSensitive(long paramLong, CkTar paramCkTar);
/*       */   
/*       */   public static final native void CkTar_put_MatchCaseSensitive(long paramLong, CkTar paramCkTar, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkTar_get_MustMatch(long paramLong1, CkTar paramCkTar, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkTar_mustMatch(long paramLong, CkTar paramCkTar);
/*       */   
/*       */   public static final native void CkTar_put_MustMatch(long paramLong, CkTar paramCkTar, String paramString);
/*       */   
/*       */   public static final native void CkTar_get_MustNotMatch(long paramLong1, CkTar paramCkTar, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkTar_mustNotMatch(long paramLong, CkTar paramCkTar);
/*       */   
/*       */   public static final native void CkTar_put_MustNotMatch(long paramLong, CkTar paramCkTar, String paramString);
/*       */   
/*       */   public static final native boolean CkTar_get_NoAbsolutePaths(long paramLong, CkTar paramCkTar);
/*       */   
/*       */   public static final native void CkTar_put_NoAbsolutePaths(long paramLong, CkTar paramCkTar, boolean paramBoolean);
/*       */   
/*       */   public static final native int CkTar_get_NumDirRoots(long paramLong, CkTar paramCkTar);
/*       */   
/*       */   public static final native int CkTar_get_PercentDoneScale(long paramLong, CkTar paramCkTar);
/*       */   
/*       */   public static final native void CkTar_put_PercentDoneScale(long paramLong, CkTar paramCkTar, int paramInt);
/*       */   
/*       */   public static final native int CkTar_get_ScriptFileMode(long paramLong, CkTar paramCkTar);
/*       */   
/*       */   public static final native void CkTar_put_ScriptFileMode(long paramLong, CkTar paramCkTar, int paramInt);
/*       */   
/*       */   public static final native boolean CkTar_get_SuppressOutput(long paramLong, CkTar paramCkTar);
/*       */   
/*       */   public static final native void CkTar_put_SuppressOutput(long paramLong, CkTar paramCkTar, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkTar_get_UntarCaseSensitive(long paramLong, CkTar paramCkTar);
/*       */   
/*       */   public static final native void CkTar_put_UntarCaseSensitive(long paramLong, CkTar paramCkTar, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkTar_get_UntarDebugLog(long paramLong, CkTar paramCkTar);
/*       */   
/*       */   public static final native void CkTar_put_UntarDebugLog(long paramLong, CkTar paramCkTar, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkTar_get_UntarDiscardPaths(long paramLong, CkTar paramCkTar);
/*       */   
/*       */   public static final native void CkTar_put_UntarDiscardPaths(long paramLong, CkTar paramCkTar, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkTar_get_UntarFromDir(long paramLong1, CkTar paramCkTar, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkTar_untarFromDir(long paramLong, CkTar paramCkTar);
/*       */   
/*       */   public static final native void CkTar_put_UntarFromDir(long paramLong, CkTar paramCkTar, String paramString);
/*       */   
/*       */   public static final native void CkTar_get_UntarMatchPattern(long paramLong1, CkTar paramCkTar, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkTar_untarMatchPattern(long paramLong, CkTar paramCkTar);
/*       */   
/*       */   public static final native void CkTar_put_UntarMatchPattern(long paramLong, CkTar paramCkTar, String paramString);
/*       */   
/*       */   public static final native int CkTar_get_UntarMaxCount(long paramLong, CkTar paramCkTar);
/*       */   
/*       */   public static final native void CkTar_put_UntarMaxCount(long paramLong, CkTar paramCkTar, int paramInt);
/*       */   
/*       */   public static final native int CkTar_get_UserId(long paramLong, CkTar paramCkTar);
/*       */   
/*       */   public static final native void CkTar_put_UserId(long paramLong, CkTar paramCkTar, int paramInt);
/*       */   
/*       */   public static final native void CkTar_get_UserName(long paramLong1, CkTar paramCkTar, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkTar_userName(long paramLong, CkTar paramCkTar);
/*       */   
/*       */   public static final native void CkTar_put_UserName(long paramLong, CkTar paramCkTar, String paramString);
/*       */   
/*       */   public static final native boolean CkTar_get_VerboseLogging(long paramLong, CkTar paramCkTar);
/*       */   
/*       */   public static final native void CkTar_put_VerboseLogging(long paramLong, CkTar paramCkTar, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkTar_get_Version(long paramLong1, CkTar paramCkTar, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkTar_version(long paramLong, CkTar paramCkTar);
/*       */   
/*       */   public static final native void CkTar_get_WriteFormat(long paramLong1, CkTar paramCkTar, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkTar_writeFormat(long paramLong, CkTar paramCkTar);
/*       */   
/*       */   public static final native void CkTar_put_WriteFormat(long paramLong, CkTar paramCkTar, String paramString);
/*       */   
/*       */   public static final native void CkTar_get_XmlListing(long paramLong1, CkTar paramCkTar, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkTar_xmlListing(long paramLong, CkTar paramCkTar);
/*       */   
/*       */   public static final native void CkTar_put_XmlListing(long paramLong, CkTar paramCkTar, String paramString);
/*       */   
/*       */   public static final native boolean CkTar_AddDirRoot(long paramLong, CkTar paramCkTar, String paramString);
/*       */   
/*       */   public static final native boolean CkTar_AddDirRoot2(long paramLong, CkTar paramCkTar, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkTar_AddFile(long paramLong, CkTar paramCkTar, String paramString);
/*       */   
/*       */   public static final native boolean CkTar_AddFile2(long paramLong, CkTar paramCkTar, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkTar_CreateDeb(long paramLong, CkTar paramCkTar, String paramString1, String paramString2, String paramString3);
/*       */   
/*       */   public static final native boolean CkTar_GetDirRoot(long paramLong1, CkTar paramCkTar, int paramInt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkTar_getDirRoot(long paramLong, CkTar paramCkTar, int paramInt);
/*       */   
/*       */   public static final native String CkTar_dirRoot(long paramLong, CkTar paramCkTar, int paramInt);
/*       */   
/*       */   public static final native boolean CkTar_ListXml(long paramLong1, CkTar paramCkTar, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkTar_listXml(long paramLong, CkTar paramCkTar, String paramString);
/*       */   
/*       */   public static final native long CkTar_ListXmlAsync(long paramLong, CkTar paramCkTar, String paramString);
/*       */   
/*       */   public static final native boolean CkTar_SaveLastError(long paramLong, CkTar paramCkTar, String paramString);
/*       */   
/*       */   public static final native boolean CkTar_UnlockComponent(long paramLong, CkTar paramCkTar, String paramString);
/*       */   
/*       */   public static final native int CkTar_Untar(long paramLong, CkTar paramCkTar, String paramString);
/*       */   
/*       */   public static final native long CkTar_UntarAsync(long paramLong, CkTar paramCkTar, String paramString);
/*       */   
/*       */   public static final native boolean CkTar_UntarBz2(long paramLong, CkTar paramCkTar, String paramString);
/*       */   
/*       */   public static final native long CkTar_UntarBz2Async(long paramLong, CkTar paramCkTar, String paramString);
/*       */   
/*       */   public static final native boolean CkTar_UntarFirstMatchingToMemory(long paramLong1, CkTar paramCkTar, long paramLong2, CkByteData paramCkByteData1, String paramString, long paramLong3, CkByteData paramCkByteData2);
/*       */   
/*       */   public static final native int CkTar_UntarFromMemory(long paramLong1, CkTar paramCkTar, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native long CkTar_UntarFromMemoryAsync(long paramLong1, CkTar paramCkTar, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkTar_UntarGz(long paramLong, CkTar paramCkTar, String paramString);
/*       */   
/*       */   public static final native long CkTar_UntarGzAsync(long paramLong, CkTar paramCkTar, String paramString);
/*       */   
/*       */   public static final native boolean CkTar_UntarZ(long paramLong, CkTar paramCkTar, String paramString);
/*       */   
/*       */   public static final native long CkTar_UntarZAsync(long paramLong, CkTar paramCkTar, String paramString);
/*       */   
/*       */   public static final native boolean CkTar_VerifyTar(long paramLong, CkTar paramCkTar, String paramString);
/*       */   
/*       */   public static final native long CkTar_VerifyTarAsync(long paramLong, CkTar paramCkTar, String paramString);
/*       */   
/*       */   public static final native boolean CkTar_WriteTar(long paramLong, CkTar paramCkTar, String paramString);
/*       */   
/*       */   public static final native long CkTar_WriteTarAsync(long paramLong, CkTar paramCkTar, String paramString);
/*       */   
/*       */   public static final native boolean CkTar_WriteTarBz2(long paramLong, CkTar paramCkTar, String paramString);
/*       */   
/*       */   public static final native long CkTar_WriteTarBz2Async(long paramLong, CkTar paramCkTar, String paramString);
/*       */   
/*       */   public static final native boolean CkTar_WriteTarGz(long paramLong, CkTar paramCkTar, String paramString);
/*       */   
/*       */   public static final native long CkTar_WriteTarGzAsync(long paramLong, CkTar paramCkTar, String paramString);
/*       */   
/*       */   public static final native long new_CkTask();
/*       */   
/*       */   public static final native void delete_CkTask(long paramLong);
/*       */   
/*       */   public static final native void CkTask_LastErrorXml(long paramLong1, CkTask paramCkTask, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkTask_LastErrorHtml(long paramLong1, CkTask paramCkTask, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkTask_LastErrorText(long paramLong1, CkTask paramCkTask, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkTask_get_DebugLogFilePath(long paramLong1, CkTask paramCkTask, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkTask_debugLogFilePath(long paramLong, CkTask paramCkTask);
/*       */   
/*       */   public static final native void CkTask_put_DebugLogFilePath(long paramLong, CkTask paramCkTask, String paramString);
/*       */   
/*       */   public static final native boolean CkTask_get_Finished(long paramLong, CkTask paramCkTask);
/*       */   
/*       */   public static final native int CkTask_get_HeartbeatMs(long paramLong, CkTask paramCkTask);
/*       */   
/*       */   public static final native void CkTask_put_HeartbeatMs(long paramLong, CkTask paramCkTask, int paramInt);
/*       */   
/*       */   public static final native boolean CkTask_get_Inert(long paramLong, CkTask paramCkTask);
/*       */   
/*       */   public static final native boolean CkTask_get_KeepProgressLog(long paramLong, CkTask paramCkTask);
/*       */   
/*       */   public static final native void CkTask_put_KeepProgressLog(long paramLong, CkTask paramCkTask, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkTask_get_LastErrorHtml(long paramLong1, CkTask paramCkTask, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkTask_lastErrorHtml(long paramLong, CkTask paramCkTask);
/*       */   
/*       */   public static final native void CkTask_get_LastErrorText(long paramLong1, CkTask paramCkTask, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkTask_lastErrorText(long paramLong, CkTask paramCkTask);
/*       */   
/*       */   public static final native void CkTask_get_LastErrorXml(long paramLong1, CkTask paramCkTask, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkTask_lastErrorXml(long paramLong, CkTask paramCkTask);
/*       */   
/*       */   public static final native boolean CkTask_get_LastMethodSuccess(long paramLong, CkTask paramCkTask);
/*       */   
/*       */   public static final native void CkTask_put_LastMethodSuccess(long paramLong, CkTask paramCkTask, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkTask_get_Live(long paramLong, CkTask paramCkTask);
/*       */   
/*       */   public static final native int CkTask_get_PercentDone(long paramLong, CkTask paramCkTask);
/*       */   
/*       */   public static final native int CkTask_get_ProgressLogSize(long paramLong, CkTask paramCkTask);
/*       */   
/*       */   public static final native void CkTask_get_ResultErrorText(long paramLong1, CkTask paramCkTask, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkTask_resultErrorText(long paramLong, CkTask paramCkTask);
/*       */   
/*       */   public static final native void CkTask_get_ResultType(long paramLong1, CkTask paramCkTask, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkTask_resultType(long paramLong, CkTask paramCkTask);
/*       */   
/*       */   public static final native void CkTask_get_Status(long paramLong1, CkTask paramCkTask, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkTask_status(long paramLong, CkTask paramCkTask);
/*       */   
/*       */   public static final native int CkTask_get_StatusInt(long paramLong, CkTask paramCkTask);
/*       */   
/*       */   public static final native int CkTask_get_TaskId(long paramLong, CkTask paramCkTask);
/*       */   
/*       */   public static final native boolean CkTask_get_TaskSuccess(long paramLong, CkTask paramCkTask);
/*       */   
/*       */   public static final native void CkTask_get_UserData(long paramLong1, CkTask paramCkTask, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkTask_userData(long paramLong, CkTask paramCkTask);
/*       */   
/*       */   public static final native void CkTask_put_UserData(long paramLong, CkTask paramCkTask, String paramString);
/*       */   
/*       */   public static final native boolean CkTask_get_VerboseLogging(long paramLong, CkTask paramCkTask);
/*       */   
/*       */   public static final native void CkTask_put_VerboseLogging(long paramLong, CkTask paramCkTask, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkTask_get_Version(long paramLong1, CkTask paramCkTask, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkTask_version(long paramLong, CkTask paramCkTask);
/*       */   
/*       */   public static final native boolean CkTask_Cancel(long paramLong, CkTask paramCkTask);
/*       */   
/*       */   public static final native void CkTask_ClearProgressLog(long paramLong, CkTask paramCkTask);
/*       */   
/*       */   public static final native boolean CkTask_CopyResultBytes(long paramLong1, CkTask paramCkTask, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkTask_GetResultBool(long paramLong, CkTask paramCkTask);
/*       */   
/*       */   public static final native boolean CkTask_GetResultBytes(long paramLong1, CkTask paramCkTask, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native int CkTask_GetResultInt(long paramLong, CkTask paramCkTask);
/*       */   
/*       */   public static final native boolean CkTask_GetResultString(long paramLong1, CkTask paramCkTask, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkTask_getResultString(long paramLong, CkTask paramCkTask);
/*       */   
/*       */   public static final native String CkTask_resultString(long paramLong, CkTask paramCkTask);
/*       */   
/*       */   public static final native boolean CkTask_ProgressInfoName(long paramLong1, CkTask paramCkTask, int paramInt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkTask_progressInfoName(long paramLong, CkTask paramCkTask, int paramInt);
/*       */   
/*       */   public static final native boolean CkTask_ProgressInfoValue(long paramLong1, CkTask paramCkTask, int paramInt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkTask_progressInfoValue(long paramLong, CkTask paramCkTask, int paramInt);
/*       */   
/*       */   public static final native void CkTask_RemoveProgressInfo(long paramLong, CkTask paramCkTask, int paramInt);
/*       */   
/*       */   public static final native boolean CkTask_Run(long paramLong, CkTask paramCkTask);
/*       */   
/*       */   public static final native boolean CkTask_RunSynchronously(long paramLong, CkTask paramCkTask);
/*       */   
/*       */   public static final native boolean CkTask_SaveLastError(long paramLong, CkTask paramCkTask, String paramString);
/*       */   
/*       */   public static final native void CkTask_SleepMs(long paramLong, CkTask paramCkTask, int paramInt);
/*       */   
/*       */   public static final native boolean CkTask_Wait(long paramLong, CkTask paramCkTask, int paramInt);
/*       */   
/*       */   public static final native long new_CkTaskChain();
/*       */   
/*       */   public static final native void delete_CkTaskChain(long paramLong);
/*       */   
/*       */   public static final native void CkTaskChain_LastErrorXml(long paramLong1, CkTaskChain paramCkTaskChain, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkTaskChain_LastErrorHtml(long paramLong1, CkTaskChain paramCkTaskChain, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkTaskChain_LastErrorText(long paramLong1, CkTaskChain paramCkTaskChain, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkTaskChain_get_DebugLogFilePath(long paramLong1, CkTaskChain paramCkTaskChain, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkTaskChain_debugLogFilePath(long paramLong, CkTaskChain paramCkTaskChain);
/*       */   
/*       */   public static final native void CkTaskChain_put_DebugLogFilePath(long paramLong, CkTaskChain paramCkTaskChain, String paramString);
/*       */   
/*       */   public static final native boolean CkTaskChain_get_Finished(long paramLong, CkTaskChain paramCkTaskChain);
/*       */   
/*       */   public static final native int CkTaskChain_get_HeartbeatMs(long paramLong, CkTaskChain paramCkTaskChain);
/*       */   
/*       */   public static final native void CkTaskChain_put_HeartbeatMs(long paramLong, CkTaskChain paramCkTaskChain, int paramInt);
/*       */   
/*       */   public static final native boolean CkTaskChain_get_Inert(long paramLong, CkTaskChain paramCkTaskChain);
/*       */   
/*       */   public static final native void CkTaskChain_get_LastErrorHtml(long paramLong1, CkTaskChain paramCkTaskChain, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkTaskChain_lastErrorHtml(long paramLong, CkTaskChain paramCkTaskChain);
/*       */   
/*       */   public static final native void CkTaskChain_get_LastErrorText(long paramLong1, CkTaskChain paramCkTaskChain, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkTaskChain_lastErrorText(long paramLong, CkTaskChain paramCkTaskChain);
/*       */   
/*       */   public static final native void CkTaskChain_get_LastErrorXml(long paramLong1, CkTaskChain paramCkTaskChain, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkTaskChain_lastErrorXml(long paramLong, CkTaskChain paramCkTaskChain);
/*       */   
/*       */   public static final native boolean CkTaskChain_get_LastMethodSuccess(long paramLong, CkTaskChain paramCkTaskChain);
/*       */   
/*       */   public static final native void CkTaskChain_put_LastMethodSuccess(long paramLong, CkTaskChain paramCkTaskChain, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkTaskChain_get_Live(long paramLong, CkTaskChain paramCkTaskChain);
/*       */   
/*       */   public static final native int CkTaskChain_get_NumTasks(long paramLong, CkTaskChain paramCkTaskChain);
/*       */   
/*       */   public static final native void CkTaskChain_get_Status(long paramLong1, CkTaskChain paramCkTaskChain, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkTaskChain_status(long paramLong, CkTaskChain paramCkTaskChain);
/*       */   
/*       */   public static final native int CkTaskChain_get_StatusInt(long paramLong, CkTaskChain paramCkTaskChain);
/*       */   
/*       */   public static final native boolean CkTaskChain_get_StopOnFailedTask(long paramLong, CkTaskChain paramCkTaskChain);
/*       */   
/*       */   public static final native void CkTaskChain_put_StopOnFailedTask(long paramLong, CkTaskChain paramCkTaskChain, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkTaskChain_get_VerboseLogging(long paramLong, CkTaskChain paramCkTaskChain);
/*       */   
/*       */   public static final native void CkTaskChain_put_VerboseLogging(long paramLong, CkTaskChain paramCkTaskChain, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkTaskChain_get_Version(long paramLong1, CkTaskChain paramCkTaskChain, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkTaskChain_version(long paramLong, CkTaskChain paramCkTaskChain);
/*       */   
/*       */   public static final native boolean CkTaskChain_Append(long paramLong1, CkTaskChain paramCkTaskChain, long paramLong2, CkTask paramCkTask);
/*       */   
/*       */   public static final native boolean CkTaskChain_Cancel(long paramLong, CkTaskChain paramCkTaskChain);
/*       */   
/*       */   public static final native long CkTaskChain_GetTask(long paramLong, CkTaskChain paramCkTaskChain, int paramInt);
/*       */   
/*       */   public static final native boolean CkTaskChain_Run(long paramLong, CkTaskChain paramCkTaskChain);
/*       */   
/*       */   public static final native boolean CkTaskChain_RunSynchronously(long paramLong, CkTaskChain paramCkTaskChain);
/*       */   
/*       */   public static final native boolean CkTaskChain_SaveLastError(long paramLong, CkTaskChain paramCkTaskChain, String paramString);
/*       */   
/*       */   public static final native void CkTaskChain_SleepMs(long paramLong, CkTaskChain paramCkTaskChain, int paramInt);
/*       */   
/*       */   public static final native boolean CkTaskChain_Wait(long paramLong, CkTaskChain paramCkTaskChain, int paramInt);
/*       */   
/*       */   public static final native long new_CkTrustedRoots();
/*       */   
/*       */   public static final native void delete_CkTrustedRoots(long paramLong);
/*       */   
/*       */   public static final native void CkTrustedRoots_LastErrorXml(long paramLong1, CkTrustedRoots paramCkTrustedRoots, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkTrustedRoots_LastErrorHtml(long paramLong1, CkTrustedRoots paramCkTrustedRoots, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkTrustedRoots_LastErrorText(long paramLong1, CkTrustedRoots paramCkTrustedRoots, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkTrustedRoots_put_EventCallbackObject(long paramLong1, CkTrustedRoots paramCkTrustedRoots, long paramLong2, CkBaseProgress paramCkBaseProgress);
/*       */   
/*       */   public static final native void CkTrustedRoots_get_DebugLogFilePath(long paramLong1, CkTrustedRoots paramCkTrustedRoots, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkTrustedRoots_debugLogFilePath(long paramLong, CkTrustedRoots paramCkTrustedRoots);
/*       */   
/*       */   public static final native void CkTrustedRoots_put_DebugLogFilePath(long paramLong, CkTrustedRoots paramCkTrustedRoots, String paramString);
/*       */   
/*       */   public static final native void CkTrustedRoots_get_LastErrorHtml(long paramLong1, CkTrustedRoots paramCkTrustedRoots, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkTrustedRoots_lastErrorHtml(long paramLong, CkTrustedRoots paramCkTrustedRoots);
/*       */   
/*       */   public static final native void CkTrustedRoots_get_LastErrorText(long paramLong1, CkTrustedRoots paramCkTrustedRoots, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkTrustedRoots_lastErrorText(long paramLong, CkTrustedRoots paramCkTrustedRoots);
/*       */   
/*       */   public static final native void CkTrustedRoots_get_LastErrorXml(long paramLong1, CkTrustedRoots paramCkTrustedRoots, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkTrustedRoots_lastErrorXml(long paramLong, CkTrustedRoots paramCkTrustedRoots);
/*       */   
/*       */   public static final native boolean CkTrustedRoots_get_LastMethodSuccess(long paramLong, CkTrustedRoots paramCkTrustedRoots);
/*       */   
/*       */   public static final native void CkTrustedRoots_put_LastMethodSuccess(long paramLong, CkTrustedRoots paramCkTrustedRoots, boolean paramBoolean);
/*       */   
/*       */   public static final native int CkTrustedRoots_get_NumCerts(long paramLong, CkTrustedRoots paramCkTrustedRoots);
/*       */   
/*       */   public static final native boolean CkTrustedRoots_get_TrustSystemCaRoots(long paramLong, CkTrustedRoots paramCkTrustedRoots);
/*       */   
/*       */   public static final native void CkTrustedRoots_put_TrustSystemCaRoots(long paramLong, CkTrustedRoots paramCkTrustedRoots, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkTrustedRoots_get_VerboseLogging(long paramLong, CkTrustedRoots paramCkTrustedRoots);
/*       */   
/*       */   public static final native void CkTrustedRoots_put_VerboseLogging(long paramLong, CkTrustedRoots paramCkTrustedRoots, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkTrustedRoots_get_Version(long paramLong1, CkTrustedRoots paramCkTrustedRoots, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkTrustedRoots_version(long paramLong, CkTrustedRoots paramCkTrustedRoots);
/*       */   
/*       */   public static final native boolean CkTrustedRoots_Activate(long paramLong, CkTrustedRoots paramCkTrustedRoots);
/*       */   
/*       */   public static final native boolean CkTrustedRoots_AddCert(long paramLong1, CkTrustedRoots paramCkTrustedRoots, long paramLong2, CkCert paramCkCert);
/*       */   
/*       */   public static final native boolean CkTrustedRoots_AddJavaKeyStore(long paramLong1, CkTrustedRoots paramCkTrustedRoots, long paramLong2, CkJavaKeyStore paramCkJavaKeyStore);
/*       */   
/*       */   public static final native long CkTrustedRoots_AddJavaKeyStoreAsync(long paramLong1, CkTrustedRoots paramCkTrustedRoots, long paramLong2, CkJavaKeyStore paramCkJavaKeyStore);
/*       */   
/*       */   public static final native boolean CkTrustedRoots_Deactivate(long paramLong, CkTrustedRoots paramCkTrustedRoots);
/*       */   
/*       */   public static final native long CkTrustedRoots_GetCert(long paramLong, CkTrustedRoots paramCkTrustedRoots, int paramInt);
/*       */   
/*       */   public static final native boolean CkTrustedRoots_LoadCaCertsPem(long paramLong, CkTrustedRoots paramCkTrustedRoots, String paramString);
/*       */   
/*       */   public static final native long CkTrustedRoots_LoadCaCertsPemAsync(long paramLong, CkTrustedRoots paramCkTrustedRoots, String paramString);
/*       */   
/*       */   public static final native boolean CkTrustedRoots_SaveLastError(long paramLong, CkTrustedRoots paramCkTrustedRoots, String paramString);
/*       */   
/*       */   public static final native long new_CkUnixCompress();
/*       */   
/*       */   public static final native void delete_CkUnixCompress(long paramLong);
/*       */   
/*       */   public static final native void CkUnixCompress_LastErrorXml(long paramLong1, CkUnixCompress paramCkUnixCompress, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkUnixCompress_LastErrorHtml(long paramLong1, CkUnixCompress paramCkUnixCompress, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkUnixCompress_LastErrorText(long paramLong1, CkUnixCompress paramCkUnixCompress, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkUnixCompress_put_EventCallbackObject(long paramLong1, CkUnixCompress paramCkUnixCompress, long paramLong2, CkBaseProgress paramCkBaseProgress);
/*       */   
/*       */   public static final native boolean CkUnixCompress_get_AbortCurrent(long paramLong, CkUnixCompress paramCkUnixCompress);
/*       */   
/*       */   public static final native void CkUnixCompress_put_AbortCurrent(long paramLong, CkUnixCompress paramCkUnixCompress, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkUnixCompress_get_DebugLogFilePath(long paramLong1, CkUnixCompress paramCkUnixCompress, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkUnixCompress_debugLogFilePath(long paramLong, CkUnixCompress paramCkUnixCompress);
/*       */   
/*       */   public static final native void CkUnixCompress_put_DebugLogFilePath(long paramLong, CkUnixCompress paramCkUnixCompress, String paramString);
/*       */   
/*       */   public static final native int CkUnixCompress_get_HeartbeatMs(long paramLong, CkUnixCompress paramCkUnixCompress);
/*       */   
/*       */   public static final native void CkUnixCompress_put_HeartbeatMs(long paramLong, CkUnixCompress paramCkUnixCompress, int paramInt);
/*       */   
/*       */   public static final native void CkUnixCompress_get_LastErrorHtml(long paramLong1, CkUnixCompress paramCkUnixCompress, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkUnixCompress_lastErrorHtml(long paramLong, CkUnixCompress paramCkUnixCompress);
/*       */   
/*       */   public static final native void CkUnixCompress_get_LastErrorText(long paramLong1, CkUnixCompress paramCkUnixCompress, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkUnixCompress_lastErrorText(long paramLong, CkUnixCompress paramCkUnixCompress);
/*       */   
/*       */   public static final native void CkUnixCompress_get_LastErrorXml(long paramLong1, CkUnixCompress paramCkUnixCompress, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkUnixCompress_lastErrorXml(long paramLong, CkUnixCompress paramCkUnixCompress);
/*       */   
/*       */   public static final native boolean CkUnixCompress_get_LastMethodSuccess(long paramLong, CkUnixCompress paramCkUnixCompress);
/*       */   
/*       */   public static final native void CkUnixCompress_put_LastMethodSuccess(long paramLong, CkUnixCompress paramCkUnixCompress, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkUnixCompress_get_VerboseLogging(long paramLong, CkUnixCompress paramCkUnixCompress);
/*       */   
/*       */   public static final native void CkUnixCompress_put_VerboseLogging(long paramLong, CkUnixCompress paramCkUnixCompress, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkUnixCompress_get_Version(long paramLong1, CkUnixCompress paramCkUnixCompress, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkUnixCompress_version(long paramLong, CkUnixCompress paramCkUnixCompress);
/*       */   
/*       */   public static final native boolean CkUnixCompress_CompressFile(long paramLong, CkUnixCompress paramCkUnixCompress, String paramString1, String paramString2);
/*       */   
/*       */   public static final native long CkUnixCompress_CompressFileAsync(long paramLong, CkUnixCompress paramCkUnixCompress, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkUnixCompress_CompressFileToMem(long paramLong1, CkUnixCompress paramCkUnixCompress, String paramString, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native long CkUnixCompress_CompressFileToMemAsync(long paramLong, CkUnixCompress paramCkUnixCompress, String paramString);
/*       */   
/*       */   public static final native boolean CkUnixCompress_CompressMemory(long paramLong1, CkUnixCompress paramCkUnixCompress, long paramLong2, CkByteData paramCkByteData1, long paramLong3, CkByteData paramCkByteData2);
/*       */   
/*       */   public static final native boolean CkUnixCompress_CompressMemToFile(long paramLong1, CkUnixCompress paramCkUnixCompress, long paramLong2, CkByteData paramCkByteData, String paramString);
/*       */   
/*       */   public static final native boolean CkUnixCompress_CompressString(long paramLong1, CkUnixCompress paramCkUnixCompress, String paramString1, String paramString2, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkUnixCompress_CompressStringToFile(long paramLong, CkUnixCompress paramCkUnixCompress, String paramString1, String paramString2, String paramString3);
/*       */   
/*       */   public static final native boolean CkUnixCompress_IsUnlocked(long paramLong, CkUnixCompress paramCkUnixCompress);
/*       */   
/*       */   public static final native boolean CkUnixCompress_SaveLastError(long paramLong, CkUnixCompress paramCkUnixCompress, String paramString);
/*       */   
/*       */   public static final native boolean CkUnixCompress_UncompressFile(long paramLong, CkUnixCompress paramCkUnixCompress, String paramString1, String paramString2);
/*       */   
/*       */   public static final native long CkUnixCompress_UncompressFileAsync(long paramLong, CkUnixCompress paramCkUnixCompress, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkUnixCompress_UncompressFileToMem(long paramLong1, CkUnixCompress paramCkUnixCompress, String paramString, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native long CkUnixCompress_UncompressFileToMemAsync(long paramLong, CkUnixCompress paramCkUnixCompress, String paramString);
/*       */   
/*       */   public static final native boolean CkUnixCompress_UncompressFileToString(long paramLong1, CkUnixCompress paramCkUnixCompress, String paramString1, String paramString2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkUnixCompress_uncompressFileToString(long paramLong, CkUnixCompress paramCkUnixCompress, String paramString1, String paramString2);
/*       */   
/*       */   public static final native long CkUnixCompress_UncompressFileToStringAsync(long paramLong, CkUnixCompress paramCkUnixCompress, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkUnixCompress_UncompressMemory(long paramLong1, CkUnixCompress paramCkUnixCompress, long paramLong2, CkByteData paramCkByteData1, long paramLong3, CkByteData paramCkByteData2);
/*       */   
/*       */   public static final native boolean CkUnixCompress_UncompressMemToFile(long paramLong1, CkUnixCompress paramCkUnixCompress, long paramLong2, CkByteData paramCkByteData, String paramString);
/*       */   
/*       */   public static final native boolean CkUnixCompress_UncompressString(long paramLong1, CkUnixCompress paramCkUnixCompress, long paramLong2, CkByteData paramCkByteData, String paramString, long paramLong3, CkString paramCkString);
/*       */   
/*       */   public static final native String CkUnixCompress_uncompressString(long paramLong1, CkUnixCompress paramCkUnixCompress, long paramLong2, CkByteData paramCkByteData, String paramString);
/*       */   
/*       */   public static final native boolean CkUnixCompress_UnlockComponent(long paramLong, CkUnixCompress paramCkUnixCompress, String paramString);
/*       */   
/*       */   public static final native boolean CkUnixCompress_UnTarZ(long paramLong, CkUnixCompress paramCkUnixCompress, String paramString1, String paramString2, boolean paramBoolean);
/*       */   
/*       */   public static final native long CkUnixCompress_UnTarZAsync(long paramLong, CkUnixCompress paramCkUnixCompress, String paramString1, String paramString2, boolean paramBoolean);
/*       */   
/*       */   public static final native long new_CkUrl();
/*       */   
/*       */   public static final native void delete_CkUrl(long paramLong);
/*       */   
/*       */   public static final native void CkUrl_get_Frag(long paramLong1, CkUrl paramCkUrl, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkUrl_frag(long paramLong, CkUrl paramCkUrl);
/*       */   
/*       */   public static final native void CkUrl_get_Host(long paramLong1, CkUrl paramCkUrl, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkUrl_host(long paramLong, CkUrl paramCkUrl);
/*       */   
/*       */   public static final native void CkUrl_get_HostType(long paramLong1, CkUrl paramCkUrl, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkUrl_hostType(long paramLong, CkUrl paramCkUrl);
/*       */   
/*       */   public static final native boolean CkUrl_get_LastMethodSuccess(long paramLong, CkUrl paramCkUrl);
/*       */   
/*       */   public static final native void CkUrl_put_LastMethodSuccess(long paramLong, CkUrl paramCkUrl, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkUrl_get_Login(long paramLong1, CkUrl paramCkUrl, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkUrl_login(long paramLong, CkUrl paramCkUrl);
/*       */   
/*       */   public static final native void CkUrl_get_Password(long paramLong1, CkUrl paramCkUrl, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkUrl_password(long paramLong, CkUrl paramCkUrl);
/*       */   
/*       */   public static final native void CkUrl_get_Path(long paramLong1, CkUrl paramCkUrl, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkUrl_path(long paramLong, CkUrl paramCkUrl);
/*       */   
/*       */   public static final native void CkUrl_get_PathWithQueryParams(long paramLong1, CkUrl paramCkUrl, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkUrl_pathWithQueryParams(long paramLong, CkUrl paramCkUrl);
/*       */   
/*       */   public static final native int CkUrl_get_Port(long paramLong, CkUrl paramCkUrl);
/*       */   
/*       */   public static final native void CkUrl_get_Query(long paramLong1, CkUrl paramCkUrl, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkUrl_query(long paramLong, CkUrl paramCkUrl);
/*       */   
/*       */   public static final native boolean CkUrl_get_Ssl(long paramLong, CkUrl paramCkUrl);
/*       */   
/*       */   public static final native boolean CkUrl_ParseUrl(long paramLong, CkUrl paramCkUrl, String paramString);
/*       */   
/*       */   public static final native long new_CkUpload();
/*       */   
/*       */   public static final native void delete_CkUpload(long paramLong);
/*       */   
/*       */   public static final native void CkUpload_LastErrorXml(long paramLong1, CkUpload paramCkUpload, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkUpload_LastErrorHtml(long paramLong1, CkUpload paramCkUpload, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkUpload_LastErrorText(long paramLong1, CkUpload paramCkUpload, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkUpload_put_EventCallbackObject(long paramLong1, CkUpload paramCkUpload, long paramLong2, CkBaseProgress paramCkBaseProgress);
/*       */   
/*       */   public static final native boolean CkUpload_get_AbortCurrent(long paramLong, CkUpload paramCkUpload);
/*       */   
/*       */   public static final native void CkUpload_put_AbortCurrent(long paramLong, CkUpload paramCkUpload, boolean paramBoolean);
/*       */   
/*       */   public static final native int CkUpload_get_BandwidthThrottleUp(long paramLong, CkUpload paramCkUpload);
/*       */   
/*       */   public static final native void CkUpload_put_BandwidthThrottleUp(long paramLong, CkUpload paramCkUpload, int paramInt);
/*       */   
/*       */   public static final native int CkUpload_get_ChunkSize(long paramLong, CkUpload paramCkUpload);
/*       */   
/*       */   public static final native void CkUpload_put_ChunkSize(long paramLong, CkUpload paramCkUpload, int paramInt);
/*       */   
/*       */   public static final native void CkUpload_get_ClientIpAddress(long paramLong1, CkUpload paramCkUpload, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkUpload_clientIpAddress(long paramLong, CkUpload paramCkUpload);
/*       */   
/*       */   public static final native void CkUpload_put_ClientIpAddress(long paramLong, CkUpload paramCkUpload, String paramString);
/*       */   
/*       */   public static final native void CkUpload_get_DebugLogFilePath(long paramLong1, CkUpload paramCkUpload, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkUpload_debugLogFilePath(long paramLong, CkUpload paramCkUpload);
/*       */   
/*       */   public static final native void CkUpload_put_DebugLogFilePath(long paramLong, CkUpload paramCkUpload, String paramString);
/*       */   
/*       */   public static final native boolean CkUpload_get_Expect100Continue(long paramLong, CkUpload paramCkUpload);
/*       */   
/*       */   public static final native void CkUpload_put_Expect100Continue(long paramLong, CkUpload paramCkUpload, boolean paramBoolean);
/*       */   
/*       */   public static final native int CkUpload_get_HeartbeatMs(long paramLong, CkUpload paramCkUpload);
/*       */   
/*       */   public static final native void CkUpload_put_HeartbeatMs(long paramLong, CkUpload paramCkUpload, int paramInt);
/*       */   
/*       */   public static final native void CkUpload_get_Hostname(long paramLong1, CkUpload paramCkUpload, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkUpload_hostname(long paramLong, CkUpload paramCkUpload);
/*       */   
/*       */   public static final native void CkUpload_put_Hostname(long paramLong, CkUpload paramCkUpload, String paramString);
/*       */   
/*       */   public static final native int CkUpload_get_IdleTimeoutMs(long paramLong, CkUpload paramCkUpload);
/*       */   
/*       */   public static final native void CkUpload_put_IdleTimeoutMs(long paramLong, CkUpload paramCkUpload, int paramInt);
/*       */   
/*       */   public static final native void CkUpload_get_LastErrorHtml(long paramLong1, CkUpload paramCkUpload, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkUpload_lastErrorHtml(long paramLong, CkUpload paramCkUpload);
/*       */   
/*       */   public static final native void CkUpload_get_LastErrorText(long paramLong1, CkUpload paramCkUpload, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkUpload_lastErrorText(long paramLong, CkUpload paramCkUpload);
/*       */   
/*       */   public static final native void CkUpload_get_LastErrorXml(long paramLong1, CkUpload paramCkUpload, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkUpload_lastErrorXml(long paramLong, CkUpload paramCkUpload);
/*       */   
/*       */   public static final native boolean CkUpload_get_LastMethodSuccess(long paramLong, CkUpload paramCkUpload);
/*       */   
/*       */   public static final native void CkUpload_put_LastMethodSuccess(long paramLong, CkUpload paramCkUpload, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkUpload_get_Login(long paramLong1, CkUpload paramCkUpload, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkUpload_login(long paramLong, CkUpload paramCkUpload);
/*       */   
/*       */   public static final native void CkUpload_put_Login(long paramLong, CkUpload paramCkUpload, String paramString);
/*       */   
/*       */   public static final native long CkUpload_get_NumBytesSent(long paramLong, CkUpload paramCkUpload);
/*       */   
/*       */   public static final native void CkUpload_get_Password(long paramLong1, CkUpload paramCkUpload, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkUpload_password(long paramLong, CkUpload paramCkUpload);
/*       */   
/*       */   public static final native void CkUpload_put_Password(long paramLong, CkUpload paramCkUpload, String paramString);
/*       */   
/*       */   public static final native void CkUpload_get_Path(long paramLong1, CkUpload paramCkUpload, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkUpload_path(long paramLong, CkUpload paramCkUpload);
/*       */   
/*       */   public static final native void CkUpload_put_Path(long paramLong, CkUpload paramCkUpload, String paramString);
/*       */   
/*       */   public static final native int CkUpload_get_PercentDoneScale(long paramLong, CkUpload paramCkUpload);
/*       */   
/*       */   public static final native void CkUpload_put_PercentDoneScale(long paramLong, CkUpload paramCkUpload, int paramInt);
/*       */   
/*       */   public static final native long CkUpload_get_PercentUploaded(long paramLong, CkUpload paramCkUpload);
/*       */   
/*       */   public static final native int CkUpload_get_Port(long paramLong, CkUpload paramCkUpload);
/*       */   
/*       */   public static final native void CkUpload_put_Port(long paramLong, CkUpload paramCkUpload, int paramInt);
/*       */   
/*       */   public static final native boolean CkUpload_get_PreferIpv6(long paramLong, CkUpload paramCkUpload);
/*       */   
/*       */   public static final native void CkUpload_put_PreferIpv6(long paramLong, CkUpload paramCkUpload, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkUpload_get_ProxyDomain(long paramLong1, CkUpload paramCkUpload, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkUpload_proxyDomain(long paramLong, CkUpload paramCkUpload);
/*       */   
/*       */   public static final native void CkUpload_put_ProxyDomain(long paramLong, CkUpload paramCkUpload, String paramString);
/*       */   
/*       */   public static final native void CkUpload_get_ProxyLogin(long paramLong1, CkUpload paramCkUpload, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkUpload_proxyLogin(long paramLong, CkUpload paramCkUpload);
/*       */   
/*       */   public static final native void CkUpload_put_ProxyLogin(long paramLong, CkUpload paramCkUpload, String paramString);
/*       */   
/*       */   public static final native void CkUpload_get_ProxyPassword(long paramLong1, CkUpload paramCkUpload, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkUpload_proxyPassword(long paramLong, CkUpload paramCkUpload);
/*       */   
/*       */   public static final native void CkUpload_put_ProxyPassword(long paramLong, CkUpload paramCkUpload, String paramString);
/*       */   
/*       */   public static final native int CkUpload_get_ProxyPort(long paramLong, CkUpload paramCkUpload);
/*       */   
/*       */   public static final native void CkUpload_put_ProxyPort(long paramLong, CkUpload paramCkUpload, int paramInt);
/*       */   
/*       */   public static final native void CkUpload_get_ResponseBody(long paramLong1, CkUpload paramCkUpload, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native void CkUpload_get_ResponseHeader(long paramLong1, CkUpload paramCkUpload, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkUpload_responseHeader(long paramLong, CkUpload paramCkUpload);
/*       */   
/*       */   public static final native int CkUpload_get_ResponseStatus(long paramLong, CkUpload paramCkUpload);
/*       */   
/*       */   public static final native boolean CkUpload_get_Ssl(long paramLong, CkUpload paramCkUpload);
/*       */   
/*       */   public static final native void CkUpload_put_Ssl(long paramLong, CkUpload paramCkUpload, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkUpload_get_SslAllowedCiphers(long paramLong1, CkUpload paramCkUpload, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkUpload_sslAllowedCiphers(long paramLong, CkUpload paramCkUpload);
/*       */   
/*       */   public static final native void CkUpload_put_SslAllowedCiphers(long paramLong, CkUpload paramCkUpload, String paramString);
/*       */   
/*       */   public static final native void CkUpload_get_SslProtocol(long paramLong1, CkUpload paramCkUpload, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkUpload_sslProtocol(long paramLong, CkUpload paramCkUpload);
/*       */   
/*       */   public static final native void CkUpload_put_SslProtocol(long paramLong, CkUpload paramCkUpload, String paramString);
/*       */   
/*       */   public static final native void CkUpload_get_TlsPinSet(long paramLong1, CkUpload paramCkUpload, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkUpload_tlsPinSet(long paramLong, CkUpload paramCkUpload);
/*       */   
/*       */   public static final native void CkUpload_put_TlsPinSet(long paramLong, CkUpload paramCkUpload, String paramString);
/*       */   
/*       */   public static final native long CkUpload_get_TotalUploadSize(long paramLong, CkUpload paramCkUpload);
/*       */   
/*       */   public static final native boolean CkUpload_get_UploadInProgress(long paramLong, CkUpload paramCkUpload);
/*       */   
/*       */   public static final native boolean CkUpload_get_UploadSuccess(long paramLong, CkUpload paramCkUpload);
/*       */   
/*       */   public static final native boolean CkUpload_get_VerboseLogging(long paramLong, CkUpload paramCkUpload);
/*       */   
/*       */   public static final native void CkUpload_put_VerboseLogging(long paramLong, CkUpload paramCkUpload, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkUpload_get_Version(long paramLong1, CkUpload paramCkUpload, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkUpload_version(long paramLong, CkUpload paramCkUpload);
/*       */   
/*       */   public static final native void CkUpload_AbortUpload(long paramLong, CkUpload paramCkUpload);
/*       */   
/*       */   public static final native void CkUpload_AddCustomHeader(long paramLong, CkUpload paramCkUpload, String paramString1, String paramString2);
/*       */   
/*       */   public static final native void CkUpload_AddFileReference(long paramLong, CkUpload paramCkUpload, String paramString1, String paramString2);
/*       */   
/*       */   public static final native void CkUpload_AddParam(long paramLong, CkUpload paramCkUpload, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkUpload_BeginUpload(long paramLong, CkUpload paramCkUpload);
/*       */   
/*       */   public static final native boolean CkUpload_BlockingUpload(long paramLong, CkUpload paramCkUpload);
/*       */   
/*       */   public static final native long CkUpload_BlockingUploadAsync(long paramLong, CkUpload paramCkUpload);
/*       */   
/*       */   public static final native void CkUpload_ClearFileReferences(long paramLong, CkUpload paramCkUpload);
/*       */   
/*       */   public static final native void CkUpload_ClearParams(long paramLong, CkUpload paramCkUpload);
/*       */   
/*       */   public static final native boolean CkUpload_SaveLastError(long paramLong, CkUpload paramCkUpload, String paramString);
/*       */   
/*       */   public static final native void CkUpload_SleepMs(long paramLong, CkUpload paramCkUpload, int paramInt);
/*       */   
/*       */   public static final native boolean CkUpload_UploadToMemory(long paramLong1, CkUpload paramCkUpload, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native long new_CkXml();
/*       */   
/*       */   public static final native void delete_CkXml(long paramLong);
/*       */   
/*       */   public static final native void CkXml_LastErrorXml(long paramLong1, CkXml paramCkXml, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkXml_LastErrorHtml(long paramLong1, CkXml paramCkXml, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkXml_LastErrorText(long paramLong1, CkXml paramCkXml, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native boolean CkXml_get_Cdata(long paramLong, CkXml paramCkXml);
/*       */   
/*       */   public static final native void CkXml_put_Cdata(long paramLong, CkXml paramCkXml, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkXml_get_Content(long paramLong1, CkXml paramCkXml, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkXml_content(long paramLong, CkXml paramCkXml);
/*       */   
/*       */   public static final native void CkXml_put_Content(long paramLong, CkXml paramCkXml, String paramString);
/*       */   
/*       */   public static final native int CkXml_get_ContentInt(long paramLong, CkXml paramCkXml);
/*       */   
/*       */   public static final native void CkXml_put_ContentInt(long paramLong, CkXml paramCkXml, int paramInt);
/*       */   
/*       */   public static final native void CkXml_get_DebugLogFilePath(long paramLong1, CkXml paramCkXml, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkXml_debugLogFilePath(long paramLong, CkXml paramCkXml);
/*       */   
/*       */   public static final native void CkXml_put_DebugLogFilePath(long paramLong, CkXml paramCkXml, String paramString);
/*       */   
/*       */   public static final native void CkXml_get_DocType(long paramLong1, CkXml paramCkXml, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkXml_docType(long paramLong, CkXml paramCkXml);
/*       */   
/*       */   public static final native void CkXml_put_DocType(long paramLong, CkXml paramCkXml, String paramString);
/*       */   
/*       */   public static final native boolean CkXml_get_EmitBom(long paramLong, CkXml paramCkXml);
/*       */   
/*       */   public static final native void CkXml_put_EmitBom(long paramLong, CkXml paramCkXml, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkXml_get_EmitCompact(long paramLong, CkXml paramCkXml);
/*       */   
/*       */   public static final native void CkXml_put_EmitCompact(long paramLong, CkXml paramCkXml, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkXml_get_EmitXmlDecl(long paramLong, CkXml paramCkXml);
/*       */   
/*       */   public static final native void CkXml_put_EmitXmlDecl(long paramLong, CkXml paramCkXml, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkXml_get_Encoding(long paramLong1, CkXml paramCkXml, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkXml_encoding(long paramLong, CkXml paramCkXml);
/*       */   
/*       */   public static final native void CkXml_put_Encoding(long paramLong, CkXml paramCkXml, String paramString);
/*       */   
/*       */   public static final native int CkXml_get_I(long paramLong, CkXml paramCkXml);
/*       */   
/*       */   public static final native void CkXml_put_I(long paramLong, CkXml paramCkXml, int paramInt);
/*       */   
/*       */   public static final native int CkXml_get_J(long paramLong, CkXml paramCkXml);
/*       */   
/*       */   public static final native void CkXml_put_J(long paramLong, CkXml paramCkXml, int paramInt);
/*       */   
/*       */   public static final native int CkXml_get_K(long paramLong, CkXml paramCkXml);
/*       */   
/*       */   public static final native void CkXml_put_K(long paramLong, CkXml paramCkXml, int paramInt);
/*       */   
/*       */   public static final native void CkXml_get_LastErrorHtml(long paramLong1, CkXml paramCkXml, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkXml_lastErrorHtml(long paramLong, CkXml paramCkXml);
/*       */   
/*       */   public static final native void CkXml_get_LastErrorText(long paramLong1, CkXml paramCkXml, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkXml_lastErrorText(long paramLong, CkXml paramCkXml);
/*       */   
/*       */   public static final native void CkXml_get_LastErrorXml(long paramLong1, CkXml paramCkXml, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkXml_lastErrorXml(long paramLong, CkXml paramCkXml);
/*       */   
/*       */   public static final native boolean CkXml_get_LastMethodSuccess(long paramLong, CkXml paramCkXml);
/*       */   
/*       */   public static final native void CkXml_put_LastMethodSuccess(long paramLong, CkXml paramCkXml, boolean paramBoolean);
/*       */   
/*       */   public static final native int CkXml_get_NumAttributes(long paramLong, CkXml paramCkXml);
/*       */   
/*       */   public static final native int CkXml_get_NumChildren(long paramLong, CkXml paramCkXml);
/*       */   
/*       */   public static final native boolean CkXml_get_SortCaseInsensitive(long paramLong, CkXml paramCkXml);
/*       */   
/*       */   public static final native void CkXml_put_SortCaseInsensitive(long paramLong, CkXml paramCkXml, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkXml_get_Standalone(long paramLong, CkXml paramCkXml);
/*       */   
/*       */   public static final native void CkXml_put_Standalone(long paramLong, CkXml paramCkXml, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkXml_get_Tag(long paramLong1, CkXml paramCkXml, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkXml_tag(long paramLong, CkXml paramCkXml);
/*       */   
/*       */   public static final native void CkXml_put_Tag(long paramLong, CkXml paramCkXml, String paramString);
/*       */   
/*       */   public static final native int CkXml_get_TreeId(long paramLong, CkXml paramCkXml);
/*       */   
/*       */   public static final native boolean CkXml_get_VerboseLogging(long paramLong, CkXml paramCkXml);
/*       */   
/*       */   public static final native void CkXml_put_VerboseLogging(long paramLong, CkXml paramCkXml, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkXml_get_Version(long paramLong1, CkXml paramCkXml, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkXml_version(long paramLong, CkXml paramCkXml);
/*       */   
/*       */   public static final native boolean CkXml_AccumulateTagContent(long paramLong1, CkXml paramCkXml, String paramString1, String paramString2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkXml_accumulateTagContent(long paramLong, CkXml paramCkXml, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkXml_AddAttribute(long paramLong, CkXml paramCkXml, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkXml_AddAttributeInt(long paramLong, CkXml paramCkXml, String paramString, int paramInt);
/*       */   
/*       */   public static final native boolean CkXml_AddChildTree(long paramLong1, CkXml paramCkXml1, long paramLong2, CkXml paramCkXml2);
/*       */   
/*       */   public static final native void CkXml_AddOrUpdateAttribute(long paramLong, CkXml paramCkXml, String paramString1, String paramString2);
/*       */   
/*       */   public static final native void CkXml_AddOrUpdateAttributeI(long paramLong, CkXml paramCkXml, String paramString, int paramInt);
/*       */   
/*       */   public static final native void CkXml_AddStyleSheet(long paramLong, CkXml paramCkXml, String paramString);
/*       */   
/*       */   public static final native void CkXml_AddToAttribute(long paramLong, CkXml paramCkXml, String paramString, int paramInt);
/*       */   
/*       */   public static final native void CkXml_AddToChildContent(long paramLong, CkXml paramCkXml, String paramString, int paramInt);
/*       */   
/*       */   public static final native void CkXml_AddToContent(long paramLong, CkXml paramCkXml, int paramInt);
/*       */   
/*       */   public static final native boolean CkXml_AppendToContent(long paramLong, CkXml paramCkXml, String paramString);
/*       */   
/*       */   public static final native boolean CkXml_BEncodeContent(long paramLong1, CkXml paramCkXml, String paramString, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkXml_ChildContentMatches(long paramLong, CkXml paramCkXml, String paramString1, String paramString2, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkXml_ChilkatPath(long paramLong1, CkXml paramCkXml, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkXml_chilkatPath(long paramLong, CkXml paramCkXml, String paramString);
/*       */   
/*       */   public static final native void CkXml_Clear(long paramLong, CkXml paramCkXml);
/*       */   
/*       */   public static final native boolean CkXml_ContentMatches(long paramLong, CkXml paramCkXml, String paramString, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkXml_Copy(long paramLong1, CkXml paramCkXml1, long paramLong2, CkXml paramCkXml2);
/*       */   
/*       */   public static final native void CkXml_CopyRef(long paramLong1, CkXml paramCkXml1, long paramLong2, CkXml paramCkXml2);
/*       */   
/*       */   public static final native boolean CkXml_DecodeContent(long paramLong1, CkXml paramCkXml, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkXml_DecodeEntities(long paramLong1, CkXml paramCkXml, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkXml_decodeEntities(long paramLong, CkXml paramCkXml, String paramString);
/*       */   
/*       */   public static final native boolean CkXml_DecryptContent(long paramLong, CkXml paramCkXml, String paramString);
/*       */   
/*       */   public static final native boolean CkXml_EncryptContent(long paramLong, CkXml paramCkXml, String paramString);
/*       */   
/*       */   public static final native long CkXml_ExtractChildByIndex(long paramLong, CkXml paramCkXml, int paramInt);
/*       */   
/*       */   public static final native long CkXml_ExtractChildByName(long paramLong, CkXml paramCkXml, String paramString1, String paramString2, String paramString3);
/*       */   
/*       */   public static final native long CkXml_FindChild(long paramLong, CkXml paramCkXml, String paramString);
/*       */   
/*       */   public static final native boolean CkXml_FindChild2(long paramLong, CkXml paramCkXml, String paramString);
/*       */   
/*       */   public static final native long CkXml_FindNextRecord(long paramLong, CkXml paramCkXml, String paramString1, String paramString2);
/*       */   
/*       */   public static final native long CkXml_FindOrAddNewChild(long paramLong, CkXml paramCkXml, String paramString);
/*       */   
/*       */   public static final native long CkXml_FirstChild(long paramLong, CkXml paramCkXml);
/*       */   
/*       */   public static final native boolean CkXml_FirstChild2(long paramLong, CkXml paramCkXml);
/*       */   
/*       */   public static final native boolean CkXml_GetAttributeName(long paramLong1, CkXml paramCkXml, int paramInt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkXml_getAttributeName(long paramLong, CkXml paramCkXml, int paramInt);
/*       */   
/*       */   public static final native String CkXml_attributeName(long paramLong, CkXml paramCkXml, int paramInt);
/*       */   
/*       */   public static final native boolean CkXml_GetAttributeValue(long paramLong1, CkXml paramCkXml, int paramInt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkXml_getAttributeValue(long paramLong, CkXml paramCkXml, int paramInt);
/*       */   
/*       */   public static final native String CkXml_attributeValue(long paramLong, CkXml paramCkXml, int paramInt);
/*       */   
/*       */   public static final native int CkXml_GetAttributeValueInt(long paramLong, CkXml paramCkXml, int paramInt);
/*       */   
/*       */   public static final native boolean CkXml_GetAttrValue(long paramLong1, CkXml paramCkXml, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkXml_getAttrValue(long paramLong, CkXml paramCkXml, String paramString);
/*       */   
/*       */   public static final native String CkXml_attrValue(long paramLong, CkXml paramCkXml, String paramString);
/*       */   
/*       */   public static final native int CkXml_GetAttrValueInt(long paramLong, CkXml paramCkXml, String paramString);
/*       */   
/*       */   public static final native boolean CkXml_GetBinaryContent(long paramLong1, CkXml paramCkXml, boolean paramBoolean1, boolean paramBoolean2, String paramString, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native long CkXml_GetChild(long paramLong, CkXml paramCkXml, int paramInt);
/*       */   
/*       */   public static final native boolean CkXml_GetChild2(long paramLong, CkXml paramCkXml, int paramInt);
/*       */   
/*       */   public static final native boolean CkXml_GetChildBoolValue(long paramLong, CkXml paramCkXml, String paramString);
/*       */   
/*       */   public static final native boolean CkXml_GetChildContent(long paramLong1, CkXml paramCkXml, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkXml_getChildContent(long paramLong, CkXml paramCkXml, String paramString);
/*       */   
/*       */   public static final native String CkXml_childContent(long paramLong, CkXml paramCkXml, String paramString);
/*       */   
/*       */   public static final native boolean CkXml_GetChildContentByIndex(long paramLong1, CkXml paramCkXml, int paramInt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkXml_getChildContentByIndex(long paramLong, CkXml paramCkXml, int paramInt);
/*       */   
/*       */   public static final native String CkXml_childContentByIndex(long paramLong, CkXml paramCkXml, int paramInt);
/*       */   
/*       */   public static final native long CkXml_GetChildExact(long paramLong, CkXml paramCkXml, String paramString1, String paramString2);
/*       */   
/*       */   public static final native int CkXml_GetChildIntValue(long paramLong, CkXml paramCkXml, String paramString);
/*       */   
/*       */   public static final native boolean CkXml_GetChildTag(long paramLong1, CkXml paramCkXml, int paramInt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkXml_getChildTag(long paramLong, CkXml paramCkXml, int paramInt);
/*       */   
/*       */   public static final native String CkXml_childTag(long paramLong, CkXml paramCkXml, int paramInt);
/*       */   
/*       */   public static final native boolean CkXml_GetChildTagByIndex(long paramLong1, CkXml paramCkXml, int paramInt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkXml_getChildTagByIndex(long paramLong, CkXml paramCkXml, int paramInt);
/*       */   
/*       */   public static final native String CkXml_childTagByIndex(long paramLong, CkXml paramCkXml, int paramInt);
/*       */   
/*       */   public static final native long CkXml_GetChildWithAttr(long paramLong, CkXml paramCkXml, String paramString1, String paramString2, String paramString3);
/*       */   
/*       */   public static final native long CkXml_GetChildWithContent(long paramLong, CkXml paramCkXml, String paramString);
/*       */   
/*       */   public static final native long CkXml_GetChildWithTag(long paramLong, CkXml paramCkXml, String paramString);
/*       */   
/*       */   public static final native long CkXml_GetNthChildWithTag(long paramLong, CkXml paramCkXml, String paramString, int paramInt);
/*       */   
/*       */   public static final native boolean CkXml_GetNthChildWithTag2(long paramLong, CkXml paramCkXml, String paramString, int paramInt);
/*       */   
/*       */   public static final native long CkXml_GetParent(long paramLong, CkXml paramCkXml);
/*       */   
/*       */   public static final native boolean CkXml_GetParent2(long paramLong, CkXml paramCkXml);
/*       */   
/*       */   public static final native long CkXml_GetRoot(long paramLong, CkXml paramCkXml);
/*       */   
/*       */   public static final native void CkXml_GetRoot2(long paramLong, CkXml paramCkXml);
/*       */   
/*       */   public static final native long CkXml_GetSelf(long paramLong, CkXml paramCkXml);
/*       */   
/*       */   public static final native boolean CkXml_GetXml(long paramLong1, CkXml paramCkXml, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkXml_getXml(long paramLong, CkXml paramCkXml);
/*       */   
/*       */   public static final native String CkXml_xml(long paramLong, CkXml paramCkXml);
/*       */   
/*       */   public static final native boolean CkXml_GetXmlSb(long paramLong1, CkXml paramCkXml, long paramLong2, CkStringBuilder paramCkStringBuilder);
/*       */   
/*       */   public static final native boolean CkXml_HasAttribute(long paramLong, CkXml paramCkXml, String paramString);
/*       */   
/*       */   public static final native boolean CkXml_HasAttrWithValue(long paramLong, CkXml paramCkXml, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkXml_HasChildWithContent(long paramLong, CkXml paramCkXml, String paramString);
/*       */   
/*       */   public static final native boolean CkXml_HasChildWithTag(long paramLong, CkXml paramCkXml, String paramString);
/*       */   
/*       */   public static final native boolean CkXml_HasChildWithTagAndContent(long paramLong, CkXml paramCkXml, String paramString1, String paramString2);
/*       */   
/*       */   public static final native void CkXml_InsertChildTreeAfter(long paramLong1, CkXml paramCkXml1, int paramInt, long paramLong2, CkXml paramCkXml2);
/*       */   
/*       */   public static final native void CkXml_InsertChildTreeBefore(long paramLong1, CkXml paramCkXml1, int paramInt, long paramLong2, CkXml paramCkXml2);
/*       */   
/*       */   public static final native long CkXml_LastChild(long paramLong, CkXml paramCkXml);
/*       */   
/*       */   public static final native boolean CkXml_LastChild2(long paramLong, CkXml paramCkXml);
/*       */   
/*       */   public static final native boolean CkXml_LoadSb(long paramLong1, CkXml paramCkXml, long paramLong2, CkStringBuilder paramCkStringBuilder, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkXml_LoadXml(long paramLong, CkXml paramCkXml, String paramString);
/*       */   
/*       */   public static final native boolean CkXml_LoadXml2(long paramLong, CkXml paramCkXml, String paramString, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkXml_LoadXmlFile(long paramLong, CkXml paramCkXml, String paramString);
/*       */   
/*       */   public static final native boolean CkXml_LoadXmlFile2(long paramLong, CkXml paramCkXml, String paramString, boolean paramBoolean);
/*       */   
/*       */   public static final native long CkXml_NewChild(long paramLong, CkXml paramCkXml, String paramString1, String paramString2);
/*       */   
/*       */   public static final native void CkXml_NewChild2(long paramLong, CkXml paramCkXml, String paramString1, String paramString2);
/*       */   
/*       */   public static final native long CkXml_NewChildAfter(long paramLong, CkXml paramCkXml, int paramInt, String paramString1, String paramString2);
/*       */   
/*       */   public static final native long CkXml_NewChildBefore(long paramLong, CkXml paramCkXml, int paramInt, String paramString1, String paramString2);
/*       */   
/*       */   public static final native void CkXml_NewChildInt2(long paramLong, CkXml paramCkXml, String paramString, int paramInt);
/*       */   
/*       */   public static final native long CkXml_NextSibling(long paramLong, CkXml paramCkXml);
/*       */   
/*       */   public static final native boolean CkXml_NextSibling2(long paramLong, CkXml paramCkXml);
/*       */   
/*       */   public static final native int CkXml_NumChildrenAt(long paramLong, CkXml paramCkXml, String paramString);
/*       */   
/*       */   public static final native int CkXml_NumChildrenHavingTag(long paramLong, CkXml paramCkXml, String paramString);
/*       */   
/*       */   public static final native long CkXml_PreviousSibling(long paramLong, CkXml paramCkXml);
/*       */   
/*       */   public static final native boolean CkXml_PreviousSibling2(long paramLong, CkXml paramCkXml);
/*       */   
/*       */   public static final native boolean CkXml_QEncodeContent(long paramLong1, CkXml paramCkXml, String paramString, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkXml_RemoveAllAttributes(long paramLong, CkXml paramCkXml);
/*       */   
/*       */   public static final native void CkXml_RemoveAllChildren(long paramLong, CkXml paramCkXml);
/*       */   
/*       */   public static final native boolean CkXml_RemoveAttribute(long paramLong, CkXml paramCkXml, String paramString);
/*       */   
/*       */   public static final native void CkXml_RemoveChild(long paramLong, CkXml paramCkXml, String paramString);
/*       */   
/*       */   public static final native void CkXml_RemoveChildByIndex(long paramLong, CkXml paramCkXml, int paramInt);
/*       */   
/*       */   public static final native void CkXml_RemoveChildWithContent(long paramLong, CkXml paramCkXml, String paramString);
/*       */   
/*       */   public static final native void CkXml_RemoveFromTree(long paramLong, CkXml paramCkXml);
/*       */   
/*       */   public static final native boolean CkXml_SaveBinaryContent(long paramLong, CkXml paramCkXml, String paramString1, boolean paramBoolean1, boolean paramBoolean2, String paramString2);
/*       */   
/*       */   public static final native boolean CkXml_SaveLastError(long paramLong, CkXml paramCkXml, String paramString);
/*       */   
/*       */   public static final native boolean CkXml_SaveXml(long paramLong, CkXml paramCkXml, String paramString);
/*       */   
/*       */   public static final native long CkXml_SearchAllForContent(long paramLong1, CkXml paramCkXml1, long paramLong2, CkXml paramCkXml2, String paramString);
/*       */   
/*       */   public static final native boolean CkXml_SearchAllForContent2(long paramLong1, CkXml paramCkXml1, long paramLong2, CkXml paramCkXml2, String paramString);
/*       */   
/*       */   public static final native long CkXml_SearchForAttribute(long paramLong1, CkXml paramCkXml1, long paramLong2, CkXml paramCkXml2, String paramString1, String paramString2, String paramString3);
/*       */   
/*       */   public static final native boolean CkXml_SearchForAttribute2(long paramLong1, CkXml paramCkXml1, long paramLong2, CkXml paramCkXml2, String paramString1, String paramString2, String paramString3);
/*       */   
/*       */   public static final native long CkXml_SearchForContent(long paramLong1, CkXml paramCkXml1, long paramLong2, CkXml paramCkXml2, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkXml_SearchForContent2(long paramLong1, CkXml paramCkXml1, long paramLong2, CkXml paramCkXml2, String paramString1, String paramString2);
/*       */   
/*       */   public static final native long CkXml_SearchForTag(long paramLong1, CkXml paramCkXml1, long paramLong2, CkXml paramCkXml2, String paramString);
/*       */   
/*       */   public static final native boolean CkXml_SearchForTag2(long paramLong1, CkXml paramCkXml1, long paramLong2, CkXml paramCkXml2, String paramString);
/*       */   
/*       */   public static final native boolean CkXml_SetBinaryContent(long paramLong1, CkXml paramCkXml, long paramLong2, CkByteData paramCkByteData, boolean paramBoolean1, boolean paramBoolean2, String paramString);
/*       */   
/*       */   public static final native boolean CkXml_SetBinaryContentFromFile(long paramLong, CkXml paramCkXml, String paramString1, boolean paramBoolean1, boolean paramBoolean2, String paramString2);
/*       */   
/*       */   public static final native void CkXml_SortByAttribute(long paramLong, CkXml paramCkXml, String paramString, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkXml_SortByAttributeInt(long paramLong, CkXml paramCkXml, String paramString, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkXml_SortByContent(long paramLong, CkXml paramCkXml, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkXml_SortByTag(long paramLong, CkXml paramCkXml, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkXml_SortRecordsByAttribute(long paramLong, CkXml paramCkXml, String paramString1, String paramString2, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkXml_SortRecordsByContent(long paramLong, CkXml paramCkXml, String paramString, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkXml_SortRecordsByContentInt(long paramLong, CkXml paramCkXml, String paramString, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkXml_SwapNode(long paramLong1, CkXml paramCkXml1, long paramLong2, CkXml paramCkXml2);
/*       */   
/*       */   public static final native boolean CkXml_SwapTree(long paramLong1, CkXml paramCkXml1, long paramLong2, CkXml paramCkXml2);
/*       */   
/*       */   public static final native boolean CkXml_TagContent(long paramLong1, CkXml paramCkXml, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkXml_tagContent(long paramLong, CkXml paramCkXml, String paramString);
/*       */   
/*       */   public static final native boolean CkXml_TagEquals(long paramLong, CkXml paramCkXml, String paramString);
/*       */   
/*       */   public static final native boolean CkXml_UnzipContent(long paramLong, CkXml paramCkXml);
/*       */   
/*       */   public static final native boolean CkXml_UnzipTree(long paramLong, CkXml paramCkXml);
/*       */   
/*       */   public static final native boolean CkXml_UpdateAt(long paramLong, CkXml paramCkXml, String paramString1, boolean paramBoolean, String paramString2);
/*       */   
/*       */   public static final native boolean CkXml_UpdateAttrAt(long paramLong, CkXml paramCkXml, String paramString1, boolean paramBoolean, String paramString2, String paramString3);
/*       */   
/*       */   public static final native boolean CkXml_UpdateAttribute(long paramLong, CkXml paramCkXml, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkXml_UpdateAttributeInt(long paramLong, CkXml paramCkXml, String paramString, int paramInt);
/*       */   
/*       */   public static final native void CkXml_UpdateChildContent(long paramLong, CkXml paramCkXml, String paramString1, String paramString2);
/*       */   
/*       */   public static final native void CkXml_UpdateChildContentInt(long paramLong, CkXml paramCkXml, String paramString, int paramInt);
/*       */   
/*       */   public static final native boolean CkXml_ZipContent(long paramLong, CkXml paramCkXml);
/*       */   
/*       */   public static final native boolean CkXml_ZipTree(long paramLong, CkXml paramCkXml);
/*       */   
/*       */   public static final native long new_CkXmlCertVault();
/*       */   
/*       */   public static final native void delete_CkXmlCertVault(long paramLong);
/*       */   
/*       */   public static final native void CkXmlCertVault_LastErrorXml(long paramLong1, CkXmlCertVault paramCkXmlCertVault, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkXmlCertVault_LastErrorHtml(long paramLong1, CkXmlCertVault paramCkXmlCertVault, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkXmlCertVault_LastErrorText(long paramLong1, CkXmlCertVault paramCkXmlCertVault, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkXmlCertVault_get_DebugLogFilePath(long paramLong1, CkXmlCertVault paramCkXmlCertVault, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkXmlCertVault_debugLogFilePath(long paramLong, CkXmlCertVault paramCkXmlCertVault);
/*       */   
/*       */   public static final native void CkXmlCertVault_put_DebugLogFilePath(long paramLong, CkXmlCertVault paramCkXmlCertVault, String paramString);
/*       */   
/*       */   public static final native void CkXmlCertVault_get_LastErrorHtml(long paramLong1, CkXmlCertVault paramCkXmlCertVault, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkXmlCertVault_lastErrorHtml(long paramLong, CkXmlCertVault paramCkXmlCertVault);
/*       */   
/*       */   public static final native void CkXmlCertVault_get_LastErrorText(long paramLong1, CkXmlCertVault paramCkXmlCertVault, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkXmlCertVault_lastErrorText(long paramLong, CkXmlCertVault paramCkXmlCertVault);
/*       */   
/*       */   public static final native void CkXmlCertVault_get_LastErrorXml(long paramLong1, CkXmlCertVault paramCkXmlCertVault, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkXmlCertVault_lastErrorXml(long paramLong, CkXmlCertVault paramCkXmlCertVault);
/*       */   
/*       */   public static final native boolean CkXmlCertVault_get_LastMethodSuccess(long paramLong, CkXmlCertVault paramCkXmlCertVault);
/*       */   
/*       */   public static final native void CkXmlCertVault_put_LastMethodSuccess(long paramLong, CkXmlCertVault paramCkXmlCertVault, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkXmlCertVault_get_MasterPassword(long paramLong1, CkXmlCertVault paramCkXmlCertVault, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkXmlCertVault_masterPassword(long paramLong, CkXmlCertVault paramCkXmlCertVault);
/*       */   
/*       */   public static final native void CkXmlCertVault_put_MasterPassword(long paramLong, CkXmlCertVault paramCkXmlCertVault, String paramString);
/*       */   
/*       */   public static final native boolean CkXmlCertVault_get_VerboseLogging(long paramLong, CkXmlCertVault paramCkXmlCertVault);
/*       */   
/*       */   public static final native void CkXmlCertVault_put_VerboseLogging(long paramLong, CkXmlCertVault paramCkXmlCertVault, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkXmlCertVault_get_Version(long paramLong1, CkXmlCertVault paramCkXmlCertVault, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkXmlCertVault_version(long paramLong, CkXmlCertVault paramCkXmlCertVault);
/*       */   
/*       */   public static final native boolean CkXmlCertVault_AddCert(long paramLong1, CkXmlCertVault paramCkXmlCertVault, long paramLong2, CkCert paramCkCert);
/*       */   
/*       */   public static final native boolean CkXmlCertVault_AddCertBinary(long paramLong1, CkXmlCertVault paramCkXmlCertVault, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkXmlCertVault_AddCertChain(long paramLong1, CkXmlCertVault paramCkXmlCertVault, long paramLong2, CkCertChain paramCkCertChain);
/*       */   
/*       */   public static final native boolean CkXmlCertVault_AddCertEncoded(long paramLong, CkXmlCertVault paramCkXmlCertVault, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkXmlCertVault_AddCertFile(long paramLong, CkXmlCertVault paramCkXmlCertVault, String paramString);
/*       */   
/*       */   public static final native boolean CkXmlCertVault_AddCertString(long paramLong, CkXmlCertVault paramCkXmlCertVault, String paramString);
/*       */   
/*       */   public static final native boolean CkXmlCertVault_AddPemFile(long paramLong, CkXmlCertVault paramCkXmlCertVault, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkXmlCertVault_AddPfx(long paramLong1, CkXmlCertVault paramCkXmlCertVault, long paramLong2, CkPfx paramCkPfx);
/*       */   
/*       */   public static final native boolean CkXmlCertVault_AddPfxBinary(long paramLong1, CkXmlCertVault paramCkXmlCertVault, long paramLong2, CkByteData paramCkByteData, String paramString);
/*       */   
/*       */   public static final native boolean CkXmlCertVault_AddPfxEncoded(long paramLong, CkXmlCertVault paramCkXmlCertVault, String paramString1, String paramString2, String paramString3);
/*       */   
/*       */   public static final native boolean CkXmlCertVault_AddPfxFile(long paramLong, CkXmlCertVault paramCkXmlCertVault, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkXmlCertVault_GetXml(long paramLong1, CkXmlCertVault paramCkXmlCertVault, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkXmlCertVault_getXml(long paramLong, CkXmlCertVault paramCkXmlCertVault);
/*       */   
/*       */   public static final native String CkXmlCertVault_xml(long paramLong, CkXmlCertVault paramCkXmlCertVault);
/*       */   
/*       */   public static final native boolean CkXmlCertVault_LoadXml(long paramLong, CkXmlCertVault paramCkXmlCertVault, String paramString);
/*       */   
/*       */   public static final native boolean CkXmlCertVault_LoadXmlFile(long paramLong, CkXmlCertVault paramCkXmlCertVault, String paramString);
/*       */   
/*       */   public static final native boolean CkXmlCertVault_SaveLastError(long paramLong, CkXmlCertVault paramCkXmlCertVault, String paramString);
/*       */   
/*       */   public static final native boolean CkXmlCertVault_SaveXml(long paramLong, CkXmlCertVault paramCkXmlCertVault, String paramString);
/*       */   
/*       */   public static final native long new_CkXmp();
/*       */   
/*       */   public static final native void delete_CkXmp(long paramLong);
/*       */   
/*       */   public static final native void CkXmp_LastErrorXml(long paramLong1, CkXmp paramCkXmp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkXmp_LastErrorHtml(long paramLong1, CkXmp paramCkXmp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkXmp_LastErrorText(long paramLong1, CkXmp paramCkXmp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkXmp_get_DebugLogFilePath(long paramLong1, CkXmp paramCkXmp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkXmp_debugLogFilePath(long paramLong, CkXmp paramCkXmp);
/*       */   
/*       */   public static final native void CkXmp_put_DebugLogFilePath(long paramLong, CkXmp paramCkXmp, String paramString);
/*       */   
/*       */   public static final native void CkXmp_get_LastErrorHtml(long paramLong1, CkXmp paramCkXmp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkXmp_lastErrorHtml(long paramLong, CkXmp paramCkXmp);
/*       */   
/*       */   public static final native void CkXmp_get_LastErrorText(long paramLong1, CkXmp paramCkXmp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkXmp_lastErrorText(long paramLong, CkXmp paramCkXmp);
/*       */   
/*       */   public static final native void CkXmp_get_LastErrorXml(long paramLong1, CkXmp paramCkXmp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkXmp_lastErrorXml(long paramLong, CkXmp paramCkXmp);
/*       */   
/*       */   public static final native boolean CkXmp_get_LastMethodSuccess(long paramLong, CkXmp paramCkXmp);
/*       */   
/*       */   public static final native void CkXmp_put_LastMethodSuccess(long paramLong, CkXmp paramCkXmp, boolean paramBoolean);
/*       */   
/*       */   public static final native int CkXmp_get_NumEmbedded(long paramLong, CkXmp paramCkXmp);
/*       */   
/*       */   public static final native boolean CkXmp_get_StructInnerDescrip(long paramLong, CkXmp paramCkXmp);
/*       */   
/*       */   public static final native void CkXmp_put_StructInnerDescrip(long paramLong, CkXmp paramCkXmp, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkXmp_get_VerboseLogging(long paramLong, CkXmp paramCkXmp);
/*       */   
/*       */   public static final native void CkXmp_put_VerboseLogging(long paramLong, CkXmp paramCkXmp, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkXmp_get_Version(long paramLong1, CkXmp paramCkXmp, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkXmp_version(long paramLong, CkXmp paramCkXmp);
/*       */   
/*       */   public static final native boolean CkXmp_AddArray(long paramLong1, CkXmp paramCkXmp, long paramLong2, CkXml paramCkXml, String paramString1, String paramString2, long paramLong3, CkStringArray paramCkStringArray);
/*       */   
/*       */   public static final native void CkXmp_AddNsMapping(long paramLong, CkXmp paramCkXmp, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkXmp_AddSimpleDate(long paramLong1, CkXmp paramCkXmp, long paramLong2, CkXml paramCkXml, String paramString, long paramLong3, SYSTEMTIME paramSYSTEMTIME);
/*       */   
/*       */   public static final native boolean CkXmp_AddSimpleInt(long paramLong1, CkXmp paramCkXmp, long paramLong2, CkXml paramCkXml, String paramString, int paramInt);
/*       */   
/*       */   public static final native boolean CkXmp_AddSimpleStr(long paramLong1, CkXmp paramCkXmp, long paramLong2, CkXml paramCkXml, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkXmp_AddStructProp(long paramLong1, CkXmp paramCkXmp, long paramLong2, CkXml paramCkXml, String paramString1, String paramString2, String paramString3);
/*       */   
/*       */   public static final native boolean CkXmp_Append(long paramLong1, CkXmp paramCkXmp, long paramLong2, CkXml paramCkXml);
/*       */   
/*       */   public static final native boolean CkXmp_DateToString(long paramLong1, CkXmp paramCkXmp, long paramLong2, SYSTEMTIME paramSYSTEMTIME, long paramLong3, CkString paramCkString);
/*       */   
/*       */   public static final native String CkXmp_dateToString(long paramLong1, CkXmp paramCkXmp, long paramLong2, SYSTEMTIME paramSYSTEMTIME);
/*       */   
/*       */   public static final native long CkXmp_GetArray(long paramLong1, CkXmp paramCkXmp, long paramLong2, CkXml paramCkXml, String paramString);
/*       */   
/*       */   public static final native long CkXmp_GetEmbedded(long paramLong, CkXmp paramCkXmp, int paramInt);
/*       */   
/*       */   public static final native long CkXmp_GetProperty(long paramLong1, CkXmp paramCkXmp, long paramLong2, CkXml paramCkXml, String paramString);
/*       */   
/*       */   public static final native boolean CkXmp_GetSimpleDate(long paramLong1, CkXmp paramCkXmp, long paramLong2, CkXml paramCkXml, String paramString, long paramLong3, SYSTEMTIME paramSYSTEMTIME);
/*       */   
/*       */   public static final native int CkXmp_GetSimpleInt(long paramLong1, CkXmp paramCkXmp, long paramLong2, CkXml paramCkXml, String paramString);
/*       */   
/*       */   public static final native boolean CkXmp_GetSimpleStr(long paramLong1, CkXmp paramCkXmp, long paramLong2, CkXml paramCkXml, String paramString, long paramLong3, CkString paramCkString);
/*       */   
/*       */   public static final native String CkXmp_getSimpleStr(long paramLong1, CkXmp paramCkXmp, long paramLong2, CkXml paramCkXml, String paramString);
/*       */   
/*       */   public static final native String CkXmp_simpleStr(long paramLong1, CkXmp paramCkXmp, long paramLong2, CkXml paramCkXml, String paramString);
/*       */   
/*       */   public static final native long CkXmp_GetStructPropNames(long paramLong1, CkXmp paramCkXmp, long paramLong2, CkXml paramCkXml, String paramString);
/*       */   
/*       */   public static final native boolean CkXmp_GetStructValue(long paramLong1, CkXmp paramCkXmp, long paramLong2, CkXml paramCkXml, String paramString1, String paramString2, long paramLong3, CkString paramCkString);
/*       */   
/*       */   public static final native String CkXmp_getStructValue(long paramLong1, CkXmp paramCkXmp, long paramLong2, CkXml paramCkXml, String paramString1, String paramString2);
/*       */   
/*       */   public static final native String CkXmp_structValue(long paramLong1, CkXmp paramCkXmp, long paramLong2, CkXml paramCkXml, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkXmp_LoadAppFile(long paramLong, CkXmp paramCkXmp, String paramString);
/*       */   
/*       */   public static final native boolean CkXmp_LoadFromBuffer(long paramLong1, CkXmp paramCkXmp, long paramLong2, CkByteData paramCkByteData, String paramString);
/*       */   
/*       */   public static final native long CkXmp_NewXmp(long paramLong, CkXmp paramCkXmp);
/*       */   
/*       */   public static final native boolean CkXmp_RemoveAllEmbedded(long paramLong, CkXmp paramCkXmp);
/*       */   
/*       */   public static final native boolean CkXmp_RemoveArray(long paramLong1, CkXmp paramCkXmp, long paramLong2, CkXml paramCkXml, String paramString);
/*       */   
/*       */   public static final native boolean CkXmp_RemoveEmbedded(long paramLong, CkXmp paramCkXmp, int paramInt);
/*       */   
/*       */   public static final native void CkXmp_RemoveNsMapping(long paramLong, CkXmp paramCkXmp, String paramString);
/*       */   
/*       */   public static final native boolean CkXmp_RemoveSimple(long paramLong1, CkXmp paramCkXmp, long paramLong2, CkXml paramCkXml, String paramString);
/*       */   
/*       */   public static final native boolean CkXmp_RemoveStruct(long paramLong1, CkXmp paramCkXmp, long paramLong2, CkXml paramCkXml, String paramString);
/*       */   
/*       */   public static final native boolean CkXmp_RemoveStructProp(long paramLong1, CkXmp paramCkXmp, long paramLong2, CkXml paramCkXml, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkXmp_SaveAppFile(long paramLong, CkXmp paramCkXmp, String paramString);
/*       */   
/*       */   public static final native boolean CkXmp_SaveLastError(long paramLong, CkXmp paramCkXmp, String paramString);
/*       */   
/*       */   public static final native boolean CkXmp_SaveToBuffer(long paramLong1, CkXmp paramCkXmp, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkXmp_StringToDate(long paramLong1, CkXmp paramCkXmp, String paramString, long paramLong2, SYSTEMTIME paramSYSTEMTIME);
/*       */   
/*       */   public static final native boolean CkXmp_UnlockComponent(long paramLong, CkXmp paramCkXmp, String paramString);
/*       */   
/*       */   public static final native long new_CkZip();
/*       */   
/*       */   public static final native void delete_CkZip(long paramLong);
/*       */   
/*       */   public static final native void CkZip_LastErrorXml(long paramLong1, CkZip paramCkZip, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkZip_LastErrorHtml(long paramLong1, CkZip paramCkZip, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkZip_LastErrorText(long paramLong1, CkZip paramCkZip, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkZip_put_EventCallbackObject(long paramLong1, CkZip paramCkZip, long paramLong2, CkZipProgress paramCkZipProgress);
/*       */   
/*       */   public static final native boolean CkZip_get_AbortCurrent(long paramLong, CkZip paramCkZip);
/*       */   
/*       */   public static final native void CkZip_put_AbortCurrent(long paramLong, CkZip paramCkZip, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkZip_get_AppendFromDir(long paramLong1, CkZip paramCkZip, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkZip_appendFromDir(long paramLong, CkZip paramCkZip);
/*       */   
/*       */   public static final native void CkZip_put_AppendFromDir(long paramLong, CkZip paramCkZip, String paramString);
/*       */   
/*       */   public static final native void CkZip_get_AutoRun(long paramLong1, CkZip paramCkZip, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkZip_autoRun(long paramLong, CkZip paramCkZip);
/*       */   
/*       */   public static final native void CkZip_put_AutoRun(long paramLong, CkZip paramCkZip, String paramString);
/*       */   
/*       */   public static final native void CkZip_get_AutoRunParams(long paramLong1, CkZip paramCkZip, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkZip_autoRunParams(long paramLong, CkZip paramCkZip);
/*       */   
/*       */   public static final native void CkZip_put_AutoRunParams(long paramLong, CkZip paramCkZip, String paramString);
/*       */   
/*       */   public static final native boolean CkZip_get_AutoTemp(long paramLong, CkZip paramCkZip);
/*       */   
/*       */   public static final native void CkZip_put_AutoTemp(long paramLong, CkZip paramCkZip, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkZip_get_CaseSensitive(long paramLong, CkZip paramCkZip);
/*       */   
/*       */   public static final native void CkZip_put_CaseSensitive(long paramLong, CkZip paramCkZip, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkZip_get_ClearArchiveAttribute(long paramLong, CkZip paramCkZip);
/*       */   
/*       */   public static final native void CkZip_put_ClearArchiveAttribute(long paramLong, CkZip paramCkZip, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkZip_get_ClearReadOnlyAttr(long paramLong, CkZip paramCkZip);
/*       */   
/*       */   public static final native void CkZip_put_ClearReadOnlyAttr(long paramLong, CkZip paramCkZip, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkZip_get_Comment(long paramLong1, CkZip paramCkZip, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkZip_comment(long paramLong, CkZip paramCkZip);
/*       */   
/*       */   public static final native void CkZip_put_Comment(long paramLong, CkZip paramCkZip, String paramString);
/*       */   
/*       */   public static final native void CkZip_get_DebugLogFilePath(long paramLong1, CkZip paramCkZip, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkZip_debugLogFilePath(long paramLong, CkZip paramCkZip);
/*       */   
/*       */   public static final native void CkZip_put_DebugLogFilePath(long paramLong, CkZip paramCkZip, String paramString);
/*       */   
/*       */   public static final native void CkZip_get_DecryptPassword(long paramLong1, CkZip paramCkZip, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkZip_decryptPassword(long paramLong, CkZip paramCkZip);
/*       */   
/*       */   public static final native void CkZip_put_DecryptPassword(long paramLong, CkZip paramCkZip, String paramString);
/*       */   
/*       */   public static final native boolean CkZip_get_DiscardPaths(long paramLong, CkZip paramCkZip);
/*       */   
/*       */   public static final native void CkZip_put_DiscardPaths(long paramLong, CkZip paramCkZip, boolean paramBoolean);
/*       */   
/*       */   public static final native int CkZip_get_Encryption(long paramLong, CkZip paramCkZip);
/*       */   
/*       */   public static final native void CkZip_put_Encryption(long paramLong, CkZip paramCkZip, int paramInt);
/*       */   
/*       */   public static final native int CkZip_get_EncryptKeyLength(long paramLong, CkZip paramCkZip);
/*       */   
/*       */   public static final native void CkZip_put_EncryptKeyLength(long paramLong, CkZip paramCkZip, int paramInt);
/*       */   
/*       */   public static final native void CkZip_get_EncryptPassword(long paramLong1, CkZip paramCkZip, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkZip_encryptPassword(long paramLong, CkZip paramCkZip);
/*       */   
/*       */   public static final native void CkZip_put_EncryptPassword(long paramLong, CkZip paramCkZip, String paramString);
/*       */   
/*       */   public static final native void CkZip_get_ExeDefaultDir(long paramLong1, CkZip paramCkZip, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkZip_exeDefaultDir(long paramLong, CkZip paramCkZip);
/*       */   
/*       */   public static final native void CkZip_put_ExeDefaultDir(long paramLong, CkZip paramCkZip, String paramString);
/*       */   
/*       */   public static final native boolean CkZip_get_ExeFinishNotifier(long paramLong, CkZip paramCkZip);
/*       */   
/*       */   public static final native void CkZip_put_ExeFinishNotifier(long paramLong, CkZip paramCkZip, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkZip_get_ExeIconFile(long paramLong1, CkZip paramCkZip, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkZip_exeIconFile(long paramLong, CkZip paramCkZip);
/*       */   
/*       */   public static final native void CkZip_put_ExeIconFile(long paramLong, CkZip paramCkZip, String paramString);
/*       */   
/*       */   public static final native boolean CkZip_get_ExeNoInterface(long paramLong, CkZip paramCkZip);
/*       */   
/*       */   public static final native void CkZip_put_ExeNoInterface(long paramLong, CkZip paramCkZip, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkZip_get_ExeSilentProgress(long paramLong, CkZip paramCkZip);
/*       */   
/*       */   public static final native void CkZip_put_ExeSilentProgress(long paramLong, CkZip paramCkZip, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkZip_get_ExeTitle(long paramLong1, CkZip paramCkZip, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkZip_exeTitle(long paramLong, CkZip paramCkZip);
/*       */   
/*       */   public static final native void CkZip_put_ExeTitle(long paramLong, CkZip paramCkZip, String paramString);
/*       */   
/*       */   public static final native void CkZip_get_ExeUnzipCaption(long paramLong1, CkZip paramCkZip, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkZip_exeUnzipCaption(long paramLong, CkZip paramCkZip);
/*       */   
/*       */   public static final native void CkZip_put_ExeUnzipCaption(long paramLong, CkZip paramCkZip, String paramString);
/*       */   
/*       */   public static final native void CkZip_get_ExeUnzipDir(long paramLong1, CkZip paramCkZip, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkZip_exeUnzipDir(long paramLong, CkZip paramCkZip);
/*       */   
/*       */   public static final native void CkZip_put_ExeUnzipDir(long paramLong, CkZip paramCkZip, String paramString);
/*       */   
/*       */   public static final native boolean CkZip_get_ExeWaitForSetup(long paramLong, CkZip paramCkZip);
/*       */   
/*       */   public static final native void CkZip_put_ExeWaitForSetup(long paramLong, CkZip paramCkZip, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkZip_get_ExeXmlConfig(long paramLong1, CkZip paramCkZip, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkZip_exeXmlConfig(long paramLong, CkZip paramCkZip);
/*       */   
/*       */   public static final native void CkZip_put_ExeXmlConfig(long paramLong, CkZip paramCkZip, String paramString);
/*       */   
/*       */   public static final native int CkZip_get_FileCount(long paramLong, CkZip paramCkZip);
/*       */   
/*       */   public static final native void CkZip_get_FileName(long paramLong1, CkZip paramCkZip, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkZip_fileName(long paramLong, CkZip paramCkZip);
/*       */   
/*       */   public static final native void CkZip_put_FileName(long paramLong, CkZip paramCkZip, String paramString);
/*       */   
/*       */   public static final native boolean CkZip_get_HasZipFormatErrors(long paramLong, CkZip paramCkZip);
/*       */   
/*       */   public static final native int CkZip_get_HeartbeatMs(long paramLong, CkZip paramCkZip);
/*       */   
/*       */   public static final native void CkZip_put_HeartbeatMs(long paramLong, CkZip paramCkZip, int paramInt);
/*       */   
/*       */   public static final native boolean CkZip_get_IgnoreAccessDenied(long paramLong, CkZip paramCkZip);
/*       */   
/*       */   public static final native void CkZip_put_IgnoreAccessDenied(long paramLong, CkZip paramCkZip, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkZip_get_LastErrorHtml(long paramLong1, CkZip paramCkZip, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkZip_lastErrorHtml(long paramLong, CkZip paramCkZip);
/*       */   
/*       */   public static final native void CkZip_get_LastErrorText(long paramLong1, CkZip paramCkZip, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkZip_lastErrorText(long paramLong, CkZip paramCkZip);
/*       */   
/*       */   public static final native void CkZip_get_LastErrorXml(long paramLong1, CkZip paramCkZip, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkZip_lastErrorXml(long paramLong, CkZip paramCkZip);
/*       */   
/*       */   public static final native boolean CkZip_get_LastMethodSuccess(long paramLong, CkZip paramCkZip);
/*       */   
/*       */   public static final native void CkZip_put_LastMethodSuccess(long paramLong, CkZip paramCkZip, boolean paramBoolean);
/*       */   
/*       */   public static final native int CkZip_get_NumEntries(long paramLong, CkZip paramCkZip);
/*       */   
/*       */   public static final native int CkZip_get_OemCodePage(long paramLong, CkZip paramCkZip);
/*       */   
/*       */   public static final native void CkZip_put_OemCodePage(long paramLong, CkZip paramCkZip, int paramInt);
/*       */   
/*       */   public static final native boolean CkZip_get_OverwriteExisting(long paramLong, CkZip paramCkZip);
/*       */   
/*       */   public static final native void CkZip_put_OverwriteExisting(long paramLong, CkZip paramCkZip, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkZip_get_PasswordProtect(long paramLong, CkZip paramCkZip);
/*       */   
/*       */   public static final native void CkZip_put_PasswordProtect(long paramLong, CkZip paramCkZip, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkZip_get_PathPrefix(long paramLong1, CkZip paramCkZip, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkZip_pathPrefix(long paramLong, CkZip paramCkZip);
/*       */   
/*       */   public static final native void CkZip_put_PathPrefix(long paramLong, CkZip paramCkZip, String paramString);
/*       */   
/*       */   public static final native int CkZip_get_PercentDoneScale(long paramLong, CkZip paramCkZip);
/*       */   
/*       */   public static final native void CkZip_put_PercentDoneScale(long paramLong, CkZip paramCkZip, int paramInt);
/*       */   
/*       */   public static final native void CkZip_get_PwdProtCharset(long paramLong1, CkZip paramCkZip, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkZip_pwdProtCharset(long paramLong, CkZip paramCkZip);
/*       */   
/*       */   public static final native void CkZip_put_PwdProtCharset(long paramLong, CkZip paramCkZip, String paramString);
/*       */   
/*       */   public static final native void CkZip_get_TempDir(long paramLong1, CkZip paramCkZip, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkZip_tempDir(long paramLong, CkZip paramCkZip);
/*       */   
/*       */   public static final native void CkZip_put_TempDir(long paramLong, CkZip paramCkZip, String paramString);
/*       */   
/*       */   public static final native boolean CkZip_get_TextFlag(long paramLong, CkZip paramCkZip);
/*       */   
/*       */   public static final native void CkZip_put_TextFlag(long paramLong, CkZip paramCkZip, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkZip_get_VerboseLogging(long paramLong, CkZip paramCkZip);
/*       */   
/*       */   public static final native void CkZip_put_VerboseLogging(long paramLong, CkZip paramCkZip, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkZip_get_Version(long paramLong1, CkZip paramCkZip, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkZip_version(long paramLong, CkZip paramCkZip);
/*       */   
/*       */   public static final native boolean CkZip_get_Zipx(long paramLong, CkZip paramCkZip);
/*       */   
/*       */   public static final native void CkZip_put_Zipx(long paramLong, CkZip paramCkZip, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkZip_get_ZipxDefaultAlg(long paramLong1, CkZip paramCkZip, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkZip_zipxDefaultAlg(long paramLong, CkZip paramCkZip);
/*       */   
/*       */   public static final native void CkZip_put_ZipxDefaultAlg(long paramLong, CkZip paramCkZip, String paramString);
/*       */   
/*       */   public static final native boolean CkZip_AddEmbedded(long paramLong, CkZip paramCkZip, String paramString1, String paramString2, String paramString3);
/*       */   
/*       */   public static final native void CkZip_AddNoCompressExtension(long paramLong, CkZip paramCkZip, String paramString);
/*       */   
/*       */   public static final native long CkZip_AppendBase64(long paramLong, CkZip paramCkZip, String paramString1, String paramString2);
/*       */   
/*       */   public static final native long CkZip_AppendBd(long paramLong1, CkZip paramCkZip, String paramString, long paramLong2, CkBinData paramCkBinData);
/*       */   
/*       */   public static final native long CkZip_AppendCompressed(long paramLong1, CkZip paramCkZip, String paramString, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native long CkZip_AppendData(long paramLong1, CkZip paramCkZip, String paramString, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native long CkZip_AppendDataEncoded(long paramLong, CkZip paramCkZip, String paramString1, String paramString2, String paramString3);
/*       */   
/*       */   public static final native boolean CkZip_AppendFiles(long paramLong, CkZip paramCkZip, String paramString, boolean paramBoolean);
/*       */   
/*       */   public static final native long CkZip_AppendFilesAsync(long paramLong, CkZip paramCkZip, String paramString, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkZip_AppendFilesEx(long paramLong, CkZip paramCkZip, String paramString, boolean paramBoolean1, boolean paramBoolean2, boolean paramBoolean3, boolean paramBoolean4, boolean paramBoolean5);
/*       */   
/*       */   public static final native long CkZip_AppendFilesExAsync(long paramLong, CkZip paramCkZip, String paramString, boolean paramBoolean1, boolean paramBoolean2, boolean paramBoolean3, boolean paramBoolean4, boolean paramBoolean5);
/*       */   
/*       */   public static final native long CkZip_AppendHex(long paramLong, CkZip paramCkZip, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkZip_AppendMultiple(long paramLong1, CkZip paramCkZip, long paramLong2, CkStringArray paramCkStringArray, boolean paramBoolean);
/*       */   
/*       */   public static final native long CkZip_AppendMultipleAsync(long paramLong1, CkZip paramCkZip, long paramLong2, CkStringArray paramCkStringArray, boolean paramBoolean);
/*       */   
/*       */   public static final native long CkZip_AppendNew(long paramLong, CkZip paramCkZip, String paramString);
/*       */   
/*       */   public static final native long CkZip_AppendNewDir(long paramLong, CkZip paramCkZip, String paramString);
/*       */   
/*       */   public static final native boolean CkZip_AppendOneFileOrDir(long paramLong, CkZip paramCkZip, String paramString, boolean paramBoolean);
/*       */   
/*       */   public static final native long CkZip_AppendOneFileOrDirAsync(long paramLong, CkZip paramCkZip, String paramString, boolean paramBoolean);
/*       */   
/*       */   public static final native long CkZip_AppendString(long paramLong, CkZip paramCkZip, String paramString1, String paramString2);
/*       */   
/*       */   public static final native long CkZip_AppendString2(long paramLong, CkZip paramCkZip, String paramString1, String paramString2, String paramString3);
/*       */   
/*       */   public static final native boolean CkZip_AppendZip(long paramLong, CkZip paramCkZip, String paramString);
/*       */   
/*       */   public static final native void CkZip_CloseZip(long paramLong, CkZip paramCkZip);
/*       */   
/*       */   public static final native boolean CkZip_DeleteEntry(long paramLong1, CkZip paramCkZip, long paramLong2, CkZipEntry paramCkZipEntry);
/*       */   
/*       */   public static final native void CkZip_ExcludeDir(long paramLong, CkZip paramCkZip, String paramString);
/*       */   
/*       */   public static final native boolean CkZip_Extract(long paramLong, CkZip paramCkZip, String paramString);
/*       */   
/*       */   public static final native long CkZip_ExtractAsync(long paramLong, CkZip paramCkZip, String paramString);
/*       */   
/*       */   public static final native boolean CkZip_ExtractExe(long paramLong, CkZip paramCkZip, String paramString1, String paramString2);
/*       */   
/*       */   public static final native long CkZip_ExtractExeAsync(long paramLong, CkZip paramCkZip, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkZip_ExtractInto(long paramLong, CkZip paramCkZip, String paramString);
/*       */   
/*       */   public static final native boolean CkZip_ExtractMatching(long paramLong, CkZip paramCkZip, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkZip_ExtractNewer(long paramLong, CkZip paramCkZip, String paramString);
/*       */   
/*       */   public static final native boolean CkZip_ExtractOne(long paramLong1, CkZip paramCkZip, long paramLong2, CkZipEntry paramCkZipEntry, String paramString);
/*       */   
/*       */   public static final native long CkZip_FirstEntry(long paramLong, CkZip paramCkZip);
/*       */   
/*       */   public static final native long CkZip_FirstMatchingEntry(long paramLong, CkZip paramCkZip, String paramString);
/*       */   
/*       */   public static final native boolean CkZip_GetDirectoryAsXML(long paramLong1, CkZip paramCkZip, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkZip_getDirectoryAsXML(long paramLong, CkZip paramCkZip);
/*       */   
/*       */   public static final native String CkZip_directoryAsXML(long paramLong, CkZip paramCkZip);
/*       */   
/*       */   public static final native long CkZip_GetEntryByID(long paramLong, CkZip paramCkZip, int paramInt);
/*       */   
/*       */   public static final native long CkZip_GetEntryByIndex(long paramLong, CkZip paramCkZip, int paramInt);
/*       */   
/*       */   public static final native long CkZip_GetEntryByName(long paramLong, CkZip paramCkZip, String paramString);
/*       */   
/*       */   public static final native long CkZip_GetExclusions(long paramLong, CkZip paramCkZip);
/*       */   
/*       */   public static final native boolean CkZip_GetExeConfigParam(long paramLong1, CkZip paramCkZip, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkZip_getExeConfigParam(long paramLong, CkZip paramCkZip, String paramString);
/*       */   
/*       */   public static final native String CkZip_exeConfigParam(long paramLong, CkZip paramCkZip, String paramString);
/*       */   
/*       */   public static final native long CkZip_InsertNew(long paramLong, CkZip paramCkZip, String paramString, int paramInt);
/*       */   
/*       */   public static final native boolean CkZip_IsNoCompressExtension(long paramLong, CkZip paramCkZip, String paramString);
/*       */   
/*       */   public static final native boolean CkZip_IsPasswordProtected(long paramLong, CkZip paramCkZip, String paramString);
/*       */   
/*       */   public static final native boolean CkZip_IsUnlocked(long paramLong, CkZip paramCkZip);
/*       */   
/*       */   public static final native boolean CkZip_NewZip(long paramLong, CkZip paramCkZip, String paramString);
/*       */   
/*       */   public static final native boolean CkZip_OpenBd(long paramLong1, CkZip paramCkZip, long paramLong2, CkBinData paramCkBinData);
/*       */   
/*       */   public static final native boolean CkZip_OpenEmbedded(long paramLong, CkZip paramCkZip, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkZip_OpenFromByteData(long paramLong1, CkZip paramCkZip, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkZip_OpenFromMemory(long paramLong1, CkZip paramCkZip, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkZip_OpenMyEmbedded(long paramLong, CkZip paramCkZip, String paramString);
/*       */   
/*       */   public static final native boolean CkZip_OpenZip(long paramLong, CkZip paramCkZip, String paramString);
/*       */   
/*       */   public static final native long CkZip_OpenZipAsync(long paramLong, CkZip paramCkZip, String paramString);
/*       */   
/*       */   public static final native boolean CkZip_QuickAppend(long paramLong, CkZip paramCkZip, String paramString);
/*       */   
/*       */   public static final native long CkZip_QuickAppendAsync(long paramLong, CkZip paramCkZip, String paramString);
/*       */   
/*       */   public static final native boolean CkZip_RemoveEmbedded(long paramLong, CkZip paramCkZip, String paramString1, String paramString2);
/*       */   
/*       */   public static final native void CkZip_RemoveNoCompressExtension(long paramLong, CkZip paramCkZip, String paramString);
/*       */   
/*       */   public static final native boolean CkZip_ReplaceEmbedded(long paramLong, CkZip paramCkZip, String paramString1, String paramString2, String paramString3);
/*       */   
/*       */   public static final native boolean CkZip_SaveLastError(long paramLong, CkZip paramCkZip, String paramString);
/*       */   
/*       */   public static final native void CkZip_SetCompressionLevel(long paramLong, CkZip paramCkZip, int paramInt);
/*       */   
/*       */   public static final native void CkZip_SetExclusions(long paramLong1, CkZip paramCkZip, long paramLong2, CkStringArray paramCkStringArray);
/*       */   
/*       */   public static final native void CkZip_SetExeConfigParam(long paramLong, CkZip paramCkZip, String paramString1, String paramString2);
/*       */   
/*       */   public static final native void CkZip_SetPassword(long paramLong, CkZip paramCkZip, String paramString);
/*       */   
/*       */   public static final native boolean CkZip_UnlockComponent(long paramLong, CkZip paramCkZip, String paramString);
/*       */   
/*       */   public static final native int CkZip_Unzip(long paramLong, CkZip paramCkZip, String paramString);
/*       */   
/*       */   public static final native long CkZip_UnzipAsync(long paramLong, CkZip paramCkZip, String paramString);
/*       */   
/*       */   public static final native int CkZip_UnzipInto(long paramLong, CkZip paramCkZip, String paramString);
/*       */   
/*       */   public static final native long CkZip_UnzipIntoAsync(long paramLong, CkZip paramCkZip, String paramString);
/*       */   
/*       */   public static final native int CkZip_UnzipMatching(long paramLong, CkZip paramCkZip, String paramString1, String paramString2, boolean paramBoolean);
/*       */   
/*       */   public static final native long CkZip_UnzipMatchingAsync(long paramLong, CkZip paramCkZip, String paramString1, String paramString2, boolean paramBoolean);
/*       */   
/*       */   public static final native int CkZip_UnzipMatchingInto(long paramLong, CkZip paramCkZip, String paramString1, String paramString2, boolean paramBoolean);
/*       */   
/*       */   public static final native long CkZip_UnzipMatchingIntoAsync(long paramLong, CkZip paramCkZip, String paramString1, String paramString2, boolean paramBoolean);
/*       */   
/*       */   public static final native int CkZip_UnzipNewer(long paramLong, CkZip paramCkZip, String paramString);
/*       */   
/*       */   public static final native long CkZip_UnzipNewerAsync(long paramLong, CkZip paramCkZip, String paramString);
/*       */   
/*       */   public static final native boolean CkZip_VerifyPassword(long paramLong, CkZip paramCkZip);
/*       */   
/*       */   public static final native boolean CkZip_WriteBd(long paramLong1, CkZip paramCkZip, long paramLong2, CkBinData paramCkBinData);
/*       */   
/*       */   public static final native long CkZip_WriteBdAsync(long paramLong1, CkZip paramCkZip, long paramLong2, CkBinData paramCkBinData);
/*       */   
/*       */   public static final native boolean CkZip_WriteExe(long paramLong, CkZip paramCkZip, String paramString);
/*       */   
/*       */   public static final native boolean CkZip_WriteExe2(long paramLong, CkZip paramCkZip, String paramString1, String paramString2, boolean paramBoolean, int paramInt, String paramString3);
/*       */   
/*       */   public static final native boolean CkZip_WriteExeToMemory(long paramLong1, CkZip paramCkZip, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkZip_WriteToMemory(long paramLong1, CkZip paramCkZip, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native long CkZip_WriteToMemoryAsync(long paramLong, CkZip paramCkZip);
/*       */   
/*       */   public static final native boolean CkZip_WriteZip(long paramLong, CkZip paramCkZip);
/*       */   
/*       */   public static final native long CkZip_WriteZipAsync(long paramLong, CkZip paramCkZip);
/*       */   
/*       */   public static final native boolean CkZip_WriteZipAndClose(long paramLong, CkZip paramCkZip);
/*       */   
/*       */   public static final native long CkZip_WriteZipAndCloseAsync(long paramLong, CkZip paramCkZip);
/*       */   
/*       */   public static final native long new_CkZipEntry();
/*       */   
/*       */   public static final native void delete_CkZipEntry(long paramLong);
/*       */   
/*       */   public static final native void CkZipEntry_LastErrorXml(long paramLong1, CkZipEntry paramCkZipEntry, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkZipEntry_LastErrorHtml(long paramLong1, CkZipEntry paramCkZipEntry, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkZipEntry_LastErrorText(long paramLong1, CkZipEntry paramCkZipEntry, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkZipEntry_put_EventCallbackObject(long paramLong1, CkZipEntry paramCkZipEntry, long paramLong2, CkBaseProgress paramCkBaseProgress);
/*       */   
/*       */   public static final native void CkZipEntry_get_Comment(long paramLong1, CkZipEntry paramCkZipEntry, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkZipEntry_comment(long paramLong, CkZipEntry paramCkZipEntry);
/*       */   
/*       */   public static final native void CkZipEntry_put_Comment(long paramLong, CkZipEntry paramCkZipEntry, String paramString);
/*       */   
/*       */   public static final native long CkZipEntry_get_CompressedLength(long paramLong, CkZipEntry paramCkZipEntry);
/*       */   
/*       */   public static final native void CkZipEntry_get_CompressedLengthStr(long paramLong1, CkZipEntry paramCkZipEntry, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkZipEntry_compressedLengthStr(long paramLong, CkZipEntry paramCkZipEntry);
/*       */   
/*       */   public static final native int CkZipEntry_get_CompressionLevel(long paramLong, CkZipEntry paramCkZipEntry);
/*       */   
/*       */   public static final native void CkZipEntry_put_CompressionLevel(long paramLong, CkZipEntry paramCkZipEntry, int paramInt);
/*       */   
/*       */   public static final native int CkZipEntry_get_CompressionMethod(long paramLong, CkZipEntry paramCkZipEntry);
/*       */   
/*       */   public static final native void CkZipEntry_put_CompressionMethod(long paramLong, CkZipEntry paramCkZipEntry, int paramInt);
/*       */   
/*       */   public static final native int CkZipEntry_get_Crc(long paramLong, CkZipEntry paramCkZipEntry);
/*       */   
/*       */   public static final native void CkZipEntry_get_DebugLogFilePath(long paramLong1, CkZipEntry paramCkZipEntry, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkZipEntry_debugLogFilePath(long paramLong, CkZipEntry paramCkZipEntry);
/*       */   
/*       */   public static final native void CkZipEntry_put_DebugLogFilePath(long paramLong, CkZipEntry paramCkZipEntry, String paramString);
/*       */   
/*       */   public static final native int CkZipEntry_get_EncryptionKeyLen(long paramLong, CkZipEntry paramCkZipEntry);
/*       */   
/*       */   public static final native int CkZipEntry_get_EntryID(long paramLong, CkZipEntry paramCkZipEntry);
/*       */   
/*       */   public static final native int CkZipEntry_get_EntryType(long paramLong, CkZipEntry paramCkZipEntry);
/*       */   
/*       */   public static final native void CkZipEntry_get_FileDateTime(long paramLong1, CkZipEntry paramCkZipEntry, long paramLong2, SYSTEMTIME paramSYSTEMTIME);
/*       */   
/*       */   public static final native void CkZipEntry_put_FileDateTime(long paramLong1, CkZipEntry paramCkZipEntry, long paramLong2, SYSTEMTIME paramSYSTEMTIME);
/*       */   
/*       */   public static final native void CkZipEntry_get_FileDateTimeStr(long paramLong1, CkZipEntry paramCkZipEntry, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkZipEntry_fileDateTimeStr(long paramLong, CkZipEntry paramCkZipEntry);
/*       */   
/*       */   public static final native void CkZipEntry_put_FileDateTimeStr(long paramLong, CkZipEntry paramCkZipEntry, String paramString);
/*       */   
/*       */   public static final native void CkZipEntry_get_FileName(long paramLong1, CkZipEntry paramCkZipEntry, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkZipEntry_fileName(long paramLong, CkZipEntry paramCkZipEntry);
/*       */   
/*       */   public static final native void CkZipEntry_put_FileName(long paramLong, CkZipEntry paramCkZipEntry, String paramString);
/*       */   
/*       */   public static final native void CkZipEntry_get_FileNameHex(long paramLong1, CkZipEntry paramCkZipEntry, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkZipEntry_fileNameHex(long paramLong, CkZipEntry paramCkZipEntry);
/*       */   
/*       */   public static final native int CkZipEntry_get_HeartbeatMs(long paramLong, CkZipEntry paramCkZipEntry);
/*       */   
/*       */   public static final native void CkZipEntry_put_HeartbeatMs(long paramLong, CkZipEntry paramCkZipEntry, int paramInt);
/*       */   
/*       */   public static final native boolean CkZipEntry_get_IsAesEncrypted(long paramLong, CkZipEntry paramCkZipEntry);
/*       */   
/*       */   public static final native boolean CkZipEntry_get_IsDirectory(long paramLong, CkZipEntry paramCkZipEntry);
/*       */   
/*       */   public static final native void CkZipEntry_get_LastErrorHtml(long paramLong1, CkZipEntry paramCkZipEntry, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkZipEntry_lastErrorHtml(long paramLong, CkZipEntry paramCkZipEntry);
/*       */   
/*       */   public static final native void CkZipEntry_get_LastErrorText(long paramLong1, CkZipEntry paramCkZipEntry, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkZipEntry_lastErrorText(long paramLong, CkZipEntry paramCkZipEntry);
/*       */   
/*       */   public static final native void CkZipEntry_get_LastErrorXml(long paramLong1, CkZipEntry paramCkZipEntry, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkZipEntry_lastErrorXml(long paramLong, CkZipEntry paramCkZipEntry);
/*       */   
/*       */   public static final native boolean CkZipEntry_get_LastMethodSuccess(long paramLong, CkZipEntry paramCkZipEntry);
/*       */   
/*       */   public static final native void CkZipEntry_put_LastMethodSuccess(long paramLong, CkZipEntry paramCkZipEntry, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkZipEntry_get_TextFlag(long paramLong, CkZipEntry paramCkZipEntry);
/*       */   
/*       */   public static final native void CkZipEntry_put_TextFlag(long paramLong, CkZipEntry paramCkZipEntry, boolean paramBoolean);
/*       */   
/*       */   public static final native long CkZipEntry_get_UncompressedLength(long paramLong, CkZipEntry paramCkZipEntry);
/*       */   
/*       */   public static final native void CkZipEntry_get_UncompressedLengthStr(long paramLong1, CkZipEntry paramCkZipEntry, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkZipEntry_uncompressedLengthStr(long paramLong, CkZipEntry paramCkZipEntry);
/*       */   
/*       */   public static final native boolean CkZipEntry_get_VerboseLogging(long paramLong, CkZipEntry paramCkZipEntry);
/*       */   
/*       */   public static final native void CkZipEntry_put_VerboseLogging(long paramLong, CkZipEntry paramCkZipEntry, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkZipEntry_get_Version(long paramLong1, CkZipEntry paramCkZipEntry, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkZipEntry_version(long paramLong, CkZipEntry paramCkZipEntry);
/*       */   
/*       */   public static final native boolean CkZipEntry_AppendData(long paramLong1, CkZipEntry paramCkZipEntry, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native long CkZipEntry_AppendDataAsync(long paramLong1, CkZipEntry paramCkZipEntry, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkZipEntry_AppendString(long paramLong, CkZipEntry paramCkZipEntry, String paramString1, String paramString2);
/*       */   
/*       */   public static final native long CkZipEntry_AppendStringAsync(long paramLong, CkZipEntry paramCkZipEntry, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkZipEntry_Copy(long paramLong1, CkZipEntry paramCkZipEntry, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkZipEntry_CopyToBase64(long paramLong1, CkZipEntry paramCkZipEntry, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkZipEntry_copyToBase64(long paramLong, CkZipEntry paramCkZipEntry);
/*       */   
/*       */   public static final native boolean CkZipEntry_CopyToHex(long paramLong1, CkZipEntry paramCkZipEntry, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkZipEntry_copyToHex(long paramLong, CkZipEntry paramCkZipEntry);
/*       */   
/*       */   public static final native boolean CkZipEntry_Extract(long paramLong, CkZipEntry paramCkZipEntry, String paramString);
/*       */   
/*       */   public static final native long CkZipEntry_ExtractAsync(long paramLong, CkZipEntry paramCkZipEntry, String paramString);
/*       */   
/*       */   public static final native boolean CkZipEntry_ExtractInto(long paramLong, CkZipEntry paramCkZipEntry, String paramString);
/*       */   
/*       */   public static final native long CkZipEntry_ExtractIntoAsync(long paramLong, CkZipEntry paramCkZipEntry, String paramString);
/*       */   
/*       */   public static final native long CkZipEntry_GetDt(long paramLong, CkZipEntry paramCkZipEntry);
/*       */   
/*       */   public static final native boolean CkZipEntry_Inflate(long paramLong1, CkZipEntry paramCkZipEntry, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native long CkZipEntry_InflateAsync(long paramLong, CkZipEntry paramCkZipEntry);
/*       */   
/*       */   public static final native long CkZipEntry_NextEntry(long paramLong, CkZipEntry paramCkZipEntry);
/*       */   
/*       */   public static final native long CkZipEntry_NextMatchingEntry(long paramLong, CkZipEntry paramCkZipEntry, String paramString);
/*       */   
/*       */   public static final native boolean CkZipEntry_ReplaceData(long paramLong1, CkZipEntry paramCkZipEntry, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkZipEntry_ReplaceString(long paramLong, CkZipEntry paramCkZipEntry, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkZipEntry_SaveLastError(long paramLong, CkZipEntry paramCkZipEntry, String paramString);
/*       */   
/*       */   public static final native void CkZipEntry_SetDt(long paramLong1, CkZipEntry paramCkZipEntry, long paramLong2, CkDateTime paramCkDateTime);
/*       */   
/*       */   public static final native boolean CkZipEntry_UnzipToBd(long paramLong1, CkZipEntry paramCkZipEntry, long paramLong2, CkBinData paramCkBinData);
/*       */   
/*       */   public static final native long CkZipEntry_UnzipToBdAsync(long paramLong1, CkZipEntry paramCkZipEntry, long paramLong2, CkBinData paramCkBinData);
/*       */   
/*       */   public static final native boolean CkZipEntry_UnzipToSb(long paramLong1, CkZipEntry paramCkZipEntry, int paramInt, String paramString, long paramLong2, CkStringBuilder paramCkStringBuilder);
/*       */   
/*       */   public static final native long CkZipEntry_UnzipToSbAsync(long paramLong1, CkZipEntry paramCkZipEntry, int paramInt, String paramString, long paramLong2, CkStringBuilder paramCkStringBuilder);
/*       */   
/*       */   public static final native boolean CkZipEntry_UnzipToStream(long paramLong1, CkZipEntry paramCkZipEntry, long paramLong2, CkStream paramCkStream);
/*       */   
/*       */   public static final native long CkZipEntry_UnzipToStreamAsync(long paramLong1, CkZipEntry paramCkZipEntry, long paramLong2, CkStream paramCkStream);
/*       */   
/*       */   public static final native boolean CkZipEntry_UnzipToString(long paramLong1, CkZipEntry paramCkZipEntry, int paramInt, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkZipEntry_unzipToString(long paramLong, CkZipEntry paramCkZipEntry, int paramInt, String paramString);
/*       */   
/*       */   public static final native long CkZipEntry_UnzipToStringAsync(long paramLong, CkZipEntry paramCkZipEntry, int paramInt, String paramString);
/*       */   
/*       */   public static final native long new_CkZipCrc();
/*       */   
/*       */   public static final native void delete_CkZipCrc(long paramLong);
/*       */   
/*       */   public static final native void CkZipCrc_LastErrorXml(long paramLong1, CkZipCrc paramCkZipCrc, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkZipCrc_LastErrorHtml(long paramLong1, CkZipCrc paramCkZipCrc, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkZipCrc_LastErrorText(long paramLong1, CkZipCrc paramCkZipCrc, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkZipCrc_put_EventCallbackObject(long paramLong1, CkZipCrc paramCkZipCrc, long paramLong2, CkBaseProgress paramCkBaseProgress);
/*       */   
/*       */   public static final native void CkZipCrc_get_DebugLogFilePath(long paramLong1, CkZipCrc paramCkZipCrc, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkZipCrc_debugLogFilePath(long paramLong, CkZipCrc paramCkZipCrc);
/*       */   
/*       */   public static final native void CkZipCrc_put_DebugLogFilePath(long paramLong, CkZipCrc paramCkZipCrc, String paramString);
/*       */   
/*       */   public static final native void CkZipCrc_get_LastErrorHtml(long paramLong1, CkZipCrc paramCkZipCrc, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkZipCrc_lastErrorHtml(long paramLong, CkZipCrc paramCkZipCrc);
/*       */   
/*       */   public static final native void CkZipCrc_get_LastErrorText(long paramLong1, CkZipCrc paramCkZipCrc, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkZipCrc_lastErrorText(long paramLong, CkZipCrc paramCkZipCrc);
/*       */   
/*       */   public static final native void CkZipCrc_get_LastErrorXml(long paramLong1, CkZipCrc paramCkZipCrc, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkZipCrc_lastErrorXml(long paramLong, CkZipCrc paramCkZipCrc);
/*       */   
/*       */   public static final native boolean CkZipCrc_get_LastMethodSuccess(long paramLong, CkZipCrc paramCkZipCrc);
/*       */   
/*       */   public static final native void CkZipCrc_put_LastMethodSuccess(long paramLong, CkZipCrc paramCkZipCrc, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkZipCrc_get_VerboseLogging(long paramLong, CkZipCrc paramCkZipCrc);
/*       */   
/*       */   public static final native void CkZipCrc_put_VerboseLogging(long paramLong, CkZipCrc paramCkZipCrc, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkZipCrc_get_Version(long paramLong1, CkZipCrc paramCkZipCrc, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkZipCrc_version(long paramLong, CkZipCrc paramCkZipCrc);
/*       */   
/*       */   public static final native void CkZipCrc_BeginStream(long paramLong, CkZipCrc paramCkZipCrc);
/*       */   
/*       */   public static final native long CkZipCrc_CalculateCrc(long paramLong1, CkZipCrc paramCkZipCrc, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native long CkZipCrc_CrcBd(long paramLong1, CkZipCrc paramCkZipCrc, long paramLong2, CkBinData paramCkBinData);
/*       */   
/*       */   public static final native long CkZipCrc_CrcSb(long paramLong1, CkZipCrc paramCkZipCrc, long paramLong2, CkStringBuilder paramCkStringBuilder, String paramString);
/*       */   
/*       */   public static final native long CkZipCrc_CrcString(long paramLong, CkZipCrc paramCkZipCrc, String paramString1, String paramString2);
/*       */   
/*       */   public static final native long CkZipCrc_EndStream(long paramLong, CkZipCrc paramCkZipCrc);
/*       */   
/*       */   public static final native long CkZipCrc_FileCrc(long paramLong, CkZipCrc paramCkZipCrc, String paramString);
/*       */   
/*       */   public static final native long CkZipCrc_FileCrcAsync(long paramLong, CkZipCrc paramCkZipCrc, String paramString);
/*       */   
/*       */   public static final native void CkZipCrc_MoreData(long paramLong1, CkZipCrc paramCkZipCrc, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkZipCrc_SaveLastError(long paramLong, CkZipCrc paramCkZipCrc, String paramString);
/*       */   
/*       */   public static final native boolean CkZipCrc_ToHex(long paramLong1, CkZipCrc paramCkZipCrc, int paramInt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkZipCrc_toHex(long paramLong, CkZipCrc paramCkZipCrc, int paramInt);
/*       */   
/*       */   public static final native long new_CkOAuth1();
/*       */   
/*       */   public static final native void delete_CkOAuth1(long paramLong);
/*       */   
/*       */   public static final native void CkOAuth1_LastErrorXml(long paramLong1, CkOAuth1 paramCkOAuth1, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkOAuth1_LastErrorHtml(long paramLong1, CkOAuth1 paramCkOAuth1, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkOAuth1_LastErrorText(long paramLong1, CkOAuth1 paramCkOAuth1, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkOAuth1_get_AuthorizationHeader(long paramLong1, CkOAuth1 paramCkOAuth1, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkOAuth1_authorizationHeader(long paramLong, CkOAuth1 paramCkOAuth1);
/*       */   
/*       */   public static final native void CkOAuth1_get_BaseString(long paramLong1, CkOAuth1 paramCkOAuth1, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkOAuth1_baseString(long paramLong, CkOAuth1 paramCkOAuth1);
/*       */   
/*       */   public static final native void CkOAuth1_get_ConsumerKey(long paramLong1, CkOAuth1 paramCkOAuth1, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkOAuth1_consumerKey(long paramLong, CkOAuth1 paramCkOAuth1);
/*       */   
/*       */   public static final native void CkOAuth1_put_ConsumerKey(long paramLong, CkOAuth1 paramCkOAuth1, String paramString);
/*       */   
/*       */   public static final native void CkOAuth1_get_ConsumerSecret(long paramLong1, CkOAuth1 paramCkOAuth1, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkOAuth1_consumerSecret(long paramLong, CkOAuth1 paramCkOAuth1);
/*       */   
/*       */   public static final native void CkOAuth1_put_ConsumerSecret(long paramLong, CkOAuth1 paramCkOAuth1, String paramString);
/*       */   
/*       */   public static final native void CkOAuth1_get_DebugLogFilePath(long paramLong1, CkOAuth1 paramCkOAuth1, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkOAuth1_debugLogFilePath(long paramLong, CkOAuth1 paramCkOAuth1);
/*       */   
/*       */   public static final native void CkOAuth1_put_DebugLogFilePath(long paramLong, CkOAuth1 paramCkOAuth1, String paramString);
/*       */   
/*       */   public static final native void CkOAuth1_get_EncodedSignature(long paramLong1, CkOAuth1 paramCkOAuth1, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkOAuth1_encodedSignature(long paramLong, CkOAuth1 paramCkOAuth1);
/*       */   
/*       */   public static final native void CkOAuth1_get_GeneratedUrl(long paramLong1, CkOAuth1 paramCkOAuth1, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkOAuth1_generatedUrl(long paramLong, CkOAuth1 paramCkOAuth1);
/*       */   
/*       */   public static final native void CkOAuth1_get_HmacKey(long paramLong1, CkOAuth1 paramCkOAuth1, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkOAuth1_hmacKey(long paramLong, CkOAuth1 paramCkOAuth1);
/*       */   
/*       */   public static final native void CkOAuth1_get_LastErrorHtml(long paramLong1, CkOAuth1 paramCkOAuth1, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkOAuth1_lastErrorHtml(long paramLong, CkOAuth1 paramCkOAuth1);
/*       */   
/*       */   public static final native void CkOAuth1_get_LastErrorText(long paramLong1, CkOAuth1 paramCkOAuth1, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkOAuth1_lastErrorText(long paramLong, CkOAuth1 paramCkOAuth1);
/*       */   
/*       */   public static final native void CkOAuth1_get_LastErrorXml(long paramLong1, CkOAuth1 paramCkOAuth1, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkOAuth1_lastErrorXml(long paramLong, CkOAuth1 paramCkOAuth1);
/*       */   
/*       */   public static final native boolean CkOAuth1_get_LastMethodSuccess(long paramLong, CkOAuth1 paramCkOAuth1);
/*       */   
/*       */   public static final native void CkOAuth1_put_LastMethodSuccess(long paramLong, CkOAuth1 paramCkOAuth1, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkOAuth1_get_Nonce(long paramLong1, CkOAuth1 paramCkOAuth1, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkOAuth1_nonce(long paramLong, CkOAuth1 paramCkOAuth1);
/*       */   
/*       */   public static final native void CkOAuth1_put_Nonce(long paramLong, CkOAuth1 paramCkOAuth1, String paramString);
/*       */   
/*       */   public static final native void CkOAuth1_get_OauthMethod(long paramLong1, CkOAuth1 paramCkOAuth1, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkOAuth1_oauthMethod(long paramLong, CkOAuth1 paramCkOAuth1);
/*       */   
/*       */   public static final native void CkOAuth1_put_OauthMethod(long paramLong, CkOAuth1 paramCkOAuth1, String paramString);
/*       */   
/*       */   public static final native void CkOAuth1_get_OauthUrl(long paramLong1, CkOAuth1 paramCkOAuth1, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkOAuth1_oauthUrl(long paramLong, CkOAuth1 paramCkOAuth1);
/*       */   
/*       */   public static final native void CkOAuth1_put_OauthUrl(long paramLong, CkOAuth1 paramCkOAuth1, String paramString);
/*       */   
/*       */   public static final native void CkOAuth1_get_OauthVersion(long paramLong1, CkOAuth1 paramCkOAuth1, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkOAuth1_oauthVersion(long paramLong, CkOAuth1 paramCkOAuth1);
/*       */   
/*       */   public static final native void CkOAuth1_put_OauthVersion(long paramLong, CkOAuth1 paramCkOAuth1, String paramString);
/*       */   
/*       */   public static final native void CkOAuth1_get_QueryString(long paramLong1, CkOAuth1 paramCkOAuth1, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkOAuth1_queryString(long paramLong, CkOAuth1 paramCkOAuth1);
/*       */   
/*       */   public static final native void CkOAuth1_get_Realm(long paramLong1, CkOAuth1 paramCkOAuth1, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkOAuth1_realm(long paramLong, CkOAuth1 paramCkOAuth1);
/*       */   
/*       */   public static final native void CkOAuth1_put_Realm(long paramLong, CkOAuth1 paramCkOAuth1, String paramString);
/*       */   
/*       */   public static final native void CkOAuth1_get_Signature(long paramLong1, CkOAuth1 paramCkOAuth1, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkOAuth1_signature(long paramLong, CkOAuth1 paramCkOAuth1);
/*       */   
/*       */   public static final native void CkOAuth1_get_SignatureMethod(long paramLong1, CkOAuth1 paramCkOAuth1, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkOAuth1_signatureMethod(long paramLong, CkOAuth1 paramCkOAuth1);
/*       */   
/*       */   public static final native void CkOAuth1_put_SignatureMethod(long paramLong, CkOAuth1 paramCkOAuth1, String paramString);
/*       */   
/*       */   public static final native void CkOAuth1_get_Timestamp(long paramLong1, CkOAuth1 paramCkOAuth1, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkOAuth1_timestamp(long paramLong, CkOAuth1 paramCkOAuth1);
/*       */   
/*       */   public static final native void CkOAuth1_put_Timestamp(long paramLong, CkOAuth1 paramCkOAuth1, String paramString);
/*       */   
/*       */   public static final native void CkOAuth1_get_Token(long paramLong1, CkOAuth1 paramCkOAuth1, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkOAuth1_token(long paramLong, CkOAuth1 paramCkOAuth1);
/*       */   
/*       */   public static final native void CkOAuth1_put_Token(long paramLong, CkOAuth1 paramCkOAuth1, String paramString);
/*       */   
/*       */   public static final native void CkOAuth1_get_TokenSecret(long paramLong1, CkOAuth1 paramCkOAuth1, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkOAuth1_tokenSecret(long paramLong, CkOAuth1 paramCkOAuth1);
/*       */   
/*       */   public static final native void CkOAuth1_put_TokenSecret(long paramLong, CkOAuth1 paramCkOAuth1, String paramString);
/*       */   
/*       */   public static final native boolean CkOAuth1_get_VerboseLogging(long paramLong, CkOAuth1 paramCkOAuth1);
/*       */   
/*       */   public static final native void CkOAuth1_put_VerboseLogging(long paramLong, CkOAuth1 paramCkOAuth1, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkOAuth1_get_Version(long paramLong1, CkOAuth1 paramCkOAuth1, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkOAuth1_version(long paramLong, CkOAuth1 paramCkOAuth1);
/*       */   
/*       */   public static final native boolean CkOAuth1_AddParam(long paramLong, CkOAuth1 paramCkOAuth1, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkOAuth1_Generate(long paramLong, CkOAuth1 paramCkOAuth1);
/*       */   
/*       */   public static final native boolean CkOAuth1_GenNonce(long paramLong, CkOAuth1 paramCkOAuth1, int paramInt);
/*       */   
/*       */   public static final native boolean CkOAuth1_GenTimestamp(long paramLong, CkOAuth1 paramCkOAuth1);
/*       */   
/*       */   public static final native boolean CkOAuth1_RemoveParam(long paramLong, CkOAuth1 paramCkOAuth1, String paramString);
/*       */   
/*       */   public static final native boolean CkOAuth1_SaveLastError(long paramLong, CkOAuth1 paramCkOAuth1, String paramString);
/*       */   
/*       */   public static final native boolean CkOAuth1_SetRsaKey(long paramLong1, CkOAuth1 paramCkOAuth1, long paramLong2, CkPrivateKey paramCkPrivateKey);
/*       */   
/*       */   public static final native long new_CkJsonObject();
/*       */   
/*       */   public static final native void delete_CkJsonObject(long paramLong);
/*       */   
/*       */   public static final native void CkJsonObject_LastErrorXml(long paramLong1, CkJsonObject paramCkJsonObject, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkJsonObject_LastErrorHtml(long paramLong1, CkJsonObject paramCkJsonObject, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkJsonObject_LastErrorText(long paramLong1, CkJsonObject paramCkJsonObject, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkJsonObject_get_DebugLogFilePath(long paramLong1, CkJsonObject paramCkJsonObject, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkJsonObject_debugLogFilePath(long paramLong, CkJsonObject paramCkJsonObject);
/*       */   
/*       */   public static final native void CkJsonObject_put_DebugLogFilePath(long paramLong, CkJsonObject paramCkJsonObject, String paramString);
/*       */   
/*       */   public static final native void CkJsonObject_get_DelimiterChar(long paramLong1, CkJsonObject paramCkJsonObject, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkJsonObject_delimiterChar(long paramLong, CkJsonObject paramCkJsonObject);
/*       */   
/*       */   public static final native void CkJsonObject_put_DelimiterChar(long paramLong, CkJsonObject paramCkJsonObject, String paramString);
/*       */   
/*       */   public static final native boolean CkJsonObject_get_EmitCompact(long paramLong, CkJsonObject paramCkJsonObject);
/*       */   
/*       */   public static final native void CkJsonObject_put_EmitCompact(long paramLong, CkJsonObject paramCkJsonObject, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkJsonObject_get_EmitCrLf(long paramLong, CkJsonObject paramCkJsonObject);
/*       */   
/*       */   public static final native void CkJsonObject_put_EmitCrLf(long paramLong, CkJsonObject paramCkJsonObject, boolean paramBoolean);
/*       */   
/*       */   public static final native int CkJsonObject_get_I(long paramLong, CkJsonObject paramCkJsonObject);
/*       */   
/*       */   public static final native void CkJsonObject_put_I(long paramLong, CkJsonObject paramCkJsonObject, int paramInt);
/*       */   
/*       */   public static final native int CkJsonObject_get_J(long paramLong, CkJsonObject paramCkJsonObject);
/*       */   
/*       */   public static final native void CkJsonObject_put_J(long paramLong, CkJsonObject paramCkJsonObject, int paramInt);
/*       */   
/*       */   public static final native int CkJsonObject_get_K(long paramLong, CkJsonObject paramCkJsonObject);
/*       */   
/*       */   public static final native void CkJsonObject_put_K(long paramLong, CkJsonObject paramCkJsonObject, int paramInt);
/*       */   
/*       */   public static final native void CkJsonObject_get_LastErrorHtml(long paramLong1, CkJsonObject paramCkJsonObject, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkJsonObject_lastErrorHtml(long paramLong, CkJsonObject paramCkJsonObject);
/*       */   
/*       */   public static final native void CkJsonObject_get_LastErrorText(long paramLong1, CkJsonObject paramCkJsonObject, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkJsonObject_lastErrorText(long paramLong, CkJsonObject paramCkJsonObject);
/*       */   
/*       */   public static final native void CkJsonObject_get_LastErrorXml(long paramLong1, CkJsonObject paramCkJsonObject, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkJsonObject_lastErrorXml(long paramLong, CkJsonObject paramCkJsonObject);
/*       */   
/*       */   public static final native boolean CkJsonObject_get_LastMethodSuccess(long paramLong, CkJsonObject paramCkJsonObject);
/*       */   
/*       */   public static final native void CkJsonObject_put_LastMethodSuccess(long paramLong, CkJsonObject paramCkJsonObject, boolean paramBoolean);
/*       */   
/*       */   public static final native int CkJsonObject_get_Size(long paramLong, CkJsonObject paramCkJsonObject);
/*       */   
/*       */   public static final native boolean CkJsonObject_get_VerboseLogging(long paramLong, CkJsonObject paramCkJsonObject);
/*       */   
/*       */   public static final native void CkJsonObject_put_VerboseLogging(long paramLong, CkJsonObject paramCkJsonObject, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkJsonObject_get_Version(long paramLong1, CkJsonObject paramCkJsonObject, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkJsonObject_version(long paramLong, CkJsonObject paramCkJsonObject);
/*       */   
/*       */   public static final native boolean CkJsonObject_AddArrayAt(long paramLong, CkJsonObject paramCkJsonObject, int paramInt, String paramString);
/*       */   
/*       */   public static final native boolean CkJsonObject_AddBoolAt(long paramLong, CkJsonObject paramCkJsonObject, int paramInt, String paramString, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkJsonObject_AddIntAt(long paramLong, CkJsonObject paramCkJsonObject, int paramInt1, String paramString, int paramInt2);
/*       */   
/*       */   public static final native boolean CkJsonObject_AddNullAt(long paramLong, CkJsonObject paramCkJsonObject, int paramInt, String paramString);
/*       */   
/*       */   public static final native boolean CkJsonObject_AddNumberAt(long paramLong, CkJsonObject paramCkJsonObject, int paramInt, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkJsonObject_AddObjectAt(long paramLong, CkJsonObject paramCkJsonObject, int paramInt, String paramString);
/*       */   
/*       */   public static final native boolean CkJsonObject_AddStringAt(long paramLong, CkJsonObject paramCkJsonObject, int paramInt, String paramString1, String paramString2);
/*       */   
/*       */   public static final native long CkJsonObject_AppendArray(long paramLong, CkJsonObject paramCkJsonObject, String paramString);
/*       */   
/*       */   public static final native boolean CkJsonObject_AppendBool(long paramLong, CkJsonObject paramCkJsonObject, String paramString, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkJsonObject_AppendInt(long paramLong, CkJsonObject paramCkJsonObject, String paramString, int paramInt);
/*       */   
/*       */   public static final native long CkJsonObject_AppendObject(long paramLong, CkJsonObject paramCkJsonObject, String paramString);
/*       */   
/*       */   public static final native boolean CkJsonObject_AppendString(long paramLong, CkJsonObject paramCkJsonObject, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkJsonObject_AppendStringArray(long paramLong1, CkJsonObject paramCkJsonObject, String paramString, long paramLong2, CkStringTable paramCkStringTable);
/*       */   
/*       */   public static final native long CkJsonObject_ArrayAt(long paramLong, CkJsonObject paramCkJsonObject, int paramInt);
/*       */   
/*       */   public static final native long CkJsonObject_ArrayOf(long paramLong, CkJsonObject paramCkJsonObject, String paramString);
/*       */   
/*       */   public static final native boolean CkJsonObject_BoolAt(long paramLong, CkJsonObject paramCkJsonObject, int paramInt);
/*       */   
/*       */   public static final native boolean CkJsonObject_BoolOf(long paramLong, CkJsonObject paramCkJsonObject, String paramString);
/*       */   
/*       */   public static final native boolean CkJsonObject_BytesOf(long paramLong1, CkJsonObject paramCkJsonObject, String paramString1, String paramString2, long paramLong2, CkBinData paramCkBinData);
/*       */   
/*       */   public static final native long CkJsonObject_Clone(long paramLong, CkJsonObject paramCkJsonObject);
/*       */   
/*       */   public static final native boolean CkJsonObject_DateOf(long paramLong1, CkJsonObject paramCkJsonObject, String paramString, long paramLong2, CkDateTime paramCkDateTime);
/*       */   
/*       */   public static final native boolean CkJsonObject_Delete(long paramLong, CkJsonObject paramCkJsonObject, String paramString);
/*       */   
/*       */   public static final native boolean CkJsonObject_DeleteAt(long paramLong, CkJsonObject paramCkJsonObject, int paramInt);
/*       */   
/*       */   public static final native boolean CkJsonObject_DtOf(long paramLong1, CkJsonObject paramCkJsonObject, String paramString, boolean paramBoolean, long paramLong2, CkDtObj paramCkDtObj);
/*       */   
/*       */   public static final native boolean CkJsonObject_Emit(long paramLong1, CkJsonObject paramCkJsonObject, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkJsonObject_emit(long paramLong, CkJsonObject paramCkJsonObject);
/*       */   
/*       */   public static final native boolean CkJsonObject_EmitSb(long paramLong1, CkJsonObject paramCkJsonObject, long paramLong2, CkStringBuilder paramCkStringBuilder);
/*       */   
/*       */   public static final native boolean CkJsonObject_EmitWithSubs(long paramLong1, CkJsonObject paramCkJsonObject, long paramLong2, CkHashtable paramCkHashtable, boolean paramBoolean, long paramLong3, CkString paramCkString);
/*       */   
/*       */   public static final native String CkJsonObject_emitWithSubs(long paramLong1, CkJsonObject paramCkJsonObject, long paramLong2, CkHashtable paramCkHashtable, boolean paramBoolean);
/*       */   
/*       */   public static final native long CkJsonObject_FindObjectWithMember(long paramLong, CkJsonObject paramCkJsonObject, String paramString);
/*       */   
/*       */   public static final native long CkJsonObject_FindRecord(long paramLong, CkJsonObject paramCkJsonObject, String paramString1, String paramString2, String paramString3, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkJsonObject_FindRecordString(long paramLong1, CkJsonObject paramCkJsonObject, String paramString1, String paramString2, String paramString3, boolean paramBoolean, String paramString4, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkJsonObject_findRecordString(long paramLong, CkJsonObject paramCkJsonObject, String paramString1, String paramString2, String paramString3, boolean paramBoolean, String paramString4);
/*       */   
/*       */   public static final native boolean CkJsonObject_FirebaseApplyEvent(long paramLong, CkJsonObject paramCkJsonObject, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkJsonObject_FirebasePatch(long paramLong, CkJsonObject paramCkJsonObject, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkJsonObject_FirebasePut(long paramLong, CkJsonObject paramCkJsonObject, String paramString1, String paramString2);
/*       */   
/*       */   public static final native long CkJsonObject_GetDocRoot(long paramLong, CkJsonObject paramCkJsonObject);
/*       */   
/*       */   public static final native boolean CkJsonObject_HasMember(long paramLong, CkJsonObject paramCkJsonObject, String paramString);
/*       */   
/*       */   public static final native int CkJsonObject_IndexOf(long paramLong, CkJsonObject paramCkJsonObject, String paramString);
/*       */   
/*       */   public static final native int CkJsonObject_IntAt(long paramLong, CkJsonObject paramCkJsonObject, int paramInt);
/*       */   
/*       */   public static final native int CkJsonObject_IntOf(long paramLong, CkJsonObject paramCkJsonObject, String paramString);
/*       */   
/*       */   public static final native boolean CkJsonObject_IsNullAt(long paramLong, CkJsonObject paramCkJsonObject, int paramInt);
/*       */   
/*       */   public static final native boolean CkJsonObject_IsNullOf(long paramLong, CkJsonObject paramCkJsonObject, String paramString);
/*       */   
/*       */   public static final native int CkJsonObject_JsonTypeOf(long paramLong, CkJsonObject paramCkJsonObject, String paramString);
/*       */   
/*       */   public static final native boolean CkJsonObject_Load(long paramLong, CkJsonObject paramCkJsonObject, String paramString);
/*       */   
/*       */   public static final native boolean CkJsonObject_LoadFile(long paramLong, CkJsonObject paramCkJsonObject, String paramString);
/*       */   
/*       */   public static final native boolean CkJsonObject_LoadPredefined(long paramLong, CkJsonObject paramCkJsonObject, String paramString);
/*       */   
/*       */   public static final native boolean CkJsonObject_LoadSb(long paramLong1, CkJsonObject paramCkJsonObject, long paramLong2, CkStringBuilder paramCkStringBuilder);
/*       */   
/*       */   public static final native boolean CkJsonObject_NameAt(long paramLong1, CkJsonObject paramCkJsonObject, int paramInt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkJsonObject_nameAt(long paramLong, CkJsonObject paramCkJsonObject, int paramInt);
/*       */   
/*       */   public static final native long CkJsonObject_ObjectAt(long paramLong, CkJsonObject paramCkJsonObject, int paramInt);
/*       */   
/*       */   public static final native long CkJsonObject_ObjectOf(long paramLong, CkJsonObject paramCkJsonObject, String paramString);
/*       */   
/*       */   public static final native boolean CkJsonObject_Predefine(long paramLong, CkJsonObject paramCkJsonObject, String paramString);
/*       */   
/*       */   public static final native boolean CkJsonObject_Rename(long paramLong, CkJsonObject paramCkJsonObject, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkJsonObject_RenameAt(long paramLong, CkJsonObject paramCkJsonObject, int paramInt, String paramString);
/*       */   
/*       */   public static final native boolean CkJsonObject_SaveLastError(long paramLong, CkJsonObject paramCkJsonObject, String paramString);
/*       */   
/*       */   public static final native boolean CkJsonObject_SetBoolAt(long paramLong, CkJsonObject paramCkJsonObject, int paramInt, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkJsonObject_SetBoolOf(long paramLong, CkJsonObject paramCkJsonObject, String paramString, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkJsonObject_SetIntAt(long paramLong, CkJsonObject paramCkJsonObject, int paramInt1, int paramInt2);
/*       */   
/*       */   public static final native boolean CkJsonObject_SetIntOf(long paramLong, CkJsonObject paramCkJsonObject, String paramString, int paramInt);
/*       */   
/*       */   public static final native boolean CkJsonObject_SetNullAt(long paramLong, CkJsonObject paramCkJsonObject, int paramInt);
/*       */   
/*       */   public static final native boolean CkJsonObject_SetNullOf(long paramLong, CkJsonObject paramCkJsonObject, String paramString);
/*       */   
/*       */   public static final native boolean CkJsonObject_SetNumberAt(long paramLong, CkJsonObject paramCkJsonObject, int paramInt, String paramString);
/*       */   
/*       */   public static final native boolean CkJsonObject_SetNumberOf(long paramLong, CkJsonObject paramCkJsonObject, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkJsonObject_SetStringAt(long paramLong, CkJsonObject paramCkJsonObject, int paramInt, String paramString);
/*       */   
/*       */   public static final native boolean CkJsonObject_SetStringOf(long paramLong, CkJsonObject paramCkJsonObject, String paramString1, String paramString2);
/*       */   
/*       */   public static final native int CkJsonObject_SizeOfArray(long paramLong, CkJsonObject paramCkJsonObject, String paramString);
/*       */   
/*       */   public static final native boolean CkJsonObject_StringAt(long paramLong1, CkJsonObject paramCkJsonObject, int paramInt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkJsonObject_stringAt(long paramLong, CkJsonObject paramCkJsonObject, int paramInt);
/*       */   
/*       */   public static final native boolean CkJsonObject_StringOf(long paramLong1, CkJsonObject paramCkJsonObject, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkJsonObject_stringOf(long paramLong, CkJsonObject paramCkJsonObject, String paramString);
/*       */   
/*       */   public static final native boolean CkJsonObject_StringOfSb(long paramLong1, CkJsonObject paramCkJsonObject, String paramString, long paramLong2, CkStringBuilder paramCkStringBuilder);
/*       */   
/*       */   public static final native int CkJsonObject_TypeAt(long paramLong, CkJsonObject paramCkJsonObject, int paramInt);
/*       */   
/*       */   public static final native boolean CkJsonObject_UpdateBd(long paramLong1, CkJsonObject paramCkJsonObject, String paramString1, String paramString2, long paramLong2, CkBinData paramCkBinData);
/*       */   
/*       */   public static final native boolean CkJsonObject_UpdateBool(long paramLong, CkJsonObject paramCkJsonObject, String paramString, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkJsonObject_UpdateInt(long paramLong, CkJsonObject paramCkJsonObject, String paramString, int paramInt);
/*       */   
/*       */   public static final native boolean CkJsonObject_UpdateNewArray(long paramLong, CkJsonObject paramCkJsonObject, String paramString);
/*       */   
/*       */   public static final native boolean CkJsonObject_UpdateNewObject(long paramLong, CkJsonObject paramCkJsonObject, String paramString);
/*       */   
/*       */   public static final native boolean CkJsonObject_UpdateNull(long paramLong, CkJsonObject paramCkJsonObject, String paramString);
/*       */   
/*       */   public static final native boolean CkJsonObject_UpdateNumber(long paramLong, CkJsonObject paramCkJsonObject, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkJsonObject_UpdateSb(long paramLong1, CkJsonObject paramCkJsonObject, String paramString, long paramLong2, CkStringBuilder paramCkStringBuilder);
/*       */   
/*       */   public static final native boolean CkJsonObject_UpdateString(long paramLong, CkJsonObject paramCkJsonObject, String paramString1, String paramString2);
/*       */   
/*       */   public static final native long new_CkJsonArray();
/*       */   
/*       */   public static final native void delete_CkJsonArray(long paramLong);
/*       */   
/*       */   public static final native void CkJsonArray_LastErrorXml(long paramLong1, CkJsonArray paramCkJsonArray, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkJsonArray_LastErrorHtml(long paramLong1, CkJsonArray paramCkJsonArray, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkJsonArray_LastErrorText(long paramLong1, CkJsonArray paramCkJsonArray, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkJsonArray_get_DebugLogFilePath(long paramLong1, CkJsonArray paramCkJsonArray, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkJsonArray_debugLogFilePath(long paramLong, CkJsonArray paramCkJsonArray);
/*       */   
/*       */   public static final native void CkJsonArray_put_DebugLogFilePath(long paramLong, CkJsonArray paramCkJsonArray, String paramString);
/*       */   
/*       */   public static final native boolean CkJsonArray_get_EmitCompact(long paramLong, CkJsonArray paramCkJsonArray);
/*       */   
/*       */   public static final native void CkJsonArray_put_EmitCompact(long paramLong, CkJsonArray paramCkJsonArray, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkJsonArray_get_EmitCrlf(long paramLong, CkJsonArray paramCkJsonArray);
/*       */   
/*       */   public static final native void CkJsonArray_put_EmitCrlf(long paramLong, CkJsonArray paramCkJsonArray, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkJsonArray_get_LastErrorHtml(long paramLong1, CkJsonArray paramCkJsonArray, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkJsonArray_lastErrorHtml(long paramLong, CkJsonArray paramCkJsonArray);
/*       */   
/*       */   public static final native void CkJsonArray_get_LastErrorText(long paramLong1, CkJsonArray paramCkJsonArray, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkJsonArray_lastErrorText(long paramLong, CkJsonArray paramCkJsonArray);
/*       */   
/*       */   public static final native void CkJsonArray_get_LastErrorXml(long paramLong1, CkJsonArray paramCkJsonArray, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkJsonArray_lastErrorXml(long paramLong, CkJsonArray paramCkJsonArray);
/*       */   
/*       */   public static final native boolean CkJsonArray_get_LastMethodSuccess(long paramLong, CkJsonArray paramCkJsonArray);
/*       */   
/*       */   public static final native void CkJsonArray_put_LastMethodSuccess(long paramLong, CkJsonArray paramCkJsonArray, boolean paramBoolean);
/*       */   
/*       */   public static final native int CkJsonArray_get_Size(long paramLong, CkJsonArray paramCkJsonArray);
/*       */   
/*       */   public static final native boolean CkJsonArray_get_VerboseLogging(long paramLong, CkJsonArray paramCkJsonArray);
/*       */   
/*       */   public static final native void CkJsonArray_put_VerboseLogging(long paramLong, CkJsonArray paramCkJsonArray, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkJsonArray_get_Version(long paramLong1, CkJsonArray paramCkJsonArray, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkJsonArray_version(long paramLong, CkJsonArray paramCkJsonArray);
/*       */   
/*       */   public static final native boolean CkJsonArray_AddArrayAt(long paramLong, CkJsonArray paramCkJsonArray, int paramInt);
/*       */   
/*       */   public static final native boolean CkJsonArray_AddBoolAt(long paramLong, CkJsonArray paramCkJsonArray, int paramInt, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkJsonArray_AddIntAt(long paramLong, CkJsonArray paramCkJsonArray, int paramInt1, int paramInt2);
/*       */   
/*       */   public static final native boolean CkJsonArray_AddNullAt(long paramLong, CkJsonArray paramCkJsonArray, int paramInt);
/*       */   
/*       */   public static final native boolean CkJsonArray_AddNumberAt(long paramLong, CkJsonArray paramCkJsonArray, int paramInt, String paramString);
/*       */   
/*       */   public static final native boolean CkJsonArray_AddObjectAt(long paramLong, CkJsonArray paramCkJsonArray, int paramInt);
/*       */   
/*       */   public static final native boolean CkJsonArray_AddStringAt(long paramLong, CkJsonArray paramCkJsonArray, int paramInt, String paramString);
/*       */   
/*       */   public static final native long CkJsonArray_ArrayAt(long paramLong, CkJsonArray paramCkJsonArray, int paramInt);
/*       */   
/*       */   public static final native boolean CkJsonArray_BoolAt(long paramLong, CkJsonArray paramCkJsonArray, int paramInt);
/*       */   
/*       */   public static final native boolean CkJsonArray_DateAt(long paramLong1, CkJsonArray paramCkJsonArray, int paramInt, long paramLong2, CkDateTime paramCkDateTime);
/*       */   
/*       */   public static final native boolean CkJsonArray_DeleteAt(long paramLong, CkJsonArray paramCkJsonArray, int paramInt);
/*       */   
/*       */   public static final native boolean CkJsonArray_DtAt(long paramLong1, CkJsonArray paramCkJsonArray, int paramInt, boolean paramBoolean, long paramLong2, CkDtObj paramCkDtObj);
/*       */   
/*       */   public static final native boolean CkJsonArray_Emit(long paramLong1, CkJsonArray paramCkJsonArray, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkJsonArray_emit(long paramLong, CkJsonArray paramCkJsonArray);
/*       */   
/*       */   public static final native boolean CkJsonArray_EmitSb(long paramLong1, CkJsonArray paramCkJsonArray, long paramLong2, CkStringBuilder paramCkStringBuilder);
/*       */   
/*       */   public static final native int CkJsonArray_FindObject(long paramLong, CkJsonArray paramCkJsonArray, String paramString1, String paramString2, boolean paramBoolean);
/*       */   
/*       */   public static final native int CkJsonArray_FindString(long paramLong, CkJsonArray paramCkJsonArray, String paramString, boolean paramBoolean);
/*       */   
/*       */   public static final native int CkJsonArray_IntAt(long paramLong, CkJsonArray paramCkJsonArray, int paramInt);
/*       */   
/*       */   public static final native boolean CkJsonArray_IsNullAt(long paramLong, CkJsonArray paramCkJsonArray, int paramInt);
/*       */   
/*       */   public static final native boolean CkJsonArray_Load(long paramLong, CkJsonArray paramCkJsonArray, String paramString);
/*       */   
/*       */   public static final native boolean CkJsonArray_LoadSb(long paramLong1, CkJsonArray paramCkJsonArray, long paramLong2, CkStringBuilder paramCkStringBuilder);
/*       */   
/*       */   public static final native long CkJsonArray_ObjectAt(long paramLong, CkJsonArray paramCkJsonArray, int paramInt);
/*       */   
/*       */   public static final native boolean CkJsonArray_SaveLastError(long paramLong, CkJsonArray paramCkJsonArray, String paramString);
/*       */   
/*       */   public static final native boolean CkJsonArray_SetBoolAt(long paramLong, CkJsonArray paramCkJsonArray, int paramInt, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkJsonArray_SetIntAt(long paramLong, CkJsonArray paramCkJsonArray, int paramInt1, int paramInt2);
/*       */   
/*       */   public static final native boolean CkJsonArray_SetNullAt(long paramLong, CkJsonArray paramCkJsonArray, int paramInt);
/*       */   
/*       */   public static final native boolean CkJsonArray_SetNumberAt(long paramLong, CkJsonArray paramCkJsonArray, int paramInt, String paramString);
/*       */   
/*       */   public static final native boolean CkJsonArray_SetStringAt(long paramLong, CkJsonArray paramCkJsonArray, int paramInt, String paramString);
/*       */   
/*       */   public static final native boolean CkJsonArray_StringAt(long paramLong1, CkJsonArray paramCkJsonArray, int paramInt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkJsonArray_stringAt(long paramLong, CkJsonArray paramCkJsonArray, int paramInt);
/*       */   
/*       */   public static final native int CkJsonArray_TypeAt(long paramLong, CkJsonArray paramCkJsonArray, int paramInt);
/*       */   
/*       */   public static final native long new_CkStream();
/*       */   
/*       */   public static final native void delete_CkStream(long paramLong);
/*       */   
/*       */   public static final native void CkStream_LastErrorXml(long paramLong1, CkStream paramCkStream, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkStream_LastErrorHtml(long paramLong1, CkStream paramCkStream, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkStream_LastErrorText(long paramLong1, CkStream paramCkStream, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkStream_put_EventCallbackObject(long paramLong1, CkStream paramCkStream, long paramLong2, CkBaseProgress paramCkBaseProgress);
/*       */   
/*       */   public static final native boolean CkStream_get_AbortCurrent(long paramLong, CkStream paramCkStream);
/*       */   
/*       */   public static final native void CkStream_put_AbortCurrent(long paramLong, CkStream paramCkStream, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkStream_get_CanRead(long paramLong, CkStream paramCkStream);
/*       */   
/*       */   public static final native boolean CkStream_get_CanWrite(long paramLong, CkStream paramCkStream);
/*       */   
/*       */   public static final native boolean CkStream_get_DataAvailable(long paramLong, CkStream paramCkStream);
/*       */   
/*       */   public static final native void CkStream_get_DebugLogFilePath(long paramLong1, CkStream paramCkStream, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkStream_debugLogFilePath(long paramLong, CkStream paramCkStream);
/*       */   
/*       */   public static final native void CkStream_put_DebugLogFilePath(long paramLong, CkStream paramCkStream, String paramString);
/*       */   
/*       */   public static final native int CkStream_get_DefaultChunkSize(long paramLong, CkStream paramCkStream);
/*       */   
/*       */   public static final native void CkStream_put_DefaultChunkSize(long paramLong, CkStream paramCkStream, int paramInt);
/*       */   
/*       */   public static final native boolean CkStream_get_EndOfStream(long paramLong, CkStream paramCkStream);
/*       */   
/*       */   public static final native boolean CkStream_get_IsWriteClosed(long paramLong, CkStream paramCkStream);
/*       */   
/*       */   public static final native void CkStream_get_LastErrorHtml(long paramLong1, CkStream paramCkStream, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkStream_lastErrorHtml(long paramLong, CkStream paramCkStream);
/*       */   
/*       */   public static final native void CkStream_get_LastErrorText(long paramLong1, CkStream paramCkStream, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkStream_lastErrorText(long paramLong, CkStream paramCkStream);
/*       */   
/*       */   public static final native void CkStream_get_LastErrorXml(long paramLong1, CkStream paramCkStream, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkStream_lastErrorXml(long paramLong, CkStream paramCkStream);
/*       */   
/*       */   public static final native boolean CkStream_get_LastMethodSuccess(long paramLong, CkStream paramCkStream);
/*       */   
/*       */   public static final native void CkStream_put_LastMethodSuccess(long paramLong, CkStream paramCkStream, boolean paramBoolean);
/*       */   
/*       */   public static final native int CkStream_get_Length32(long paramLong, CkStream paramCkStream);
/*       */   
/*       */   public static final native void CkStream_put_Length32(long paramLong, CkStream paramCkStream, int paramInt);
/*       */   
/*       */   public static final native int CkStream_get_ReadFailReason(long paramLong, CkStream paramCkStream);
/*       */   
/*       */   public static final native int CkStream_get_ReadTimeoutMs(long paramLong, CkStream paramCkStream);
/*       */   
/*       */   public static final native void CkStream_put_ReadTimeoutMs(long paramLong, CkStream paramCkStream, int paramInt);
/*       */   
/*       */   public static final native void CkStream_get_SinkFile(long paramLong1, CkStream paramCkStream, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkStream_sinkFile(long paramLong, CkStream paramCkStream);
/*       */   
/*       */   public static final native void CkStream_put_SinkFile(long paramLong, CkStream paramCkStream, String paramString);
/*       */   
/*       */   public static final native void CkStream_get_SourceFile(long paramLong1, CkStream paramCkStream, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkStream_sourceFile(long paramLong, CkStream paramCkStream);
/*       */   
/*       */   public static final native void CkStream_put_SourceFile(long paramLong, CkStream paramCkStream, String paramString);
/*       */   
/*       */   public static final native int CkStream_get_SourceFilePart(long paramLong, CkStream paramCkStream);
/*       */   
/*       */   public static final native void CkStream_put_SourceFilePart(long paramLong, CkStream paramCkStream, int paramInt);
/*       */   
/*       */   public static final native int CkStream_get_SourceFilePartSize(long paramLong, CkStream paramCkStream);
/*       */   
/*       */   public static final native void CkStream_put_SourceFilePartSize(long paramLong, CkStream paramCkStream, int paramInt);
/*       */   
/*       */   public static final native boolean CkStream_get_StringBom(long paramLong, CkStream paramCkStream);
/*       */   
/*       */   public static final native void CkStream_put_StringBom(long paramLong, CkStream paramCkStream, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkStream_get_StringCharset(long paramLong1, CkStream paramCkStream, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkStream_stringCharset(long paramLong, CkStream paramCkStream);
/*       */   
/*       */   public static final native void CkStream_put_StringCharset(long paramLong, CkStream paramCkStream, String paramString);
/*       */   
/*       */   public static final native boolean CkStream_get_VerboseLogging(long paramLong, CkStream paramCkStream);
/*       */   
/*       */   public static final native void CkStream_put_VerboseLogging(long paramLong, CkStream paramCkStream, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkStream_get_Version(long paramLong1, CkStream paramCkStream, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkStream_version(long paramLong, CkStream paramCkStream);
/*       */   
/*       */   public static final native int CkStream_get_WriteFailReason(long paramLong, CkStream paramCkStream);
/*       */   
/*       */   public static final native int CkStream_get_WriteTimeoutMs(long paramLong, CkStream paramCkStream);
/*       */   
/*       */   public static final native void CkStream_put_WriteTimeoutMs(long paramLong, CkStream paramCkStream, int paramInt);
/*       */   
/*       */   public static final native boolean CkStream_ReadBd(long paramLong1, CkStream paramCkStream, long paramLong2, CkBinData paramCkBinData);
/*       */   
/*       */   public static final native long CkStream_ReadBdAsync(long paramLong1, CkStream paramCkStream, long paramLong2, CkBinData paramCkBinData);
/*       */   
/*       */   public static final native boolean CkStream_ReadBytes(long paramLong1, CkStream paramCkStream, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native long CkStream_ReadBytesAsync(long paramLong, CkStream paramCkStream);
/*       */   
/*       */   public static final native boolean CkStream_ReadBytesENC(long paramLong1, CkStream paramCkStream, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkStream_readBytesENC(long paramLong, CkStream paramCkStream, String paramString);
/*       */   
/*       */   public static final native long CkStream_ReadBytesENCAsync(long paramLong, CkStream paramCkStream, String paramString);
/*       */   
/*       */   public static final native boolean CkStream_ReadNBytes(long paramLong1, CkStream paramCkStream, int paramInt, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native long CkStream_ReadNBytesAsync(long paramLong, CkStream paramCkStream, int paramInt);
/*       */   
/*       */   public static final native boolean CkStream_ReadNBytesENC(long paramLong1, CkStream paramCkStream, int paramInt, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkStream_readNBytesENC(long paramLong, CkStream paramCkStream, int paramInt, String paramString);
/*       */   
/*       */   public static final native long CkStream_ReadNBytesENCAsync(long paramLong, CkStream paramCkStream, int paramInt, String paramString);
/*       */   
/*       */   public static final native boolean CkStream_ReadSb(long paramLong1, CkStream paramCkStream, long paramLong2, CkStringBuilder paramCkStringBuilder);
/*       */   
/*       */   public static final native long CkStream_ReadSbAsync(long paramLong1, CkStream paramCkStream, long paramLong2, CkStringBuilder paramCkStringBuilder);
/*       */   
/*       */   public static final native boolean CkStream_ReadString(long paramLong1, CkStream paramCkStream, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkStream_readString(long paramLong, CkStream paramCkStream);
/*       */   
/*       */   public static final native long CkStream_ReadStringAsync(long paramLong, CkStream paramCkStream);
/*       */   
/*       */   public static final native boolean CkStream_ReadToCRLF(long paramLong1, CkStream paramCkStream, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkStream_readToCRLF(long paramLong, CkStream paramCkStream);
/*       */   
/*       */   public static final native long CkStream_ReadToCRLFAsync(long paramLong, CkStream paramCkStream);
/*       */   
/*       */   public static final native boolean CkStream_ReadUntilMatch(long paramLong1, CkStream paramCkStream, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkStream_readUntilMatch(long paramLong, CkStream paramCkStream, String paramString);
/*       */   
/*       */   public static final native long CkStream_ReadUntilMatchAsync(long paramLong, CkStream paramCkStream, String paramString);
/*       */   
/*       */   public static final native void CkStream_Reset(long paramLong, CkStream paramCkStream);
/*       */   
/*       */   public static final native boolean CkStream_RunStream(long paramLong, CkStream paramCkStream);
/*       */   
/*       */   public static final native long CkStream_RunStreamAsync(long paramLong, CkStream paramCkStream);
/*       */   
/*       */   public static final native boolean CkStream_SaveLastError(long paramLong, CkStream paramCkStream, String paramString);
/*       */   
/*       */   public static final native boolean CkStream_SetSinkStream(long paramLong1, CkStream paramCkStream1, long paramLong2, CkStream paramCkStream2);
/*       */   
/*       */   public static final native boolean CkStream_SetSourceBytes(long paramLong1, CkStream paramCkStream, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkStream_SetSourceStream(long paramLong1, CkStream paramCkStream1, long paramLong2, CkStream paramCkStream2);
/*       */   
/*       */   public static final native boolean CkStream_SetSourceString(long paramLong, CkStream paramCkStream, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkStream_WriteBd(long paramLong1, CkStream paramCkStream, long paramLong2, CkBinData paramCkBinData);
/*       */   
/*       */   public static final native long CkStream_WriteBdAsync(long paramLong1, CkStream paramCkStream, long paramLong2, CkBinData paramCkBinData);
/*       */   
/*       */   public static final native boolean CkStream_WriteByte(long paramLong, CkStream paramCkStream, int paramInt);
/*       */   
/*       */   public static final native long CkStream_WriteByteAsync(long paramLong, CkStream paramCkStream, int paramInt);
/*       */   
/*       */   public static final native boolean CkStream_WriteBytes(long paramLong1, CkStream paramCkStream, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native long CkStream_WriteBytesAsync(long paramLong1, CkStream paramCkStream, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkStream_WriteBytesENC(long paramLong, CkStream paramCkStream, String paramString1, String paramString2);
/*       */   
/*       */   public static final native long CkStream_WriteBytesENCAsync(long paramLong, CkStream paramCkStream, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkStream_WriteClose(long paramLong, CkStream paramCkStream);
/*       */   
/*       */   public static final native boolean CkStream_WriteSb(long paramLong1, CkStream paramCkStream, long paramLong2, CkStringBuilder paramCkStringBuilder);
/*       */   
/*       */   public static final native long CkStream_WriteSbAsync(long paramLong1, CkStream paramCkStream, long paramLong2, CkStringBuilder paramCkStringBuilder);
/*       */   
/*       */   public static final native boolean CkStream_WriteString(long paramLong, CkStream paramCkStream, String paramString);
/*       */   
/*       */   public static final native long CkStream_WriteStringAsync(long paramLong, CkStream paramCkStream, String paramString);
/*       */   
/*       */   public static final native long new_CkAuthAws();
/*       */   
/*       */   public static final native void delete_CkAuthAws(long paramLong);
/*       */   
/*       */   public static final native void CkAuthAws_LastErrorXml(long paramLong1, CkAuthAws paramCkAuthAws, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkAuthAws_LastErrorHtml(long paramLong1, CkAuthAws paramCkAuthAws, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkAuthAws_LastErrorText(long paramLong1, CkAuthAws paramCkAuthAws, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkAuthAws_get_AccessKey(long paramLong1, CkAuthAws paramCkAuthAws, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkAuthAws_accessKey(long paramLong, CkAuthAws paramCkAuthAws);
/*       */   
/*       */   public static final native void CkAuthAws_put_AccessKey(long paramLong, CkAuthAws paramCkAuthAws, String paramString);
/*       */   
/*       */   public static final native void CkAuthAws_get_CanonicalizedResourceV2(long paramLong1, CkAuthAws paramCkAuthAws, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkAuthAws_canonicalizedResourceV2(long paramLong, CkAuthAws paramCkAuthAws);
/*       */   
/*       */   public static final native void CkAuthAws_put_CanonicalizedResourceV2(long paramLong, CkAuthAws paramCkAuthAws, String paramString);
/*       */   
/*       */   public static final native void CkAuthAws_get_DebugLogFilePath(long paramLong1, CkAuthAws paramCkAuthAws, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkAuthAws_debugLogFilePath(long paramLong, CkAuthAws paramCkAuthAws);
/*       */   
/*       */   public static final native void CkAuthAws_put_DebugLogFilePath(long paramLong, CkAuthAws paramCkAuthAws, String paramString);
/*       */   
/*       */   public static final native void CkAuthAws_get_LastErrorHtml(long paramLong1, CkAuthAws paramCkAuthAws, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkAuthAws_lastErrorHtml(long paramLong, CkAuthAws paramCkAuthAws);
/*       */   
/*       */   public static final native void CkAuthAws_get_LastErrorText(long paramLong1, CkAuthAws paramCkAuthAws, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkAuthAws_lastErrorText(long paramLong, CkAuthAws paramCkAuthAws);
/*       */   
/*       */   public static final native void CkAuthAws_get_LastErrorXml(long paramLong1, CkAuthAws paramCkAuthAws, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkAuthAws_lastErrorXml(long paramLong, CkAuthAws paramCkAuthAws);
/*       */   
/*       */   public static final native boolean CkAuthAws_get_LastMethodSuccess(long paramLong, CkAuthAws paramCkAuthAws);
/*       */   
/*       */   public static final native void CkAuthAws_put_LastMethodSuccess(long paramLong, CkAuthAws paramCkAuthAws, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkAuthAws_get_PrecomputedMd5(long paramLong1, CkAuthAws paramCkAuthAws, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkAuthAws_precomputedMd5(long paramLong, CkAuthAws paramCkAuthAws);
/*       */   
/*       */   public static final native void CkAuthAws_put_PrecomputedMd5(long paramLong, CkAuthAws paramCkAuthAws, String paramString);
/*       */   
/*       */   public static final native void CkAuthAws_get_PrecomputedSha256(long paramLong1, CkAuthAws paramCkAuthAws, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkAuthAws_precomputedSha256(long paramLong, CkAuthAws paramCkAuthAws);
/*       */   
/*       */   public static final native void CkAuthAws_put_PrecomputedSha256(long paramLong, CkAuthAws paramCkAuthAws, String paramString);
/*       */   
/*       */   public static final native void CkAuthAws_get_Region(long paramLong1, CkAuthAws paramCkAuthAws, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkAuthAws_region(long paramLong, CkAuthAws paramCkAuthAws);
/*       */   
/*       */   public static final native void CkAuthAws_put_Region(long paramLong, CkAuthAws paramCkAuthAws, String paramString);
/*       */   
/*       */   public static final native void CkAuthAws_get_SecretKey(long paramLong1, CkAuthAws paramCkAuthAws, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkAuthAws_secretKey(long paramLong, CkAuthAws paramCkAuthAws);
/*       */   
/*       */   public static final native void CkAuthAws_put_SecretKey(long paramLong, CkAuthAws paramCkAuthAws, String paramString);
/*       */   
/*       */   public static final native void CkAuthAws_get_ServiceName(long paramLong1, CkAuthAws paramCkAuthAws, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkAuthAws_serviceName(long paramLong, CkAuthAws paramCkAuthAws);
/*       */   
/*       */   public static final native void CkAuthAws_put_ServiceName(long paramLong, CkAuthAws paramCkAuthAws, String paramString);
/*       */   
/*       */   public static final native int CkAuthAws_get_SignatureVersion(long paramLong, CkAuthAws paramCkAuthAws);
/*       */   
/*       */   public static final native void CkAuthAws_put_SignatureVersion(long paramLong, CkAuthAws paramCkAuthAws, int paramInt);
/*       */   
/*       */   public static final native boolean CkAuthAws_get_VerboseLogging(long paramLong, CkAuthAws paramCkAuthAws);
/*       */   
/*       */   public static final native void CkAuthAws_put_VerboseLogging(long paramLong, CkAuthAws paramCkAuthAws, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkAuthAws_get_Version(long paramLong1, CkAuthAws paramCkAuthAws, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkAuthAws_version(long paramLong, CkAuthAws paramCkAuthAws);
/*       */   
/*       */   public static final native boolean CkAuthAws_SaveLastError(long paramLong, CkAuthAws paramCkAuthAws, String paramString);
/*       */   
/*       */   public static final native long new_CkRest();
/*       */   
/*       */   public static final native void delete_CkRest(long paramLong);
/*       */   
/*       */   public static final native void CkRest_LastErrorXml(long paramLong1, CkRest paramCkRest, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkRest_LastErrorHtml(long paramLong1, CkRest paramCkRest, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkRest_LastErrorText(long paramLong1, CkRest paramCkRest, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkRest_put_EventCallbackObject(long paramLong1, CkRest paramCkRest, long paramLong2, CkBaseProgress paramCkBaseProgress);
/*       */   
/*       */   public static final native boolean CkRest_get_AllowHeaderFolding(long paramLong, CkRest paramCkRest);
/*       */   
/*       */   public static final native void CkRest_put_AllowHeaderFolding(long paramLong, CkRest paramCkRest, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkRest_get_AllowHeaderQB(long paramLong, CkRest paramCkRest);
/*       */   
/*       */   public static final native void CkRest_put_AllowHeaderQB(long paramLong, CkRest paramCkRest, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkRest_get_Authorization(long paramLong1, CkRest paramCkRest, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkRest_authorization(long paramLong, CkRest paramCkRest);
/*       */   
/*       */   public static final native void CkRest_put_Authorization(long paramLong, CkRest paramCkRest, String paramString);
/*       */   
/*       */   public static final native int CkRest_get_ConnectFailReason(long paramLong, CkRest paramCkRest);
/*       */   
/*       */   public static final native int CkRest_get_ConnectTimeoutMs(long paramLong, CkRest paramCkRest);
/*       */   
/*       */   public static final native void CkRest_put_ConnectTimeoutMs(long paramLong, CkRest paramCkRest, int paramInt);
/*       */   
/*       */   public static final native void CkRest_get_DebugLogFilePath(long paramLong1, CkRest paramCkRest, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkRest_debugLogFilePath(long paramLong, CkRest paramCkRest);
/*       */   
/*       */   public static final native void CkRest_put_DebugLogFilePath(long paramLong, CkRest paramCkRest, String paramString);
/*       */   
/*       */   public static final native int CkRest_get_HeartbeatMs(long paramLong, CkRest paramCkRest);
/*       */   
/*       */   public static final native void CkRest_put_HeartbeatMs(long paramLong, CkRest paramCkRest, int paramInt);
/*       */   
/*       */   public static final native void CkRest_get_Host(long paramLong1, CkRest paramCkRest, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkRest_host(long paramLong, CkRest paramCkRest);
/*       */   
/*       */   public static final native void CkRest_put_Host(long paramLong, CkRest paramCkRest, String paramString);
/*       */   
/*       */   public static final native int CkRest_get_IdleTimeoutMs(long paramLong, CkRest paramCkRest);
/*       */   
/*       */   public static final native void CkRest_put_IdleTimeoutMs(long paramLong, CkRest paramCkRest, int paramInt);
/*       */   
/*       */   public static final native void CkRest_get_LastErrorHtml(long paramLong1, CkRest paramCkRest, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkRest_lastErrorHtml(long paramLong, CkRest paramCkRest);
/*       */   
/*       */   public static final native void CkRest_get_LastErrorText(long paramLong1, CkRest paramCkRest, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkRest_lastErrorText(long paramLong, CkRest paramCkRest);
/*       */   
/*       */   public static final native void CkRest_get_LastErrorXml(long paramLong1, CkRest paramCkRest, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkRest_lastErrorXml(long paramLong, CkRest paramCkRest);
/*       */   
/*       */   public static final native boolean CkRest_get_LastMethodSuccess(long paramLong, CkRest paramCkRest);
/*       */   
/*       */   public static final native void CkRest_put_LastMethodSuccess(long paramLong, CkRest paramCkRest, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkRest_get_LastRequestHeader(long paramLong1, CkRest paramCkRest, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkRest_lastRequestHeader(long paramLong, CkRest paramCkRest);
/*       */   
/*       */   public static final native void CkRest_get_LastRequestStartLine(long paramLong1, CkRest paramCkRest, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkRest_lastRequestStartLine(long paramLong, CkRest paramCkRest);
/*       */   
/*       */   public static final native int CkRest_get_NumResponseHeaders(long paramLong, CkRest paramCkRest);
/*       */   
/*       */   public static final native void CkRest_get_PartSelector(long paramLong1, CkRest paramCkRest, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkRest_partSelector(long paramLong, CkRest paramCkRest);
/*       */   
/*       */   public static final native void CkRest_put_PartSelector(long paramLong, CkRest paramCkRest, String paramString);
/*       */   
/*       */   public static final native boolean CkRest_get_PercentDoneOnSend(long paramLong, CkRest paramCkRest);
/*       */   
/*       */   public static final native void CkRest_put_PercentDoneOnSend(long paramLong, CkRest paramCkRest, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkRest_get_ResponseHeader(long paramLong1, CkRest paramCkRest, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkRest_responseHeader(long paramLong, CkRest paramCkRest);
/*       */   
/*       */   public static final native int CkRest_get_ResponseStatusCode(long paramLong, CkRest paramCkRest);
/*       */   
/*       */   public static final native void CkRest_get_ResponseStatusText(long paramLong1, CkRest paramCkRest, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkRest_responseStatusText(long paramLong, CkRest paramCkRest);
/*       */   
/*       */   public static final native boolean CkRest_get_StreamNonChunked(long paramLong, CkRest paramCkRest);
/*       */   
/*       */   public static final native void CkRest_put_StreamNonChunked(long paramLong, CkRest paramCkRest, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkRest_get_VerboseLogging(long paramLong, CkRest paramCkRest);
/*       */   
/*       */   public static final native void CkRest_put_VerboseLogging(long paramLong, CkRest paramCkRest, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkRest_get_Version(long paramLong1, CkRest paramCkRest, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkRest_version(long paramLong, CkRest paramCkRest);
/*       */   
/*       */   public static final native boolean CkRest_AddHeader(long paramLong, CkRest paramCkRest, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkRest_AddMwsSignature(long paramLong, CkRest paramCkRest, String paramString1, String paramString2, String paramString3, String paramString4);
/*       */   
/*       */   public static final native boolean CkRest_AddPathParam(long paramLong, CkRest paramCkRest, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkRest_AddQueryParam(long paramLong, CkRest paramCkRest, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkRest_AddQueryParams(long paramLong, CkRest paramCkRest, String paramString);
/*       */   
/*       */   public static final native boolean CkRest_AddQueryParamSb(long paramLong1, CkRest paramCkRest, String paramString, long paramLong2, CkStringBuilder paramCkStringBuilder);
/*       */   
/*       */   public static final native boolean CkRest_ClearAllHeaders(long paramLong, CkRest paramCkRest);
/*       */   
/*       */   public static final native boolean CkRest_ClearAllParts(long paramLong, CkRest paramCkRest);
/*       */   
/*       */   public static final native boolean CkRest_ClearAllPathParams(long paramLong, CkRest paramCkRest);
/*       */   
/*       */   public static final native boolean CkRest_ClearAllQueryParams(long paramLong, CkRest paramCkRest);
/*       */   
/*       */   public static final native boolean CkRest_ClearAuth(long paramLong, CkRest paramCkRest);
/*       */   
/*       */   public static final native void CkRest_ClearResponseBodyStream(long paramLong, CkRest paramCkRest);
/*       */   
/*       */   public static final native boolean CkRest_Connect(long paramLong, CkRest paramCkRest, String paramString, int paramInt, boolean paramBoolean1, boolean paramBoolean2);
/*       */   
/*       */   public static final native long CkRest_ConnectAsync(long paramLong, CkRest paramCkRest, String paramString, int paramInt, boolean paramBoolean1, boolean paramBoolean2);
/*       */   
/*       */   public static final native boolean CkRest_Disconnect(long paramLong, CkRest paramCkRest, int paramInt);
/*       */   
/*       */   public static final native long CkRest_DisconnectAsync(long paramLong, CkRest paramCkRest, int paramInt);
/*       */   
/*       */   public static final native boolean CkRest_FullRequestBd(long paramLong1, CkRest paramCkRest, String paramString1, String paramString2, long paramLong2, CkBinData paramCkBinData, long paramLong3, CkStringBuilder paramCkStringBuilder);
/*       */   
/*       */   public static final native long CkRest_FullRequestBdAsync(long paramLong1, CkRest paramCkRest, String paramString1, String paramString2, long paramLong2, CkBinData paramCkBinData, long paramLong3, CkStringBuilder paramCkStringBuilder);
/*       */   
/*       */   public static final native boolean CkRest_FullRequestBinary(long paramLong1, CkRest paramCkRest, String paramString1, String paramString2, long paramLong2, CkByteData paramCkByteData, long paramLong3, CkString paramCkString);
/*       */   
/*       */   public static final native String CkRest_fullRequestBinary(long paramLong1, CkRest paramCkRest, String paramString1, String paramString2, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native long CkRest_FullRequestBinaryAsync(long paramLong1, CkRest paramCkRest, String paramString1, String paramString2, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkRest_FullRequestFormUrlEncoded(long paramLong1, CkRest paramCkRest, String paramString1, String paramString2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkRest_fullRequestFormUrlEncoded(long paramLong, CkRest paramCkRest, String paramString1, String paramString2);
/*       */   
/*       */   public static final native long CkRest_FullRequestFormUrlEncodedAsync(long paramLong, CkRest paramCkRest, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkRest_FullRequestMultipart(long paramLong1, CkRest paramCkRest, String paramString1, String paramString2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkRest_fullRequestMultipart(long paramLong, CkRest paramCkRest, String paramString1, String paramString2);
/*       */   
/*       */   public static final native long CkRest_FullRequestMultipartAsync(long paramLong, CkRest paramCkRest, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkRest_FullRequestNoBody(long paramLong1, CkRest paramCkRest, String paramString1, String paramString2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkRest_fullRequestNoBody(long paramLong, CkRest paramCkRest, String paramString1, String paramString2);
/*       */   
/*       */   public static final native long CkRest_FullRequestNoBodyAsync(long paramLong, CkRest paramCkRest, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkRest_FullRequestNoBodyBd(long paramLong1, CkRest paramCkRest, String paramString1, String paramString2, long paramLong2, CkBinData paramCkBinData);
/*       */   
/*       */   public static final native long CkRest_FullRequestNoBodyBdAsync(long paramLong1, CkRest paramCkRest, String paramString1, String paramString2, long paramLong2, CkBinData paramCkBinData);
/*       */   
/*       */   public static final native boolean CkRest_FullRequestNoBodySb(long paramLong1, CkRest paramCkRest, String paramString1, String paramString2, long paramLong2, CkStringBuilder paramCkStringBuilder);
/*       */   
/*       */   public static final native long CkRest_FullRequestNoBodySbAsync(long paramLong1, CkRest paramCkRest, String paramString1, String paramString2, long paramLong2, CkStringBuilder paramCkStringBuilder);
/*       */   
/*       */   public static final native boolean CkRest_FullRequestSb(long paramLong1, CkRest paramCkRest, String paramString1, String paramString2, long paramLong2, CkStringBuilder paramCkStringBuilder1, long paramLong3, CkStringBuilder paramCkStringBuilder2);
/*       */   
/*       */   public static final native long CkRest_FullRequestSbAsync(long paramLong1, CkRest paramCkRest, String paramString1, String paramString2, long paramLong2, CkStringBuilder paramCkStringBuilder1, long paramLong3, CkStringBuilder paramCkStringBuilder2);
/*       */   
/*       */   public static final native boolean CkRest_FullRequestStream(long paramLong1, CkRest paramCkRest, String paramString1, String paramString2, long paramLong2, CkStream paramCkStream, long paramLong3, CkString paramCkString);
/*       */   
/*       */   public static final native String CkRest_fullRequestStream(long paramLong1, CkRest paramCkRest, String paramString1, String paramString2, long paramLong2, CkStream paramCkStream);
/*       */   
/*       */   public static final native long CkRest_FullRequestStreamAsync(long paramLong1, CkRest paramCkRest, String paramString1, String paramString2, long paramLong2, CkStream paramCkStream);
/*       */   
/*       */   public static final native boolean CkRest_FullRequestString(long paramLong1, CkRest paramCkRest, String paramString1, String paramString2, String paramString3, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkRest_fullRequestString(long paramLong, CkRest paramCkRest, String paramString1, String paramString2, String paramString3);
/*       */   
/*       */   public static final native long CkRest_FullRequestStringAsync(long paramLong, CkRest paramCkRest, String paramString1, String paramString2, String paramString3);
/*       */   
/*       */   public static final native boolean CkRest_ReadRespBd(long paramLong1, CkRest paramCkRest, long paramLong2, CkBinData paramCkBinData);
/*       */   
/*       */   public static final native long CkRest_ReadRespBdAsync(long paramLong1, CkRest paramCkRest, long paramLong2, CkBinData paramCkBinData);
/*       */   
/*       */   public static final native boolean CkRest_ReadRespBodyBinary(long paramLong1, CkRest paramCkRest, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native long CkRest_ReadRespBodyBinaryAsync(long paramLong, CkRest paramCkRest);
/*       */   
/*       */   public static final native boolean CkRest_ReadRespBodyStream(long paramLong1, CkRest paramCkRest, long paramLong2, CkStream paramCkStream, boolean paramBoolean);
/*       */   
/*       */   public static final native long CkRest_ReadRespBodyStreamAsync(long paramLong1, CkRest paramCkRest, long paramLong2, CkStream paramCkStream, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkRest_ReadRespBodyString(long paramLong1, CkRest paramCkRest, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkRest_readRespBodyString(long paramLong, CkRest paramCkRest);
/*       */   
/*       */   public static final native long CkRest_ReadRespBodyStringAsync(long paramLong, CkRest paramCkRest);
/*       */   
/*       */   public static final native int CkRest_ReadResponseHeader(long paramLong, CkRest paramCkRest);
/*       */   
/*       */   public static final native long CkRest_ReadResponseHeaderAsync(long paramLong, CkRest paramCkRest);
/*       */   
/*       */   public static final native boolean CkRest_ReadRespSb(long paramLong1, CkRest paramCkRest, long paramLong2, CkStringBuilder paramCkStringBuilder);
/*       */   
/*       */   public static final native long CkRest_ReadRespSbAsync(long paramLong1, CkRest paramCkRest, long paramLong2, CkStringBuilder paramCkStringBuilder);
/*       */   
/*       */   public static final native long CkRest_RedirectUrl(long paramLong, CkRest paramCkRest);
/*       */   
/*       */   public static final native boolean CkRest_RemoveHeader(long paramLong, CkRest paramCkRest, String paramString);
/*       */   
/*       */   public static final native boolean CkRest_RemoveQueryParam(long paramLong, CkRest paramCkRest, String paramString);
/*       */   
/*       */   public static final native boolean CkRest_ResponseHdrByName(long paramLong1, CkRest paramCkRest, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkRest_responseHdrByName(long paramLong, CkRest paramCkRest, String paramString);
/*       */   
/*       */   public static final native boolean CkRest_ResponseHdrName(long paramLong1, CkRest paramCkRest, int paramInt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkRest_responseHdrName(long paramLong, CkRest paramCkRest, int paramInt);
/*       */   
/*       */   public static final native boolean CkRest_ResponseHdrValue(long paramLong1, CkRest paramCkRest, int paramInt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkRest_responseHdrValue(long paramLong, CkRest paramCkRest, int paramInt);
/*       */   
/*       */   public static final native boolean CkRest_SaveLastError(long paramLong, CkRest paramCkRest, String paramString);
/*       */   
/*       */   public static final native boolean CkRest_SendReqBd(long paramLong1, CkRest paramCkRest, String paramString1, String paramString2, long paramLong2, CkBinData paramCkBinData);
/*       */   
/*       */   public static final native long CkRest_SendReqBdAsync(long paramLong1, CkRest paramCkRest, String paramString1, String paramString2, long paramLong2, CkBinData paramCkBinData);
/*       */   
/*       */   public static final native boolean CkRest_SendReqBinaryBody(long paramLong1, CkRest paramCkRest, String paramString1, String paramString2, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native long CkRest_SendReqBinaryBodyAsync(long paramLong1, CkRest paramCkRest, String paramString1, String paramString2, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkRest_SendReqFormUrlEncoded(long paramLong, CkRest paramCkRest, String paramString1, String paramString2);
/*       */   
/*       */   public static final native long CkRest_SendReqFormUrlEncodedAsync(long paramLong, CkRest paramCkRest, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkRest_SendReqMultipart(long paramLong, CkRest paramCkRest, String paramString1, String paramString2);
/*       */   
/*       */   public static final native long CkRest_SendReqMultipartAsync(long paramLong, CkRest paramCkRest, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkRest_SendReqNoBody(long paramLong, CkRest paramCkRest, String paramString1, String paramString2);
/*       */   
/*       */   public static final native long CkRest_SendReqNoBodyAsync(long paramLong, CkRest paramCkRest, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkRest_SendReqSb(long paramLong1, CkRest paramCkRest, String paramString1, String paramString2, long paramLong2, CkStringBuilder paramCkStringBuilder);
/*       */   
/*       */   public static final native long CkRest_SendReqSbAsync(long paramLong1, CkRest paramCkRest, String paramString1, String paramString2, long paramLong2, CkStringBuilder paramCkStringBuilder);
/*       */   
/*       */   public static final native boolean CkRest_SendReqStreamBody(long paramLong1, CkRest paramCkRest, String paramString1, String paramString2, long paramLong2, CkStream paramCkStream);
/*       */   
/*       */   public static final native long CkRest_SendReqStreamBodyAsync(long paramLong1, CkRest paramCkRest, String paramString1, String paramString2, long paramLong2, CkStream paramCkStream);
/*       */   
/*       */   public static final native boolean CkRest_SendReqStringBody(long paramLong, CkRest paramCkRest, String paramString1, String paramString2, String paramString3);
/*       */   
/*       */   public static final native long CkRest_SendReqStringBodyAsync(long paramLong, CkRest paramCkRest, String paramString1, String paramString2, String paramString3);
/*       */   
/*       */   public static final native boolean CkRest_SetAuthAws(long paramLong1, CkRest paramCkRest, long paramLong2, CkAuthAws paramCkAuthAws);
/*       */   
/*       */   public static final native boolean CkRest_SetAuthAzureAD(long paramLong1, CkRest paramCkRest, long paramLong2, CkAuthAzureAD paramCkAuthAzureAD);
/*       */   
/*       */   public static final native boolean CkRest_SetAuthAzureSas(long paramLong1, CkRest paramCkRest, long paramLong2, CkAuthAzureSAS paramCkAuthAzureSAS);
/*       */   
/*       */   public static final native boolean CkRest_SetAuthAzureStorage(long paramLong1, CkRest paramCkRest, long paramLong2, CkAuthAzureStorage paramCkAuthAzureStorage);
/*       */   
/*       */   public static final native boolean CkRest_SetAuthBasic(long paramLong, CkRest paramCkRest, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkRest_SetAuthBasicSecure(long paramLong1, CkRest paramCkRest, long paramLong2, CkSecureString paramCkSecureString1, long paramLong3, CkSecureString paramCkSecureString2);
/*       */   
/*       */   public static final native boolean CkRest_SetAuthGoogle(long paramLong1, CkRest paramCkRest, long paramLong2, CkAuthGoogle paramCkAuthGoogle);
/*       */   
/*       */   public static final native boolean CkRest_SetAuthOAuth1(long paramLong1, CkRest paramCkRest, long paramLong2, CkOAuth1 paramCkOAuth1, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkRest_SetAuthOAuth2(long paramLong1, CkRest paramCkRest, long paramLong2, CkOAuth2 paramCkOAuth2);
/*       */   
/*       */   public static final native boolean CkRest_SetMultipartBodyBd(long paramLong1, CkRest paramCkRest, long paramLong2, CkBinData paramCkBinData);
/*       */   
/*       */   public static final native boolean CkRest_SetMultipartBodyBinary(long paramLong1, CkRest paramCkRest, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkRest_SetMultipartBodySb(long paramLong1, CkRest paramCkRest, long paramLong2, CkStringBuilder paramCkStringBuilder);
/*       */   
/*       */   public static final native boolean CkRest_SetMultipartBodyStream(long paramLong1, CkRest paramCkRest, long paramLong2, CkStream paramCkStream);
/*       */   
/*       */   public static final native boolean CkRest_SetMultipartBodyString(long paramLong, CkRest paramCkRest, String paramString);
/*       */   
/*       */   public static final native boolean CkRest_SetResponseBodyStream(long paramLong1, CkRest paramCkRest, int paramInt, boolean paramBoolean, long paramLong2, CkStream paramCkStream);
/*       */   
/*       */   public static final native boolean CkRest_UseConnection(long paramLong1, CkRest paramCkRest, long paramLong2, CkSocket paramCkSocket, boolean paramBoolean);
/*       */   
/*       */   public static final native long new_CkAuthGoogle();
/*       */   
/*       */   public static final native void delete_CkAuthGoogle(long paramLong);
/*       */   
/*       */   public static final native void CkAuthGoogle_LastErrorXml(long paramLong1, CkAuthGoogle paramCkAuthGoogle, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkAuthGoogle_LastErrorHtml(long paramLong1, CkAuthGoogle paramCkAuthGoogle, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkAuthGoogle_LastErrorText(long paramLong1, CkAuthGoogle paramCkAuthGoogle, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkAuthGoogle_put_EventCallbackObject(long paramLong1, CkAuthGoogle paramCkAuthGoogle, long paramLong2, CkBaseProgress paramCkBaseProgress);
/*       */   
/*       */   public static final native void CkAuthGoogle_get_AccessToken(long paramLong1, CkAuthGoogle paramCkAuthGoogle, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkAuthGoogle_accessToken(long paramLong, CkAuthGoogle paramCkAuthGoogle);
/*       */   
/*       */   public static final native void CkAuthGoogle_put_AccessToken(long paramLong, CkAuthGoogle paramCkAuthGoogle, String paramString);
/*       */   
/*       */   public static final native void CkAuthGoogle_get_DebugLogFilePath(long paramLong1, CkAuthGoogle paramCkAuthGoogle, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkAuthGoogle_debugLogFilePath(long paramLong, CkAuthGoogle paramCkAuthGoogle);
/*       */   
/*       */   public static final native void CkAuthGoogle_put_DebugLogFilePath(long paramLong, CkAuthGoogle paramCkAuthGoogle, String paramString);
/*       */   
/*       */   public static final native void CkAuthGoogle_get_EmailAddress(long paramLong1, CkAuthGoogle paramCkAuthGoogle, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkAuthGoogle_emailAddress(long paramLong, CkAuthGoogle paramCkAuthGoogle);
/*       */   
/*       */   public static final native void CkAuthGoogle_put_EmailAddress(long paramLong, CkAuthGoogle paramCkAuthGoogle, String paramString);
/*       */   
/*       */   public static final native int CkAuthGoogle_get_ExpireNumSeconds(long paramLong, CkAuthGoogle paramCkAuthGoogle);
/*       */   
/*       */   public static final native void CkAuthGoogle_put_ExpireNumSeconds(long paramLong, CkAuthGoogle paramCkAuthGoogle, int paramInt);
/*       */   
/*       */   public static final native void CkAuthGoogle_get_JsonKey(long paramLong1, CkAuthGoogle paramCkAuthGoogle, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkAuthGoogle_jsonKey(long paramLong, CkAuthGoogle paramCkAuthGoogle);
/*       */   
/*       */   public static final native void CkAuthGoogle_put_JsonKey(long paramLong, CkAuthGoogle paramCkAuthGoogle, String paramString);
/*       */   
/*       */   public static final native void CkAuthGoogle_get_LastErrorHtml(long paramLong1, CkAuthGoogle paramCkAuthGoogle, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkAuthGoogle_lastErrorHtml(long paramLong, CkAuthGoogle paramCkAuthGoogle);
/*       */   
/*       */   public static final native void CkAuthGoogle_get_LastErrorText(long paramLong1, CkAuthGoogle paramCkAuthGoogle, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkAuthGoogle_lastErrorText(long paramLong, CkAuthGoogle paramCkAuthGoogle);
/*       */   
/*       */   public static final native void CkAuthGoogle_get_LastErrorXml(long paramLong1, CkAuthGoogle paramCkAuthGoogle, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkAuthGoogle_lastErrorXml(long paramLong, CkAuthGoogle paramCkAuthGoogle);
/*       */   
/*       */   public static final native boolean CkAuthGoogle_get_LastMethodSuccess(long paramLong, CkAuthGoogle paramCkAuthGoogle);
/*       */   
/*       */   public static final native void CkAuthGoogle_put_LastMethodSuccess(long paramLong, CkAuthGoogle paramCkAuthGoogle, boolean paramBoolean);
/*       */   
/*       */   public static final native int CkAuthGoogle_get_NumSecondsRemaining(long paramLong, CkAuthGoogle paramCkAuthGoogle);
/*       */   
/*       */   public static final native void CkAuthGoogle_get_Scope(long paramLong1, CkAuthGoogle paramCkAuthGoogle, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkAuthGoogle_scope(long paramLong, CkAuthGoogle paramCkAuthGoogle);
/*       */   
/*       */   public static final native void CkAuthGoogle_put_Scope(long paramLong, CkAuthGoogle paramCkAuthGoogle, String paramString);
/*       */   
/*       */   public static final native void CkAuthGoogle_get_SubEmailAddress(long paramLong1, CkAuthGoogle paramCkAuthGoogle, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkAuthGoogle_subEmailAddress(long paramLong, CkAuthGoogle paramCkAuthGoogle);
/*       */   
/*       */   public static final native void CkAuthGoogle_put_SubEmailAddress(long paramLong, CkAuthGoogle paramCkAuthGoogle, String paramString);
/*       */   
/*       */   public static final native boolean CkAuthGoogle_get_Valid(long paramLong, CkAuthGoogle paramCkAuthGoogle);
/*       */   
/*       */   public static final native boolean CkAuthGoogle_get_VerboseLogging(long paramLong, CkAuthGoogle paramCkAuthGoogle);
/*       */   
/*       */   public static final native void CkAuthGoogle_put_VerboseLogging(long paramLong, CkAuthGoogle paramCkAuthGoogle, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkAuthGoogle_get_Version(long paramLong1, CkAuthGoogle paramCkAuthGoogle, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkAuthGoogle_version(long paramLong, CkAuthGoogle paramCkAuthGoogle);
/*       */   
/*       */   public static final native long CkAuthGoogle_GetP12(long paramLong, CkAuthGoogle paramCkAuthGoogle);
/*       */   
/*       */   public static final native boolean CkAuthGoogle_ObtainAccessToken(long paramLong1, CkAuthGoogle paramCkAuthGoogle, long paramLong2, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native long CkAuthGoogle_ObtainAccessTokenAsync(long paramLong1, CkAuthGoogle paramCkAuthGoogle, long paramLong2, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native boolean CkAuthGoogle_SaveLastError(long paramLong, CkAuthGoogle paramCkAuthGoogle, String paramString);
/*       */   
/*       */   public static final native boolean CkAuthGoogle_SetP12(long paramLong1, CkAuthGoogle paramCkAuthGoogle, long paramLong2, CkPfx paramCkPfx);
/*       */   
/*       */   public static final native long new_CkAuthAzureStorage();
/*       */   
/*       */   public static final native void delete_CkAuthAzureStorage(long paramLong);
/*       */   
/*       */   public static final native void CkAuthAzureStorage_LastErrorXml(long paramLong1, CkAuthAzureStorage paramCkAuthAzureStorage, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkAuthAzureStorage_LastErrorHtml(long paramLong1, CkAuthAzureStorage paramCkAuthAzureStorage, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkAuthAzureStorage_LastErrorText(long paramLong1, CkAuthAzureStorage paramCkAuthAzureStorage, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkAuthAzureStorage_get_AccessKey(long paramLong1, CkAuthAzureStorage paramCkAuthAzureStorage, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkAuthAzureStorage_accessKey(long paramLong, CkAuthAzureStorage paramCkAuthAzureStorage);
/*       */   
/*       */   public static final native void CkAuthAzureStorage_put_AccessKey(long paramLong, CkAuthAzureStorage paramCkAuthAzureStorage, String paramString);
/*       */   
/*       */   public static final native void CkAuthAzureStorage_get_Account(long paramLong1, CkAuthAzureStorage paramCkAuthAzureStorage, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkAuthAzureStorage_account(long paramLong, CkAuthAzureStorage paramCkAuthAzureStorage);
/*       */   
/*       */   public static final native void CkAuthAzureStorage_put_Account(long paramLong, CkAuthAzureStorage paramCkAuthAzureStorage, String paramString);
/*       */   
/*       */   public static final native void CkAuthAzureStorage_get_DebugLogFilePath(long paramLong1, CkAuthAzureStorage paramCkAuthAzureStorage, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkAuthAzureStorage_debugLogFilePath(long paramLong, CkAuthAzureStorage paramCkAuthAzureStorage);
/*       */   
/*       */   public static final native void CkAuthAzureStorage_put_DebugLogFilePath(long paramLong, CkAuthAzureStorage paramCkAuthAzureStorage, String paramString);
/*       */   
/*       */   public static final native void CkAuthAzureStorage_get_LastErrorHtml(long paramLong1, CkAuthAzureStorage paramCkAuthAzureStorage, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkAuthAzureStorage_lastErrorHtml(long paramLong, CkAuthAzureStorage paramCkAuthAzureStorage);
/*       */   
/*       */   public static final native void CkAuthAzureStorage_get_LastErrorText(long paramLong1, CkAuthAzureStorage paramCkAuthAzureStorage, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkAuthAzureStorage_lastErrorText(long paramLong, CkAuthAzureStorage paramCkAuthAzureStorage);
/*       */   
/*       */   public static final native void CkAuthAzureStorage_get_LastErrorXml(long paramLong1, CkAuthAzureStorage paramCkAuthAzureStorage, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkAuthAzureStorage_lastErrorXml(long paramLong, CkAuthAzureStorage paramCkAuthAzureStorage);
/*       */   
/*       */   public static final native boolean CkAuthAzureStorage_get_LastMethodSuccess(long paramLong, CkAuthAzureStorage paramCkAuthAzureStorage);
/*       */   
/*       */   public static final native void CkAuthAzureStorage_put_LastMethodSuccess(long paramLong, CkAuthAzureStorage paramCkAuthAzureStorage, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkAuthAzureStorage_get_Scheme(long paramLong1, CkAuthAzureStorage paramCkAuthAzureStorage, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkAuthAzureStorage_scheme(long paramLong, CkAuthAzureStorage paramCkAuthAzureStorage);
/*       */   
/*       */   public static final native void CkAuthAzureStorage_put_Scheme(long paramLong, CkAuthAzureStorage paramCkAuthAzureStorage, String paramString);
/*       */   
/*       */   public static final native void CkAuthAzureStorage_get_Service(long paramLong1, CkAuthAzureStorage paramCkAuthAzureStorage, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkAuthAzureStorage_service(long paramLong, CkAuthAzureStorage paramCkAuthAzureStorage);
/*       */   
/*       */   public static final native void CkAuthAzureStorage_put_Service(long paramLong, CkAuthAzureStorage paramCkAuthAzureStorage, String paramString);
/*       */   
/*       */   public static final native boolean CkAuthAzureStorage_get_VerboseLogging(long paramLong, CkAuthAzureStorage paramCkAuthAzureStorage);
/*       */   
/*       */   public static final native void CkAuthAzureStorage_put_VerboseLogging(long paramLong, CkAuthAzureStorage paramCkAuthAzureStorage, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkAuthAzureStorage_get_Version(long paramLong1, CkAuthAzureStorage paramCkAuthAzureStorage, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkAuthAzureStorage_version(long paramLong, CkAuthAzureStorage paramCkAuthAzureStorage);
/*       */   
/*       */   public static final native void CkAuthAzureStorage_get_XMsVersion(long paramLong1, CkAuthAzureStorage paramCkAuthAzureStorage, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkAuthAzureStorage_xMsVersion(long paramLong, CkAuthAzureStorage paramCkAuthAzureStorage);
/*       */   
/*       */   public static final native void CkAuthAzureStorage_put_XMsVersion(long paramLong, CkAuthAzureStorage paramCkAuthAzureStorage, String paramString);
/*       */   
/*       */   public static final native boolean CkAuthAzureStorage_SaveLastError(long paramLong, CkAuthAzureStorage paramCkAuthAzureStorage, String paramString);
/*       */   
/*       */   public static final native long new_CkAuthAzureAD();
/*       */   
/*       */   public static final native void delete_CkAuthAzureAD(long paramLong);
/*       */   
/*       */   public static final native void CkAuthAzureAD_LastErrorXml(long paramLong1, CkAuthAzureAD paramCkAuthAzureAD, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkAuthAzureAD_LastErrorHtml(long paramLong1, CkAuthAzureAD paramCkAuthAzureAD, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkAuthAzureAD_LastErrorText(long paramLong1, CkAuthAzureAD paramCkAuthAzureAD, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkAuthAzureAD_put_EventCallbackObject(long paramLong1, CkAuthAzureAD paramCkAuthAzureAD, long paramLong2, CkBaseProgress paramCkBaseProgress);
/*       */   
/*       */   public static final native void CkAuthAzureAD_get_AccessToken(long paramLong1, CkAuthAzureAD paramCkAuthAzureAD, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkAuthAzureAD_accessToken(long paramLong, CkAuthAzureAD paramCkAuthAzureAD);
/*       */   
/*       */   public static final native void CkAuthAzureAD_put_AccessToken(long paramLong, CkAuthAzureAD paramCkAuthAzureAD, String paramString);
/*       */   
/*       */   public static final native void CkAuthAzureAD_get_ClientId(long paramLong1, CkAuthAzureAD paramCkAuthAzureAD, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkAuthAzureAD_clientId(long paramLong, CkAuthAzureAD paramCkAuthAzureAD);
/*       */   
/*       */   public static final native void CkAuthAzureAD_put_ClientId(long paramLong, CkAuthAzureAD paramCkAuthAzureAD, String paramString);
/*       */   
/*       */   public static final native void CkAuthAzureAD_get_ClientSecret(long paramLong1, CkAuthAzureAD paramCkAuthAzureAD, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkAuthAzureAD_clientSecret(long paramLong, CkAuthAzureAD paramCkAuthAzureAD);
/*       */   
/*       */   public static final native void CkAuthAzureAD_put_ClientSecret(long paramLong, CkAuthAzureAD paramCkAuthAzureAD, String paramString);
/*       */   
/*       */   public static final native void CkAuthAzureAD_get_DebugLogFilePath(long paramLong1, CkAuthAzureAD paramCkAuthAzureAD, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkAuthAzureAD_debugLogFilePath(long paramLong, CkAuthAzureAD paramCkAuthAzureAD);
/*       */   
/*       */   public static final native void CkAuthAzureAD_put_DebugLogFilePath(long paramLong, CkAuthAzureAD paramCkAuthAzureAD, String paramString);
/*       */   
/*       */   public static final native void CkAuthAzureAD_get_LastErrorHtml(long paramLong1, CkAuthAzureAD paramCkAuthAzureAD, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkAuthAzureAD_lastErrorHtml(long paramLong, CkAuthAzureAD paramCkAuthAzureAD);
/*       */   
/*       */   public static final native void CkAuthAzureAD_get_LastErrorText(long paramLong1, CkAuthAzureAD paramCkAuthAzureAD, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkAuthAzureAD_lastErrorText(long paramLong, CkAuthAzureAD paramCkAuthAzureAD);
/*       */   
/*       */   public static final native void CkAuthAzureAD_get_LastErrorXml(long paramLong1, CkAuthAzureAD paramCkAuthAzureAD, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkAuthAzureAD_lastErrorXml(long paramLong, CkAuthAzureAD paramCkAuthAzureAD);
/*       */   
/*       */   public static final native boolean CkAuthAzureAD_get_LastMethodSuccess(long paramLong, CkAuthAzureAD paramCkAuthAzureAD);
/*       */   
/*       */   public static final native void CkAuthAzureAD_put_LastMethodSuccess(long paramLong, CkAuthAzureAD paramCkAuthAzureAD, boolean paramBoolean);
/*       */   
/*       */   public static final native int CkAuthAzureAD_get_NumSecondsRemaining(long paramLong, CkAuthAzureAD paramCkAuthAzureAD);
/*       */   
/*       */   public static final native void CkAuthAzureAD_get_Resource(long paramLong1, CkAuthAzureAD paramCkAuthAzureAD, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkAuthAzureAD_resource(long paramLong, CkAuthAzureAD paramCkAuthAzureAD);
/*       */   
/*       */   public static final native void CkAuthAzureAD_put_Resource(long paramLong, CkAuthAzureAD paramCkAuthAzureAD, String paramString);
/*       */   
/*       */   public static final native void CkAuthAzureAD_get_TenantId(long paramLong1, CkAuthAzureAD paramCkAuthAzureAD, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkAuthAzureAD_tenantId(long paramLong, CkAuthAzureAD paramCkAuthAzureAD);
/*       */   
/*       */   public static final native void CkAuthAzureAD_put_TenantId(long paramLong, CkAuthAzureAD paramCkAuthAzureAD, String paramString);
/*       */   
/*       */   public static final native boolean CkAuthAzureAD_get_Valid(long paramLong, CkAuthAzureAD paramCkAuthAzureAD);
/*       */   
/*       */   public static final native boolean CkAuthAzureAD_get_VerboseLogging(long paramLong, CkAuthAzureAD paramCkAuthAzureAD);
/*       */   
/*       */   public static final native void CkAuthAzureAD_put_VerboseLogging(long paramLong, CkAuthAzureAD paramCkAuthAzureAD, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkAuthAzureAD_get_Version(long paramLong1, CkAuthAzureAD paramCkAuthAzureAD, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkAuthAzureAD_version(long paramLong, CkAuthAzureAD paramCkAuthAzureAD);
/*       */   
/*       */   public static final native boolean CkAuthAzureAD_ObtainAccessToken(long paramLong1, CkAuthAzureAD paramCkAuthAzureAD, long paramLong2, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native long CkAuthAzureAD_ObtainAccessTokenAsync(long paramLong1, CkAuthAzureAD paramCkAuthAzureAD, long paramLong2, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native boolean CkAuthAzureAD_SaveLastError(long paramLong, CkAuthAzureAD paramCkAuthAzureAD, String paramString);
/*       */   
/*       */   public static final native long new_CkStringBuilder();
/*       */   
/*       */   public static final native void delete_CkStringBuilder(long paramLong);
/*       */   
/*       */   public static final native int CkStringBuilder_get_IntValue(long paramLong, CkStringBuilder paramCkStringBuilder);
/*       */   
/*       */   public static final native void CkStringBuilder_put_IntValue(long paramLong, CkStringBuilder paramCkStringBuilder, int paramInt);
/*       */   
/*       */   public static final native boolean CkStringBuilder_get_LastMethodSuccess(long paramLong, CkStringBuilder paramCkStringBuilder);
/*       */   
/*       */   public static final native void CkStringBuilder_put_LastMethodSuccess(long paramLong, CkStringBuilder paramCkStringBuilder, boolean paramBoolean);
/*       */   
/*       */   public static final native int CkStringBuilder_get_Length(long paramLong, CkStringBuilder paramCkStringBuilder);
/*       */   
/*       */   public static final native boolean CkStringBuilder_Append(long paramLong, CkStringBuilder paramCkStringBuilder, String paramString);
/*       */   
/*       */   public static final native boolean CkStringBuilder_AppendBd(long paramLong1, CkStringBuilder paramCkStringBuilder, long paramLong2, CkBinData paramCkBinData, String paramString, int paramInt1, int paramInt2);
/*       */   
/*       */   public static final native boolean CkStringBuilder_AppendEncoded(long paramLong1, CkStringBuilder paramCkStringBuilder, long paramLong2, CkByteData paramCkByteData, String paramString);
/*       */   
/*       */   public static final native boolean CkStringBuilder_AppendInt(long paramLong, CkStringBuilder paramCkStringBuilder, int paramInt);
/*       */   
/*       */   public static final native boolean CkStringBuilder_AppendInt64(long paramLong1, CkStringBuilder paramCkStringBuilder, long paramLong2);
/*       */   
/*       */   public static final native boolean CkStringBuilder_AppendLine(long paramLong, CkStringBuilder paramCkStringBuilder, String paramString, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkStringBuilder_AppendSb(long paramLong1, CkStringBuilder paramCkStringBuilder1, long paramLong2, CkStringBuilder paramCkStringBuilder2);
/*       */   
/*       */   public static final native void CkStringBuilder_Clear(long paramLong, CkStringBuilder paramCkStringBuilder);
/*       */   
/*       */   public static final native boolean CkStringBuilder_Contains(long paramLong, CkStringBuilder paramCkStringBuilder, String paramString, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkStringBuilder_ContainsWord(long paramLong, CkStringBuilder paramCkStringBuilder, String paramString, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkStringBuilder_ContentsEqual(long paramLong, CkStringBuilder paramCkStringBuilder, String paramString, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkStringBuilder_ContentsEqualSb(long paramLong1, CkStringBuilder paramCkStringBuilder1, long paramLong2, CkStringBuilder paramCkStringBuilder2, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkStringBuilder_Decode(long paramLong, CkStringBuilder paramCkStringBuilder, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkStringBuilder_Encode(long paramLong, CkStringBuilder paramCkStringBuilder, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkStringBuilder_EndsWith(long paramLong, CkStringBuilder paramCkStringBuilder, String paramString, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkStringBuilder_EntityDecode(long paramLong, CkStringBuilder paramCkStringBuilder);
/*       */   
/*       */   public static final native boolean CkStringBuilder_GetAfterBetween(long paramLong1, CkStringBuilder paramCkStringBuilder, String paramString1, String paramString2, String paramString3, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkStringBuilder_getAfterBetween(long paramLong, CkStringBuilder paramCkStringBuilder, String paramString1, String paramString2, String paramString3);
/*       */   
/*       */   public static final native String CkStringBuilder_afterBetween(long paramLong, CkStringBuilder paramCkStringBuilder, String paramString1, String paramString2, String paramString3);
/*       */   
/*       */   public static final native boolean CkStringBuilder_GetAsString(long paramLong1, CkStringBuilder paramCkStringBuilder, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkStringBuilder_getAsString(long paramLong, CkStringBuilder paramCkStringBuilder);
/*       */   
/*       */   public static final native String CkStringBuilder_asString(long paramLong, CkStringBuilder paramCkStringBuilder);
/*       */   
/*       */   public static final native boolean CkStringBuilder_GetBetween(long paramLong1, CkStringBuilder paramCkStringBuilder, String paramString1, String paramString2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkStringBuilder_getBetween(long paramLong, CkStringBuilder paramCkStringBuilder, String paramString1, String paramString2);
/*       */   
/*       */   public static final native String CkStringBuilder_between(long paramLong, CkStringBuilder paramCkStringBuilder, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkStringBuilder_GetDecoded(long paramLong1, CkStringBuilder paramCkStringBuilder, String paramString, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkStringBuilder_GetEncoded(long paramLong1, CkStringBuilder paramCkStringBuilder, String paramString1, String paramString2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkStringBuilder_getEncoded(long paramLong, CkStringBuilder paramCkStringBuilder, String paramString1, String paramString2);
/*       */   
/*       */   public static final native String CkStringBuilder_encoded(long paramLong, CkStringBuilder paramCkStringBuilder, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkStringBuilder_GetNth(long paramLong1, CkStringBuilder paramCkStringBuilder, int paramInt, String paramString, boolean paramBoolean1, boolean paramBoolean2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkStringBuilder_getNth(long paramLong, CkStringBuilder paramCkStringBuilder, int paramInt, String paramString, boolean paramBoolean1, boolean paramBoolean2);
/*       */   
/*       */   public static final native String CkStringBuilder_nth(long paramLong, CkStringBuilder paramCkStringBuilder, int paramInt, String paramString, boolean paramBoolean1, boolean paramBoolean2);
/*       */   
/*       */   public static final native boolean CkStringBuilder_LastNLines(long paramLong1, CkStringBuilder paramCkStringBuilder, int paramInt, boolean paramBoolean, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkStringBuilder_lastNLines(long paramLong, CkStringBuilder paramCkStringBuilder, int paramInt, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkStringBuilder_LoadFile(long paramLong, CkStringBuilder paramCkStringBuilder, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkStringBuilder_Prepend(long paramLong, CkStringBuilder paramCkStringBuilder, String paramString);
/*       */   
/*       */   public static final native boolean CkStringBuilder_PunyDecode(long paramLong, CkStringBuilder paramCkStringBuilder);
/*       */   
/*       */   public static final native boolean CkStringBuilder_PunyEncode(long paramLong, CkStringBuilder paramCkStringBuilder);
/*       */   
/*       */   public static final native int CkStringBuilder_Replace(long paramLong, CkStringBuilder paramCkStringBuilder, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkStringBuilder_ReplaceAfterFinal(long paramLong, CkStringBuilder paramCkStringBuilder, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkStringBuilder_ReplaceAllBetween(long paramLong, CkStringBuilder paramCkStringBuilder, String paramString1, String paramString2, String paramString3, boolean paramBoolean);
/*       */   
/*       */   public static final native int CkStringBuilder_ReplaceBetween(long paramLong, CkStringBuilder paramCkStringBuilder, String paramString1, String paramString2, String paramString3, String paramString4);
/*       */   
/*       */   public static final native int CkStringBuilder_ReplaceI(long paramLong, CkStringBuilder paramCkStringBuilder, String paramString, int paramInt);
/*       */   
/*       */   public static final native int CkStringBuilder_ReplaceWord(long paramLong, CkStringBuilder paramCkStringBuilder, String paramString1, String paramString2);
/*       */   
/*       */   public static final native void CkStringBuilder_SecureClear(long paramLong, CkStringBuilder paramCkStringBuilder);
/*       */   
/*       */   public static final native boolean CkStringBuilder_SetNth(long paramLong, CkStringBuilder paramCkStringBuilder, int paramInt, String paramString1, String paramString2, boolean paramBoolean1, boolean paramBoolean2);
/*       */   
/*       */   public static final native boolean CkStringBuilder_SetString(long paramLong, CkStringBuilder paramCkStringBuilder, String paramString);
/*       */   
/*       */   public static final native boolean CkStringBuilder_StartsWith(long paramLong, CkStringBuilder paramCkStringBuilder, String paramString, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkStringBuilder_ToCRLF(long paramLong, CkStringBuilder paramCkStringBuilder);
/*       */   
/*       */   public static final native boolean CkStringBuilder_ToLF(long paramLong, CkStringBuilder paramCkStringBuilder);
/*       */   
/*       */   public static final native boolean CkStringBuilder_ToLowercase(long paramLong, CkStringBuilder paramCkStringBuilder);
/*       */   
/*       */   public static final native boolean CkStringBuilder_ToUppercase(long paramLong, CkStringBuilder paramCkStringBuilder);
/*       */   
/*       */   public static final native boolean CkStringBuilder_Trim(long paramLong, CkStringBuilder paramCkStringBuilder);
/*       */   
/*       */   public static final native boolean CkStringBuilder_TrimInsideSpaces(long paramLong, CkStringBuilder paramCkStringBuilder);
/*       */   
/*       */   public static final native boolean CkStringBuilder_WriteFile(long paramLong, CkStringBuilder paramCkStringBuilder, String paramString1, String paramString2, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkStringBuilder_WriteFileIfModified(long paramLong, CkStringBuilder paramCkStringBuilder, String paramString1, String paramString2, boolean paramBoolean);
/*       */   
/*       */   public static final native long new_CkBinData();
/*       */   
/*       */   public static final native void delete_CkBinData(long paramLong);
/*       */   
/*       */   public static final native boolean CkBinData_get_LastMethodSuccess(long paramLong, CkBinData paramCkBinData);
/*       */   
/*       */   public static final native void CkBinData_put_LastMethodSuccess(long paramLong, CkBinData paramCkBinData, boolean paramBoolean);
/*       */   
/*       */   public static final native int CkBinData_get_NumBytes(long paramLong, CkBinData paramCkBinData);
/*       */   
/*       */   public static final native boolean CkBinData_AppendBd(long paramLong1, CkBinData paramCkBinData1, long paramLong2, CkBinData paramCkBinData2);
/*       */   
/*       */   public static final native boolean CkBinData_AppendBinary(long paramLong1, CkBinData paramCkBinData, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkBinData_AppendBom(long paramLong, CkBinData paramCkBinData, String paramString);
/*       */   
/*       */   public static final native boolean CkBinData_AppendEncoded(long paramLong, CkBinData paramCkBinData, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkBinData_AppendEncodedSb(long paramLong1, CkBinData paramCkBinData, long paramLong2, CkStringBuilder paramCkStringBuilder, String paramString);
/*       */   
/*       */   public static final native boolean CkBinData_AppendSb(long paramLong1, CkBinData paramCkBinData, long paramLong2, CkStringBuilder paramCkStringBuilder, String paramString);
/*       */   
/*       */   public static final native boolean CkBinData_AppendString(long paramLong, CkBinData paramCkBinData, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkBinData_Clear(long paramLong, CkBinData paramCkBinData);
/*       */   
/*       */   public static final native boolean CkBinData_ContentsEqual(long paramLong1, CkBinData paramCkBinData1, long paramLong2, CkBinData paramCkBinData2);
/*       */   
/*       */   public static final native boolean CkBinData_GetBinary(long paramLong1, CkBinData paramCkBinData, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkBinData_GetBinaryChunk(long paramLong1, CkBinData paramCkBinData, int paramInt1, int paramInt2, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkBinData_GetEncoded(long paramLong1, CkBinData paramCkBinData, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkBinData_getEncoded(long paramLong, CkBinData paramCkBinData, String paramString);
/*       */   
/*       */   public static final native String CkBinData_encoded(long paramLong, CkBinData paramCkBinData, String paramString);
/*       */   
/*       */   public static final native boolean CkBinData_GetEncodedChunk(long paramLong1, CkBinData paramCkBinData, int paramInt1, int paramInt2, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkBinData_getEncodedChunk(long paramLong, CkBinData paramCkBinData, int paramInt1, int paramInt2, String paramString);
/*       */   
/*       */   public static final native String CkBinData_encodedChunk(long paramLong, CkBinData paramCkBinData, int paramInt1, int paramInt2, String paramString);
/*       */   
/*       */   public static final native boolean CkBinData_GetEncodedSb(long paramLong1, CkBinData paramCkBinData, String paramString, long paramLong2, CkStringBuilder paramCkStringBuilder);
/*       */   
/*       */   public static final native boolean CkBinData_GetString(long paramLong1, CkBinData paramCkBinData, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkBinData_getString(long paramLong, CkBinData paramCkBinData, String paramString);
/*       */   
/*       */   public static final native String CkBinData_string(long paramLong, CkBinData paramCkBinData, String paramString);
/*       */   
/*       */   public static final native boolean CkBinData_LoadBinary(long paramLong1, CkBinData paramCkBinData, long paramLong2, CkByteData paramCkByteData);
/*       */   
/*       */   public static final native boolean CkBinData_LoadEncoded(long paramLong, CkBinData paramCkBinData, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkBinData_LoadFile(long paramLong, CkBinData paramCkBinData, String paramString);
/*       */   
/*       */   public static final native boolean CkBinData_RemoveChunk(long paramLong, CkBinData paramCkBinData, int paramInt1, int paramInt2);
/*       */   
/*       */   public static final native boolean CkBinData_SecureClear(long paramLong, CkBinData paramCkBinData);
/*       */   
/*       */   public static final native boolean CkBinData_WriteFile(long paramLong, CkBinData paramCkBinData, String paramString);
/*       */   
/*       */   public static final native long new_CkJwt();
/*       */   
/*       */   public static final native void delete_CkJwt(long paramLong);
/*       */   
/*       */   public static final native void CkJwt_LastErrorXml(long paramLong1, CkJwt paramCkJwt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkJwt_LastErrorHtml(long paramLong1, CkJwt paramCkJwt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkJwt_LastErrorText(long paramLong1, CkJwt paramCkJwt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native boolean CkJwt_get_AutoCompact(long paramLong, CkJwt paramCkJwt);
/*       */   
/*       */   public static final native void CkJwt_put_AutoCompact(long paramLong, CkJwt paramCkJwt, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkJwt_get_DebugLogFilePath(long paramLong1, CkJwt paramCkJwt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkJwt_debugLogFilePath(long paramLong, CkJwt paramCkJwt);
/*       */   
/*       */   public static final native void CkJwt_put_DebugLogFilePath(long paramLong, CkJwt paramCkJwt, String paramString);
/*       */   
/*       */   public static final native void CkJwt_get_LastErrorHtml(long paramLong1, CkJwt paramCkJwt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkJwt_lastErrorHtml(long paramLong, CkJwt paramCkJwt);
/*       */   
/*       */   public static final native void CkJwt_get_LastErrorText(long paramLong1, CkJwt paramCkJwt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkJwt_lastErrorText(long paramLong, CkJwt paramCkJwt);
/*       */   
/*       */   public static final native void CkJwt_get_LastErrorXml(long paramLong1, CkJwt paramCkJwt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkJwt_lastErrorXml(long paramLong, CkJwt paramCkJwt);
/*       */   
/*       */   public static final native boolean CkJwt_get_LastMethodSuccess(long paramLong, CkJwt paramCkJwt);
/*       */   
/*       */   public static final native void CkJwt_put_LastMethodSuccess(long paramLong, CkJwt paramCkJwt, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkJwt_get_VerboseLogging(long paramLong, CkJwt paramCkJwt);
/*       */   
/*       */   public static final native void CkJwt_put_VerboseLogging(long paramLong, CkJwt paramCkJwt, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkJwt_get_Version(long paramLong1, CkJwt paramCkJwt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkJwt_version(long paramLong, CkJwt paramCkJwt);
/*       */   
/*       */   public static final native boolean CkJwt_CreateJwt(long paramLong1, CkJwt paramCkJwt, String paramString1, String paramString2, String paramString3, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkJwt_createJwt(long paramLong, CkJwt paramCkJwt, String paramString1, String paramString2, String paramString3);
/*       */   
/*       */   public static final native boolean CkJwt_CreateJwtPk(long paramLong1, CkJwt paramCkJwt, String paramString1, String paramString2, long paramLong2, CkPrivateKey paramCkPrivateKey, long paramLong3, CkString paramCkString);
/*       */   
/*       */   public static final native String CkJwt_createJwtPk(long paramLong1, CkJwt paramCkJwt, String paramString1, String paramString2, long paramLong2, CkPrivateKey paramCkPrivateKey);
/*       */   
/*       */   public static final native int CkJwt_GenNumericDate(long paramLong, CkJwt paramCkJwt, int paramInt);
/*       */   
/*       */   public static final native boolean CkJwt_GetHeader(long paramLong1, CkJwt paramCkJwt, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkJwt_getHeader(long paramLong, CkJwt paramCkJwt, String paramString);
/*       */   
/*       */   public static final native String CkJwt_header(long paramLong, CkJwt paramCkJwt, String paramString);
/*       */   
/*       */   public static final native boolean CkJwt_GetPayload(long paramLong1, CkJwt paramCkJwt, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkJwt_getPayload(long paramLong, CkJwt paramCkJwt, String paramString);
/*       */   
/*       */   public static final native String CkJwt_payload(long paramLong, CkJwt paramCkJwt, String paramString);
/*       */   
/*       */   public static final native boolean CkJwt_IsTimeValid(long paramLong, CkJwt paramCkJwt, String paramString, int paramInt);
/*       */   
/*       */   public static final native boolean CkJwt_SaveLastError(long paramLong, CkJwt paramCkJwt, String paramString);
/*       */   
/*       */   public static final native boolean CkJwt_VerifyJwt(long paramLong, CkJwt paramCkJwt, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkJwt_VerifyJwtPk(long paramLong1, CkJwt paramCkJwt, String paramString, long paramLong2, CkPublicKey paramCkPublicKey);
/*       */   
/*       */   public static final native long new_CkServerSentEvent();
/*       */   
/*       */   public static final native void delete_CkServerSentEvent(long paramLong);
/*       */   
/*       */   public static final native void CkServerSentEvent_get_Data(long paramLong1, CkServerSentEvent paramCkServerSentEvent, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkServerSentEvent_data(long paramLong, CkServerSentEvent paramCkServerSentEvent);
/*       */   
/*       */   public static final native void CkServerSentEvent_get_EventName(long paramLong1, CkServerSentEvent paramCkServerSentEvent, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkServerSentEvent_eventName(long paramLong, CkServerSentEvent paramCkServerSentEvent);
/*       */   
/*       */   public static final native void CkServerSentEvent_get_LastEventId(long paramLong1, CkServerSentEvent paramCkServerSentEvent, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkServerSentEvent_lastEventId(long paramLong, CkServerSentEvent paramCkServerSentEvent);
/*       */   
/*       */   public static final native boolean CkServerSentEvent_get_LastMethodSuccess(long paramLong, CkServerSentEvent paramCkServerSentEvent);
/*       */   
/*       */   public static final native void CkServerSentEvent_put_LastMethodSuccess(long paramLong, CkServerSentEvent paramCkServerSentEvent, boolean paramBoolean);
/*       */   
/*       */   public static final native int CkServerSentEvent_get_Retry(long paramLong, CkServerSentEvent paramCkServerSentEvent);
/*       */   
/*       */   public static final native boolean CkServerSentEvent_LoadEvent(long paramLong, CkServerSentEvent paramCkServerSentEvent, String paramString);
/*       */   
/*       */   public static final native long new_CkOAuth2();
/*       */   
/*       */   public static final native void delete_CkOAuth2(long paramLong);
/*       */   
/*       */   public static final native void CkOAuth2_LastErrorXml(long paramLong1, CkOAuth2 paramCkOAuth2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkOAuth2_LastErrorHtml(long paramLong1, CkOAuth2 paramCkOAuth2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkOAuth2_LastErrorText(long paramLong1, CkOAuth2 paramCkOAuth2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkOAuth2_put_EventCallbackObject(long paramLong1, CkOAuth2 paramCkOAuth2, long paramLong2, CkBaseProgress paramCkBaseProgress);
/*       */   
/*       */   public static final native void CkOAuth2_get_AccessToken(long paramLong1, CkOAuth2 paramCkOAuth2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkOAuth2_accessToken(long paramLong, CkOAuth2 paramCkOAuth2);
/*       */   
/*       */   public static final native void CkOAuth2_put_AccessToken(long paramLong, CkOAuth2 paramCkOAuth2, String paramString);
/*       */   
/*       */   public static final native void CkOAuth2_get_AccessTokenResponse(long paramLong1, CkOAuth2 paramCkOAuth2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkOAuth2_accessTokenResponse(long paramLong, CkOAuth2 paramCkOAuth2);
/*       */   
/*       */   public static final native void CkOAuth2_get_AppCallbackUrl(long paramLong1, CkOAuth2 paramCkOAuth2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkOAuth2_appCallbackUrl(long paramLong, CkOAuth2 paramCkOAuth2);
/*       */   
/*       */   public static final native void CkOAuth2_put_AppCallbackUrl(long paramLong, CkOAuth2 paramCkOAuth2, String paramString);
/*       */   
/*       */   public static final native int CkOAuth2_get_AuthFlowState(long paramLong, CkOAuth2 paramCkOAuth2);
/*       */   
/*       */   public static final native void CkOAuth2_get_AuthorizationEndpoint(long paramLong1, CkOAuth2 paramCkOAuth2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkOAuth2_authorizationEndpoint(long paramLong, CkOAuth2 paramCkOAuth2);
/*       */   
/*       */   public static final native void CkOAuth2_put_AuthorizationEndpoint(long paramLong, CkOAuth2 paramCkOAuth2, String paramString);
/*       */   
/*       */   public static final native void CkOAuth2_get_ClientId(long paramLong1, CkOAuth2 paramCkOAuth2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkOAuth2_clientId(long paramLong, CkOAuth2 paramCkOAuth2);
/*       */   
/*       */   public static final native void CkOAuth2_put_ClientId(long paramLong, CkOAuth2 paramCkOAuth2, String paramString);
/*       */   
/*       */   public static final native void CkOAuth2_get_ClientSecret(long paramLong1, CkOAuth2 paramCkOAuth2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkOAuth2_clientSecret(long paramLong, CkOAuth2 paramCkOAuth2);
/*       */   
/*       */   public static final native void CkOAuth2_put_ClientSecret(long paramLong, CkOAuth2 paramCkOAuth2, String paramString);
/*       */   
/*       */   public static final native boolean CkOAuth2_get_CodeChallenge(long paramLong, CkOAuth2 paramCkOAuth2);
/*       */   
/*       */   public static final native void CkOAuth2_put_CodeChallenge(long paramLong, CkOAuth2 paramCkOAuth2, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkOAuth2_get_CodeChallengeMethod(long paramLong1, CkOAuth2 paramCkOAuth2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkOAuth2_codeChallengeMethod(long paramLong, CkOAuth2 paramCkOAuth2);
/*       */   
/*       */   public static final native void CkOAuth2_put_CodeChallengeMethod(long paramLong, CkOAuth2 paramCkOAuth2, String paramString);
/*       */   
/*       */   public static final native void CkOAuth2_get_DebugLogFilePath(long paramLong1, CkOAuth2 paramCkOAuth2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkOAuth2_debugLogFilePath(long paramLong, CkOAuth2 paramCkOAuth2);
/*       */   
/*       */   public static final native void CkOAuth2_put_DebugLogFilePath(long paramLong, CkOAuth2 paramCkOAuth2, String paramString);
/*       */   
/*       */   public static final native void CkOAuth2_get_FailureInfo(long paramLong1, CkOAuth2 paramCkOAuth2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkOAuth2_failureInfo(long paramLong, CkOAuth2 paramCkOAuth2);
/*       */   
/*       */   public static final native void CkOAuth2_get_LastErrorHtml(long paramLong1, CkOAuth2 paramCkOAuth2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkOAuth2_lastErrorHtml(long paramLong, CkOAuth2 paramCkOAuth2);
/*       */   
/*       */   public static final native void CkOAuth2_get_LastErrorText(long paramLong1, CkOAuth2 paramCkOAuth2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkOAuth2_lastErrorText(long paramLong, CkOAuth2 paramCkOAuth2);
/*       */   
/*       */   public static final native void CkOAuth2_get_LastErrorXml(long paramLong1, CkOAuth2 paramCkOAuth2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkOAuth2_lastErrorXml(long paramLong, CkOAuth2 paramCkOAuth2);
/*       */   
/*       */   public static final native boolean CkOAuth2_get_LastMethodSuccess(long paramLong, CkOAuth2 paramCkOAuth2);
/*       */   
/*       */   public static final native void CkOAuth2_put_LastMethodSuccess(long paramLong, CkOAuth2 paramCkOAuth2, boolean paramBoolean);
/*       */   
/*       */   public static final native int CkOAuth2_get_ListenPort(long paramLong, CkOAuth2 paramCkOAuth2);
/*       */   
/*       */   public static final native void CkOAuth2_put_ListenPort(long paramLong, CkOAuth2 paramCkOAuth2, int paramInt);
/*       */   
/*       */   public static final native int CkOAuth2_get_ListenPortRangeEnd(long paramLong, CkOAuth2 paramCkOAuth2);
/*       */   
/*       */   public static final native void CkOAuth2_put_ListenPortRangeEnd(long paramLong, CkOAuth2 paramCkOAuth2, int paramInt);
/*       */   
/*       */   public static final native void CkOAuth2_get_LocalHost(long paramLong1, CkOAuth2 paramCkOAuth2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkOAuth2_localHost(long paramLong, CkOAuth2 paramCkOAuth2);
/*       */   
/*       */   public static final native void CkOAuth2_put_LocalHost(long paramLong, CkOAuth2 paramCkOAuth2, String paramString);
/*       */   
/*       */   public static final native void CkOAuth2_get_RedirectAllowHtml(long paramLong1, CkOAuth2 paramCkOAuth2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkOAuth2_redirectAllowHtml(long paramLong, CkOAuth2 paramCkOAuth2);
/*       */   
/*       */   public static final native void CkOAuth2_put_RedirectAllowHtml(long paramLong, CkOAuth2 paramCkOAuth2, String paramString);
/*       */   
/*       */   public static final native void CkOAuth2_get_RedirectDenyHtml(long paramLong1, CkOAuth2 paramCkOAuth2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkOAuth2_redirectDenyHtml(long paramLong, CkOAuth2 paramCkOAuth2);
/*       */   
/*       */   public static final native void CkOAuth2_put_RedirectDenyHtml(long paramLong, CkOAuth2 paramCkOAuth2, String paramString);
/*       */   
/*       */   public static final native void CkOAuth2_get_RefreshToken(long paramLong1, CkOAuth2 paramCkOAuth2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkOAuth2_refreshToken(long paramLong, CkOAuth2 paramCkOAuth2);
/*       */   
/*       */   public static final native void CkOAuth2_put_RefreshToken(long paramLong, CkOAuth2 paramCkOAuth2, String paramString);
/*       */   
/*       */   public static final native void CkOAuth2_get_Resource(long paramLong1, CkOAuth2 paramCkOAuth2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkOAuth2_resource(long paramLong, CkOAuth2 paramCkOAuth2);
/*       */   
/*       */   public static final native void CkOAuth2_put_Resource(long paramLong, CkOAuth2 paramCkOAuth2, String paramString);
/*       */   
/*       */   public static final native void CkOAuth2_get_Scope(long paramLong1, CkOAuth2 paramCkOAuth2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkOAuth2_scope(long paramLong, CkOAuth2 paramCkOAuth2);
/*       */   
/*       */   public static final native void CkOAuth2_put_Scope(long paramLong, CkOAuth2 paramCkOAuth2, String paramString);
/*       */   
/*       */   public static final native void CkOAuth2_get_TokenEndpoint(long paramLong1, CkOAuth2 paramCkOAuth2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkOAuth2_tokenEndpoint(long paramLong, CkOAuth2 paramCkOAuth2);
/*       */   
/*       */   public static final native void CkOAuth2_put_TokenEndpoint(long paramLong, CkOAuth2 paramCkOAuth2, String paramString);
/*       */   
/*       */   public static final native void CkOAuth2_get_TokenType(long paramLong1, CkOAuth2 paramCkOAuth2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkOAuth2_tokenType(long paramLong, CkOAuth2 paramCkOAuth2);
/*       */   
/*       */   public static final native void CkOAuth2_put_TokenType(long paramLong, CkOAuth2 paramCkOAuth2, String paramString);
/*       */   
/*       */   public static final native boolean CkOAuth2_get_UseBasicAuth(long paramLong, CkOAuth2 paramCkOAuth2);
/*       */   
/*       */   public static final native void CkOAuth2_put_UseBasicAuth(long paramLong, CkOAuth2 paramCkOAuth2, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkOAuth2_get_VerboseLogging(long paramLong, CkOAuth2 paramCkOAuth2);
/*       */   
/*       */   public static final native void CkOAuth2_put_VerboseLogging(long paramLong, CkOAuth2 paramCkOAuth2, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkOAuth2_get_Version(long paramLong1, CkOAuth2 paramCkOAuth2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkOAuth2_version(long paramLong, CkOAuth2 paramCkOAuth2);
/*       */   
/*       */   public static final native boolean CkOAuth2_Cancel(long paramLong, CkOAuth2 paramCkOAuth2);
/*       */   
/*       */   public static final native boolean CkOAuth2_GetRedirectRequestParam(long paramLong1, CkOAuth2 paramCkOAuth2, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkOAuth2_getRedirectRequestParam(long paramLong, CkOAuth2 paramCkOAuth2, String paramString);
/*       */   
/*       */   public static final native String CkOAuth2_redirectRequestParam(long paramLong, CkOAuth2 paramCkOAuth2, String paramString);
/*       */   
/*       */   public static final native boolean CkOAuth2_Monitor(long paramLong, CkOAuth2 paramCkOAuth2);
/*       */   
/*       */   public static final native long CkOAuth2_MonitorAsync(long paramLong, CkOAuth2 paramCkOAuth2);
/*       */   
/*       */   public static final native boolean CkOAuth2_RefreshAccessToken(long paramLong, CkOAuth2 paramCkOAuth2);
/*       */   
/*       */   public static final native long CkOAuth2_RefreshAccessTokenAsync(long paramLong, CkOAuth2 paramCkOAuth2);
/*       */   
/*       */   public static final native boolean CkOAuth2_SaveLastError(long paramLong, CkOAuth2 paramCkOAuth2, String paramString);
/*       */   
/*       */   public static final native void CkOAuth2_SleepMs(long paramLong, CkOAuth2 paramCkOAuth2, int paramInt);
/*       */   
/*       */   public static final native boolean CkOAuth2_StartAuth(long paramLong1, CkOAuth2 paramCkOAuth2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkOAuth2_startAuth(long paramLong, CkOAuth2 paramCkOAuth2);
/*       */   
/*       */   public static final native boolean CkOAuth2_UseConnection(long paramLong1, CkOAuth2 paramCkOAuth2, long paramLong2, CkSocket paramCkSocket);
/*       */   
/*       */   public static final native long new_CkStringTable();
/*       */   
/*       */   public static final native void delete_CkStringTable(long paramLong);
/*       */   
/*       */   public static final native void CkStringTable_LastErrorXml(long paramLong1, CkStringTable paramCkStringTable, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkStringTable_LastErrorHtml(long paramLong1, CkStringTable paramCkStringTable, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkStringTable_LastErrorText(long paramLong1, CkStringTable paramCkStringTable, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native int CkStringTable_get_Count(long paramLong, CkStringTable paramCkStringTable);
/*       */   
/*       */   public static final native void CkStringTable_get_DebugLogFilePath(long paramLong1, CkStringTable paramCkStringTable, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkStringTable_debugLogFilePath(long paramLong, CkStringTable paramCkStringTable);
/*       */   
/*       */   public static final native void CkStringTable_put_DebugLogFilePath(long paramLong, CkStringTable paramCkStringTable, String paramString);
/*       */   
/*       */   public static final native void CkStringTable_get_LastErrorHtml(long paramLong1, CkStringTable paramCkStringTable, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkStringTable_lastErrorHtml(long paramLong, CkStringTable paramCkStringTable);
/*       */   
/*       */   public static final native void CkStringTable_get_LastErrorText(long paramLong1, CkStringTable paramCkStringTable, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkStringTable_lastErrorText(long paramLong, CkStringTable paramCkStringTable);
/*       */   
/*       */   public static final native void CkStringTable_get_LastErrorXml(long paramLong1, CkStringTable paramCkStringTable, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkStringTable_lastErrorXml(long paramLong, CkStringTable paramCkStringTable);
/*       */   
/*       */   public static final native boolean CkStringTable_get_LastMethodSuccess(long paramLong, CkStringTable paramCkStringTable);
/*       */   
/*       */   public static final native void CkStringTable_put_LastMethodSuccess(long paramLong, CkStringTable paramCkStringTable, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkStringTable_get_VerboseLogging(long paramLong, CkStringTable paramCkStringTable);
/*       */   
/*       */   public static final native void CkStringTable_put_VerboseLogging(long paramLong, CkStringTable paramCkStringTable, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkStringTable_get_Version(long paramLong1, CkStringTable paramCkStringTable, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkStringTable_version(long paramLong, CkStringTable paramCkStringTable);
/*       */   
/*       */   public static final native boolean CkStringTable_Append(long paramLong, CkStringTable paramCkStringTable, String paramString);
/*       */   
/*       */   public static final native boolean CkStringTable_AppendFromFile(long paramLong, CkStringTable paramCkStringTable, int paramInt, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkStringTable_AppendFromSb(long paramLong1, CkStringTable paramCkStringTable, long paramLong2, CkStringBuilder paramCkStringBuilder);
/*       */   
/*       */   public static final native void CkStringTable_Clear(long paramLong, CkStringTable paramCkStringTable);
/*       */   
/*       */   public static final native int CkStringTable_IntAt(long paramLong, CkStringTable paramCkStringTable, int paramInt);
/*       */   
/*       */   public static final native boolean CkStringTable_SaveLastError(long paramLong, CkStringTable paramCkStringTable, String paramString);
/*       */   
/*       */   public static final native boolean CkStringTable_SaveToFile(long paramLong, CkStringTable paramCkStringTable, String paramString1, boolean paramBoolean, String paramString2);
/*       */   
/*       */   public static final native boolean CkStringTable_SplitAndAppend(long paramLong, CkStringTable paramCkStringTable, String paramString1, String paramString2, boolean paramBoolean1, boolean paramBoolean2);
/*       */   
/*       */   public static final native boolean CkStringTable_StringAt(long paramLong1, CkStringTable paramCkStringTable, int paramInt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkStringTable_stringAt(long paramLong, CkStringTable paramCkStringTable, int paramInt);
/*       */   
/*       */   public static final native long new_CkAuthAzureSAS();
/*       */   
/*       */   public static final native void delete_CkAuthAzureSAS(long paramLong);
/*       */   
/*       */   public static final native void CkAuthAzureSAS_LastErrorXml(long paramLong1, CkAuthAzureSAS paramCkAuthAzureSAS, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkAuthAzureSAS_LastErrorHtml(long paramLong1, CkAuthAzureSAS paramCkAuthAzureSAS, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkAuthAzureSAS_LastErrorText(long paramLong1, CkAuthAzureSAS paramCkAuthAzureSAS, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkAuthAzureSAS_get_AccessKey(long paramLong1, CkAuthAzureSAS paramCkAuthAzureSAS, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkAuthAzureSAS_accessKey(long paramLong, CkAuthAzureSAS paramCkAuthAzureSAS);
/*       */   
/*       */   public static final native void CkAuthAzureSAS_put_AccessKey(long paramLong, CkAuthAzureSAS paramCkAuthAzureSAS, String paramString);
/*       */   
/*       */   public static final native void CkAuthAzureSAS_get_DebugLogFilePath(long paramLong1, CkAuthAzureSAS paramCkAuthAzureSAS, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkAuthAzureSAS_debugLogFilePath(long paramLong, CkAuthAzureSAS paramCkAuthAzureSAS);
/*       */   
/*       */   public static final native void CkAuthAzureSAS_put_DebugLogFilePath(long paramLong, CkAuthAzureSAS paramCkAuthAzureSAS, String paramString);
/*       */   
/*       */   public static final native void CkAuthAzureSAS_get_LastErrorHtml(long paramLong1, CkAuthAzureSAS paramCkAuthAzureSAS, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkAuthAzureSAS_lastErrorHtml(long paramLong, CkAuthAzureSAS paramCkAuthAzureSAS);
/*       */   
/*       */   public static final native void CkAuthAzureSAS_get_LastErrorText(long paramLong1, CkAuthAzureSAS paramCkAuthAzureSAS, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkAuthAzureSAS_lastErrorText(long paramLong, CkAuthAzureSAS paramCkAuthAzureSAS);
/*       */   
/*       */   public static final native void CkAuthAzureSAS_get_LastErrorXml(long paramLong1, CkAuthAzureSAS paramCkAuthAzureSAS, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkAuthAzureSAS_lastErrorXml(long paramLong, CkAuthAzureSAS paramCkAuthAzureSAS);
/*       */   
/*       */   public static final native boolean CkAuthAzureSAS_get_LastMethodSuccess(long paramLong, CkAuthAzureSAS paramCkAuthAzureSAS);
/*       */   
/*       */   public static final native void CkAuthAzureSAS_put_LastMethodSuccess(long paramLong, CkAuthAzureSAS paramCkAuthAzureSAS, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkAuthAzureSAS_get_StringToSign(long paramLong1, CkAuthAzureSAS paramCkAuthAzureSAS, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkAuthAzureSAS_stringToSign(long paramLong, CkAuthAzureSAS paramCkAuthAzureSAS);
/*       */   
/*       */   public static final native void CkAuthAzureSAS_put_StringToSign(long paramLong, CkAuthAzureSAS paramCkAuthAzureSAS, String paramString);
/*       */   
/*       */   public static final native boolean CkAuthAzureSAS_get_VerboseLogging(long paramLong, CkAuthAzureSAS paramCkAuthAzureSAS);
/*       */   
/*       */   public static final native void CkAuthAzureSAS_put_VerboseLogging(long paramLong, CkAuthAzureSAS paramCkAuthAzureSAS, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkAuthAzureSAS_get_Version(long paramLong1, CkAuthAzureSAS paramCkAuthAzureSAS, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkAuthAzureSAS_version(long paramLong, CkAuthAzureSAS paramCkAuthAzureSAS);
/*       */   
/*       */   public static final native void CkAuthAzureSAS_Clear(long paramLong, CkAuthAzureSAS paramCkAuthAzureSAS);
/*       */   
/*       */   public static final native boolean CkAuthAzureSAS_GenerateToken(long paramLong1, CkAuthAzureSAS paramCkAuthAzureSAS, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkAuthAzureSAS_generateToken(long paramLong, CkAuthAzureSAS paramCkAuthAzureSAS);
/*       */   
/*       */   public static final native boolean CkAuthAzureSAS_SaveLastError(long paramLong, CkAuthAzureSAS paramCkAuthAzureSAS, String paramString);
/*       */   
/*       */   public static final native boolean CkAuthAzureSAS_SetNonTokenParam(long paramLong, CkAuthAzureSAS paramCkAuthAzureSAS, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkAuthAzureSAS_SetTokenParam(long paramLong, CkAuthAzureSAS paramCkAuthAzureSAS, String paramString1, String paramString2, String paramString3);
/*       */   
/*       */   public static final native long new_CkCsr();
/*       */   
/*       */   public static final native void delete_CkCsr(long paramLong);
/*       */   
/*       */   public static final native void CkCsr_LastErrorXml(long paramLong1, CkCsr paramCkCsr, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkCsr_LastErrorHtml(long paramLong1, CkCsr paramCkCsr, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkCsr_LastErrorText(long paramLong1, CkCsr paramCkCsr, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkCsr_get_CommonName(long paramLong1, CkCsr paramCkCsr, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCsr_commonName(long paramLong, CkCsr paramCkCsr);
/*       */   
/*       */   public static final native void CkCsr_put_CommonName(long paramLong, CkCsr paramCkCsr, String paramString);
/*       */   
/*       */   public static final native void CkCsr_get_Company(long paramLong1, CkCsr paramCkCsr, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCsr_company(long paramLong, CkCsr paramCkCsr);
/*       */   
/*       */   public static final native void CkCsr_put_Company(long paramLong, CkCsr paramCkCsr, String paramString);
/*       */   
/*       */   public static final native void CkCsr_get_CompanyDivision(long paramLong1, CkCsr paramCkCsr, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCsr_companyDivision(long paramLong, CkCsr paramCkCsr);
/*       */   
/*       */   public static final native void CkCsr_put_CompanyDivision(long paramLong, CkCsr paramCkCsr, String paramString);
/*       */   
/*       */   public static final native void CkCsr_get_Country(long paramLong1, CkCsr paramCkCsr, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCsr_country(long paramLong, CkCsr paramCkCsr);
/*       */   
/*       */   public static final native void CkCsr_put_Country(long paramLong, CkCsr paramCkCsr, String paramString);
/*       */   
/*       */   public static final native void CkCsr_get_DebugLogFilePath(long paramLong1, CkCsr paramCkCsr, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCsr_debugLogFilePath(long paramLong, CkCsr paramCkCsr);
/*       */   
/*       */   public static final native void CkCsr_put_DebugLogFilePath(long paramLong, CkCsr paramCkCsr, String paramString);
/*       */   
/*       */   public static final native void CkCsr_get_EmailAddress(long paramLong1, CkCsr paramCkCsr, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCsr_emailAddress(long paramLong, CkCsr paramCkCsr);
/*       */   
/*       */   public static final native void CkCsr_put_EmailAddress(long paramLong, CkCsr paramCkCsr, String paramString);
/*       */   
/*       */   public static final native void CkCsr_get_LastErrorHtml(long paramLong1, CkCsr paramCkCsr, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCsr_lastErrorHtml(long paramLong, CkCsr paramCkCsr);
/*       */   
/*       */   public static final native void CkCsr_get_LastErrorText(long paramLong1, CkCsr paramCkCsr, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCsr_lastErrorText(long paramLong, CkCsr paramCkCsr);
/*       */   
/*       */   public static final native void CkCsr_get_LastErrorXml(long paramLong1, CkCsr paramCkCsr, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCsr_lastErrorXml(long paramLong, CkCsr paramCkCsr);
/*       */   
/*       */   public static final native boolean CkCsr_get_LastMethodSuccess(long paramLong, CkCsr paramCkCsr);
/*       */   
/*       */   public static final native void CkCsr_put_LastMethodSuccess(long paramLong, CkCsr paramCkCsr, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkCsr_get_Locality(long paramLong1, CkCsr paramCkCsr, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCsr_locality(long paramLong, CkCsr paramCkCsr);
/*       */   
/*       */   public static final native void CkCsr_put_Locality(long paramLong, CkCsr paramCkCsr, String paramString);
/*       */   
/*       */   public static final native void CkCsr_get_State(long paramLong1, CkCsr paramCkCsr, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCsr_state(long paramLong, CkCsr paramCkCsr);
/*       */   
/*       */   public static final native void CkCsr_put_State(long paramLong, CkCsr paramCkCsr, String paramString);
/*       */   
/*       */   public static final native boolean CkCsr_get_VerboseLogging(long paramLong, CkCsr paramCkCsr);
/*       */   
/*       */   public static final native void CkCsr_put_VerboseLogging(long paramLong, CkCsr paramCkCsr, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkCsr_get_Version(long paramLong1, CkCsr paramCkCsr, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCsr_version(long paramLong, CkCsr paramCkCsr);
/*       */   
/*       */   public static final native boolean CkCsr_GenCsrBd(long paramLong1, CkCsr paramCkCsr, long paramLong2, CkPrivateKey paramCkPrivateKey, long paramLong3, CkBinData paramCkBinData);
/*       */   
/*       */   public static final native boolean CkCsr_GenCsrPem(long paramLong1, CkCsr paramCkCsr, long paramLong2, CkPrivateKey paramCkPrivateKey, long paramLong3, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCsr_genCsrPem(long paramLong1, CkCsr paramCkCsr, long paramLong2, CkPrivateKey paramCkPrivateKey);
/*       */   
/*       */   public static final native boolean CkCsr_GetSubjectField(long paramLong1, CkCsr paramCkCsr, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkCsr_getSubjectField(long paramLong, CkCsr paramCkCsr, String paramString);
/*       */   
/*       */   public static final native String CkCsr_subjectField(long paramLong, CkCsr paramCkCsr, String paramString);
/*       */   
/*       */   public static final native boolean CkCsr_LoadCsrPem(long paramLong, CkCsr paramCkCsr, String paramString);
/*       */   
/*       */   public static final native boolean CkCsr_SaveLastError(long paramLong, CkCsr paramCkCsr, String paramString);
/*       */   
/*       */   public static final native boolean CkCsr_SetSubjectField(long paramLong, CkCsr paramCkCsr, String paramString1, String paramString2, String paramString3);
/*       */   
/*       */   public static final native long new_CkJwe();
/*       */   
/*       */   public static final native void delete_CkJwe(long paramLong);
/*       */   
/*       */   public static final native void CkJwe_LastErrorXml(long paramLong1, CkJwe paramCkJwe, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkJwe_LastErrorHtml(long paramLong1, CkJwe paramCkJwe, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkJwe_LastErrorText(long paramLong1, CkJwe paramCkJwe, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkJwe_get_DebugLogFilePath(long paramLong1, CkJwe paramCkJwe, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkJwe_debugLogFilePath(long paramLong, CkJwe paramCkJwe);
/*       */   
/*       */   public static final native void CkJwe_put_DebugLogFilePath(long paramLong, CkJwe paramCkJwe, String paramString);
/*       */   
/*       */   public static final native void CkJwe_get_LastErrorHtml(long paramLong1, CkJwe paramCkJwe, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkJwe_lastErrorHtml(long paramLong, CkJwe paramCkJwe);
/*       */   
/*       */   public static final native void CkJwe_get_LastErrorText(long paramLong1, CkJwe paramCkJwe, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkJwe_lastErrorText(long paramLong, CkJwe paramCkJwe);
/*       */   
/*       */   public static final native void CkJwe_get_LastErrorXml(long paramLong1, CkJwe paramCkJwe, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkJwe_lastErrorXml(long paramLong, CkJwe paramCkJwe);
/*       */   
/*       */   public static final native boolean CkJwe_get_LastMethodSuccess(long paramLong, CkJwe paramCkJwe);
/*       */   
/*       */   public static final native void CkJwe_put_LastMethodSuccess(long paramLong, CkJwe paramCkJwe, boolean paramBoolean);
/*       */   
/*       */   public static final native int CkJwe_get_NumRecipients(long paramLong, CkJwe paramCkJwe);
/*       */   
/*       */   public static final native boolean CkJwe_get_PreferCompact(long paramLong, CkJwe paramCkJwe);
/*       */   
/*       */   public static final native void CkJwe_put_PreferCompact(long paramLong, CkJwe paramCkJwe, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkJwe_get_PreferFlattened(long paramLong, CkJwe paramCkJwe);
/*       */   
/*       */   public static final native void CkJwe_put_PreferFlattened(long paramLong, CkJwe paramCkJwe, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkJwe_get_VerboseLogging(long paramLong, CkJwe paramCkJwe);
/*       */   
/*       */   public static final native void CkJwe_put_VerboseLogging(long paramLong, CkJwe paramCkJwe, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkJwe_get_Version(long paramLong1, CkJwe paramCkJwe, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkJwe_version(long paramLong, CkJwe paramCkJwe);
/*       */   
/*       */   public static final native boolean CkJwe_Decrypt(long paramLong1, CkJwe paramCkJwe, int paramInt, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkJwe_decrypt(long paramLong, CkJwe paramCkJwe, int paramInt, String paramString);
/*       */   
/*       */   public static final native boolean CkJwe_DecryptBd(long paramLong1, CkJwe paramCkJwe, int paramInt, long paramLong2, CkBinData paramCkBinData);
/*       */   
/*       */   public static final native boolean CkJwe_DecryptSb(long paramLong1, CkJwe paramCkJwe, int paramInt, String paramString, long paramLong2, CkStringBuilder paramCkStringBuilder);
/*       */   
/*       */   public static final native boolean CkJwe_Encrypt(long paramLong1, CkJwe paramCkJwe, String paramString1, String paramString2, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkJwe_encrypt(long paramLong, CkJwe paramCkJwe, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkJwe_EncryptBd(long paramLong1, CkJwe paramCkJwe, long paramLong2, CkBinData paramCkBinData, long paramLong3, CkStringBuilder paramCkStringBuilder);
/*       */   
/*       */   public static final native boolean CkJwe_EncryptSb(long paramLong1, CkJwe paramCkJwe, long paramLong2, CkStringBuilder paramCkStringBuilder1, String paramString, long paramLong3, CkStringBuilder paramCkStringBuilder2);
/*       */   
/*       */   public static final native int CkJwe_FindRecipient(long paramLong, CkJwe paramCkJwe, String paramString1, String paramString2, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkJwe_LoadJwe(long paramLong, CkJwe paramCkJwe, String paramString);
/*       */   
/*       */   public static final native boolean CkJwe_LoadJweSb(long paramLong1, CkJwe paramCkJwe, long paramLong2, CkStringBuilder paramCkStringBuilder);
/*       */   
/*       */   public static final native boolean CkJwe_SaveLastError(long paramLong, CkJwe paramCkJwe, String paramString);
/*       */   
/*       */   public static final native boolean CkJwe_SetAad(long paramLong, CkJwe paramCkJwe, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkJwe_SetAadBd(long paramLong1, CkJwe paramCkJwe, long paramLong2, CkBinData paramCkBinData);
/*       */   
/*       */   public static final native boolean CkJwe_SetPassword(long paramLong, CkJwe paramCkJwe, int paramInt, String paramString);
/*       */   
/*       */   public static final native boolean CkJwe_SetPrivateKey(long paramLong1, CkJwe paramCkJwe, int paramInt, long paramLong2, CkPrivateKey paramCkPrivateKey);
/*       */   
/*       */   public static final native boolean CkJwe_SetProtectedHeader(long paramLong1, CkJwe paramCkJwe, long paramLong2, CkJsonObject paramCkJsonObject);
/*       */   
/*       */   public static final native boolean CkJwe_SetPublicKey(long paramLong1, CkJwe paramCkJwe, int paramInt, long paramLong2, CkPublicKey paramCkPublicKey);
/*       */   
/*       */   public static final native boolean CkJwe_SetRecipientHeader(long paramLong1, CkJwe paramCkJwe, int paramInt, long paramLong2, CkJsonObject paramCkJsonObject);
/*       */   
/*       */   public static final native boolean CkJwe_SetUnprotectedHeader(long paramLong1, CkJwe paramCkJwe, long paramLong2, CkJsonObject paramCkJsonObject);
/*       */   
/*       */   public static final native boolean CkJwe_SetWrappingKey(long paramLong, CkJwe paramCkJwe, int paramInt, String paramString1, String paramString2);
/*       */   
/*       */   public static final native long new_CkJws();
/*       */   
/*       */   public static final native void delete_CkJws(long paramLong);
/*       */   
/*       */   public static final native void CkJws_LastErrorXml(long paramLong1, CkJws paramCkJws, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkJws_LastErrorHtml(long paramLong1, CkJws paramCkJws, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkJws_LastErrorText(long paramLong1, CkJws paramCkJws, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkJws_get_DebugLogFilePath(long paramLong1, CkJws paramCkJws, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkJws_debugLogFilePath(long paramLong, CkJws paramCkJws);
/*       */   
/*       */   public static final native void CkJws_put_DebugLogFilePath(long paramLong, CkJws paramCkJws, String paramString);
/*       */   
/*       */   public static final native void CkJws_get_LastErrorHtml(long paramLong1, CkJws paramCkJws, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkJws_lastErrorHtml(long paramLong, CkJws paramCkJws);
/*       */   
/*       */   public static final native void CkJws_get_LastErrorText(long paramLong1, CkJws paramCkJws, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkJws_lastErrorText(long paramLong, CkJws paramCkJws);
/*       */   
/*       */   public static final native void CkJws_get_LastErrorXml(long paramLong1, CkJws paramCkJws, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkJws_lastErrorXml(long paramLong, CkJws paramCkJws);
/*       */   
/*       */   public static final native boolean CkJws_get_LastMethodSuccess(long paramLong, CkJws paramCkJws);
/*       */   
/*       */   public static final native void CkJws_put_LastMethodSuccess(long paramLong, CkJws paramCkJws, boolean paramBoolean);
/*       */   
/*       */   public static final native int CkJws_get_NumSignatures(long paramLong, CkJws paramCkJws);
/*       */   
/*       */   public static final native boolean CkJws_get_PreferCompact(long paramLong, CkJws paramCkJws);
/*       */   
/*       */   public static final native void CkJws_put_PreferCompact(long paramLong, CkJws paramCkJws, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkJws_get_PreferFlattened(long paramLong, CkJws paramCkJws);
/*       */   
/*       */   public static final native void CkJws_put_PreferFlattened(long paramLong, CkJws paramCkJws, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkJws_get_VerboseLogging(long paramLong, CkJws paramCkJws);
/*       */   
/*       */   public static final native void CkJws_put_VerboseLogging(long paramLong, CkJws paramCkJws, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkJws_get_Version(long paramLong1, CkJws paramCkJws, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkJws_version(long paramLong, CkJws paramCkJws);
/*       */   
/*       */   public static final native boolean CkJws_CreateJws(long paramLong1, CkJws paramCkJws, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkJws_createJws(long paramLong, CkJws paramCkJws);
/*       */   
/*       */   public static final native boolean CkJws_CreateJwsSb(long paramLong1, CkJws paramCkJws, long paramLong2, CkStringBuilder paramCkStringBuilder);
/*       */   
/*       */   public static final native boolean CkJws_GetPayload(long paramLong1, CkJws paramCkJws, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkJws_getPayload(long paramLong, CkJws paramCkJws, String paramString);
/*       */   
/*       */   public static final native String CkJws_payload(long paramLong, CkJws paramCkJws, String paramString);
/*       */   
/*       */   public static final native boolean CkJws_GetPayloadBd(long paramLong1, CkJws paramCkJws, long paramLong2, CkBinData paramCkBinData);
/*       */   
/*       */   public static final native boolean CkJws_GetPayloadSb(long paramLong1, CkJws paramCkJws, String paramString, long paramLong2, CkStringBuilder paramCkStringBuilder);
/*       */   
/*       */   public static final native long CkJws_GetProtectedHeader(long paramLong, CkJws paramCkJws, int paramInt);
/*       */   
/*       */   public static final native long CkJws_GetUnprotectedHeader(long paramLong, CkJws paramCkJws, int paramInt);
/*       */   
/*       */   public static final native boolean CkJws_LoadJws(long paramLong, CkJws paramCkJws, String paramString);
/*       */   
/*       */   public static final native boolean CkJws_LoadJwsSb(long paramLong1, CkJws paramCkJws, long paramLong2, CkStringBuilder paramCkStringBuilder);
/*       */   
/*       */   public static final native boolean CkJws_SaveLastError(long paramLong, CkJws paramCkJws, String paramString);
/*       */   
/*       */   public static final native boolean CkJws_SetMacKey(long paramLong, CkJws paramCkJws, int paramInt, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkJws_SetMacKeyBd(long paramLong1, CkJws paramCkJws, int paramInt, long paramLong2, CkBinData paramCkBinData);
/*       */   
/*       */   public static final native boolean CkJws_SetPayload(long paramLong, CkJws paramCkJws, String paramString1, String paramString2, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkJws_SetPayloadBd(long paramLong1, CkJws paramCkJws, long paramLong2, CkBinData paramCkBinData);
/*       */   
/*       */   public static final native boolean CkJws_SetPayloadSb(long paramLong1, CkJws paramCkJws, long paramLong2, CkStringBuilder paramCkStringBuilder, String paramString, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkJws_SetPrivateKey(long paramLong1, CkJws paramCkJws, int paramInt, long paramLong2, CkPrivateKey paramCkPrivateKey);
/*       */   
/*       */   public static final native boolean CkJws_SetProtectedHeader(long paramLong1, CkJws paramCkJws, int paramInt, long paramLong2, CkJsonObject paramCkJsonObject);
/*       */   
/*       */   public static final native boolean CkJws_SetPublicKey(long paramLong1, CkJws paramCkJws, int paramInt, long paramLong2, CkPublicKey paramCkPublicKey);
/*       */   
/*       */   public static final native boolean CkJws_SetUnprotectedHeader(long paramLong1, CkJws paramCkJws, int paramInt, long paramLong2, CkJsonObject paramCkJsonObject);
/*       */   
/*       */   public static final native int CkJws_Validate(long paramLong, CkJws paramCkJws, int paramInt);
/*       */   
/*       */   public static final native long new_CkAuthUtil();
/*       */   
/*       */   public static final native void delete_CkAuthUtil(long paramLong);
/*       */   
/*       */   public static final native void CkAuthUtil_LastErrorXml(long paramLong1, CkAuthUtil paramCkAuthUtil, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkAuthUtil_LastErrorHtml(long paramLong1, CkAuthUtil paramCkAuthUtil, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkAuthUtil_LastErrorText(long paramLong1, CkAuthUtil paramCkAuthUtil, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkAuthUtil_get_DebugLogFilePath(long paramLong1, CkAuthUtil paramCkAuthUtil, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkAuthUtil_debugLogFilePath(long paramLong, CkAuthUtil paramCkAuthUtil);
/*       */   
/*       */   public static final native void CkAuthUtil_put_DebugLogFilePath(long paramLong, CkAuthUtil paramCkAuthUtil, String paramString);
/*       */   
/*       */   public static final native void CkAuthUtil_get_LastErrorHtml(long paramLong1, CkAuthUtil paramCkAuthUtil, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkAuthUtil_lastErrorHtml(long paramLong, CkAuthUtil paramCkAuthUtil);
/*       */   
/*       */   public static final native void CkAuthUtil_get_LastErrorText(long paramLong1, CkAuthUtil paramCkAuthUtil, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkAuthUtil_lastErrorText(long paramLong, CkAuthUtil paramCkAuthUtil);
/*       */   
/*       */   public static final native void CkAuthUtil_get_LastErrorXml(long paramLong1, CkAuthUtil paramCkAuthUtil, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkAuthUtil_lastErrorXml(long paramLong, CkAuthUtil paramCkAuthUtil);
/*       */   
/*       */   public static final native boolean CkAuthUtil_get_LastMethodSuccess(long paramLong, CkAuthUtil paramCkAuthUtil);
/*       */   
/*       */   public static final native void CkAuthUtil_put_LastMethodSuccess(long paramLong, CkAuthUtil paramCkAuthUtil, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkAuthUtil_get_VerboseLogging(long paramLong, CkAuthUtil paramCkAuthUtil);
/*       */   
/*       */   public static final native void CkAuthUtil_put_VerboseLogging(long paramLong, CkAuthUtil paramCkAuthUtil, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkAuthUtil_get_Version(long paramLong1, CkAuthUtil paramCkAuthUtil, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkAuthUtil_version(long paramLong, CkAuthUtil paramCkAuthUtil);
/*       */   
/*       */   public static final native boolean CkAuthUtil_SaveLastError(long paramLong, CkAuthUtil paramCkAuthUtil, String paramString);
/*       */   
/*       */   public static final native boolean CkAuthUtil_WalmartSignature(long paramLong1, CkAuthUtil paramCkAuthUtil, String paramString1, String paramString2, String paramString3, String paramString4, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkAuthUtil_walmartSignature(long paramLong, CkAuthUtil paramCkAuthUtil, String paramString1, String paramString2, String paramString3, String paramString4);
/*       */   
/*       */   public static final native long new_CkXmlDSig();
/*       */   
/*       */   public static final native void delete_CkXmlDSig(long paramLong);
/*       */   
/*       */   public static final native void CkXmlDSig_LastErrorXml(long paramLong1, CkXmlDSig paramCkXmlDSig, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkXmlDSig_LastErrorHtml(long paramLong1, CkXmlDSig paramCkXmlDSig, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkXmlDSig_LastErrorText(long paramLong1, CkXmlDSig paramCkXmlDSig, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkXmlDSig_get_DebugLogFilePath(long paramLong1, CkXmlDSig paramCkXmlDSig, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkXmlDSig_debugLogFilePath(long paramLong, CkXmlDSig paramCkXmlDSig);
/*       */   
/*       */   public static final native void CkXmlDSig_put_DebugLogFilePath(long paramLong, CkXmlDSig paramCkXmlDSig, String paramString);
/*       */   
/*       */   public static final native void CkXmlDSig_get_LastErrorHtml(long paramLong1, CkXmlDSig paramCkXmlDSig, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkXmlDSig_lastErrorHtml(long paramLong, CkXmlDSig paramCkXmlDSig);
/*       */   
/*       */   public static final native void CkXmlDSig_get_LastErrorText(long paramLong1, CkXmlDSig paramCkXmlDSig, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkXmlDSig_lastErrorText(long paramLong, CkXmlDSig paramCkXmlDSig);
/*       */   
/*       */   public static final native void CkXmlDSig_get_LastErrorXml(long paramLong1, CkXmlDSig paramCkXmlDSig, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkXmlDSig_lastErrorXml(long paramLong, CkXmlDSig paramCkXmlDSig);
/*       */   
/*       */   public static final native boolean CkXmlDSig_get_LastMethodSuccess(long paramLong, CkXmlDSig paramCkXmlDSig);
/*       */   
/*       */   public static final native void CkXmlDSig_put_LastMethodSuccess(long paramLong, CkXmlDSig paramCkXmlDSig, boolean paramBoolean);
/*       */   
/*       */   public static final native int CkXmlDSig_get_NumReferences(long paramLong, CkXmlDSig paramCkXmlDSig);
/*       */   
/*       */   public static final native int CkXmlDSig_get_NumSignatures(long paramLong, CkXmlDSig paramCkXmlDSig);
/*       */   
/*       */   public static final native int CkXmlDSig_get_Selector(long paramLong, CkXmlDSig paramCkXmlDSig);
/*       */   
/*       */   public static final native void CkXmlDSig_put_Selector(long paramLong, CkXmlDSig paramCkXmlDSig, int paramInt);
/*       */   
/*       */   public static final native boolean CkXmlDSig_get_VerboseLogging(long paramLong, CkXmlDSig paramCkXmlDSig);
/*       */   
/*       */   public static final native void CkXmlDSig_put_VerboseLogging(long paramLong, CkXmlDSig paramCkXmlDSig, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkXmlDSig_get_Version(long paramLong1, CkXmlDSig paramCkXmlDSig, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkXmlDSig_version(long paramLong, CkXmlDSig paramCkXmlDSig);
/*       */   
/*       */   public static final native boolean CkXmlDSig_get_WithComments(long paramLong, CkXmlDSig paramCkXmlDSig);
/*       */   
/*       */   public static final native void CkXmlDSig_put_WithComments(long paramLong, CkXmlDSig paramCkXmlDSig, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkXmlDSig_CanonicalizeFragment(long paramLong1, CkXmlDSig paramCkXmlDSig, String paramString1, String paramString2, String paramString3, String paramString4, boolean paramBoolean, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkXmlDSig_canonicalizeFragment(long paramLong, CkXmlDSig paramCkXmlDSig, String paramString1, String paramString2, String paramString3, String paramString4, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkXmlDSig_CanonicalizeXml(long paramLong1, CkXmlDSig paramCkXmlDSig, String paramString1, String paramString2, boolean paramBoolean, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkXmlDSig_canonicalizeXml(long paramLong, CkXmlDSig paramCkXmlDSig, String paramString1, String paramString2, boolean paramBoolean);
/*       */   
/*       */   public static final native long CkXmlDSig_GetKeyInfo(long paramLong, CkXmlDSig paramCkXmlDSig);
/*       */   
/*       */   public static final native long CkXmlDSig_GetPublicKey(long paramLong, CkXmlDSig paramCkXmlDSig);
/*       */   
/*       */   public static final native boolean CkXmlDSig_IsReferenceExternal(long paramLong, CkXmlDSig paramCkXmlDSig, int paramInt);
/*       */   
/*       */   public static final native boolean CkXmlDSig_LoadSignature(long paramLong, CkXmlDSig paramCkXmlDSig, String paramString);
/*       */   
/*       */   public static final native boolean CkXmlDSig_LoadSignatureBd(long paramLong1, CkXmlDSig paramCkXmlDSig, long paramLong2, CkBinData paramCkBinData);
/*       */   
/*       */   public static final native boolean CkXmlDSig_LoadSignatureSb(long paramLong1, CkXmlDSig paramCkXmlDSig, long paramLong2, CkStringBuilder paramCkStringBuilder);
/*       */   
/*       */   public static final native boolean CkXmlDSig_ReferenceUri(long paramLong1, CkXmlDSig paramCkXmlDSig, int paramInt, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkXmlDSig_referenceUri(long paramLong, CkXmlDSig paramCkXmlDSig, int paramInt);
/*       */   
/*       */   public static final native boolean CkXmlDSig_SaveLastError(long paramLong, CkXmlDSig paramCkXmlDSig, String paramString);
/*       */   
/*       */   public static final native boolean CkXmlDSig_SetHmacKey(long paramLong, CkXmlDSig paramCkXmlDSig, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkXmlDSig_SetPublicKey(long paramLong1, CkXmlDSig paramCkXmlDSig, long paramLong2, CkPublicKey paramCkPublicKey);
/*       */   
/*       */   public static final native boolean CkXmlDSig_SetRefDataBd(long paramLong1, CkXmlDSig paramCkXmlDSig, int paramInt, long paramLong2, CkBinData paramCkBinData);
/*       */   
/*       */   public static final native boolean CkXmlDSig_SetRefDataFile(long paramLong, CkXmlDSig paramCkXmlDSig, int paramInt, String paramString);
/*       */   
/*       */   public static final native boolean CkXmlDSig_SetRefDataSb(long paramLong1, CkXmlDSig paramCkXmlDSig, int paramInt, long paramLong2, CkStringBuilder paramCkStringBuilder, String paramString);
/*       */   
/*       */   public static final native boolean CkXmlDSig_UseCertVault(long paramLong1, CkXmlDSig paramCkXmlDSig, long paramLong2, CkXmlCertVault paramCkXmlCertVault);
/*       */   
/*       */   public static final native boolean CkXmlDSig_VerifyReferenceDigest(long paramLong, CkXmlDSig paramCkXmlDSig, int paramInt);
/*       */   
/*       */   public static final native boolean CkXmlDSig_VerifySignature(long paramLong, CkXmlDSig paramCkXmlDSig, boolean paramBoolean);
/*       */   
/*       */   public static final native long new_CkXmlDSigGen();
/*       */   
/*       */   public static final native void delete_CkXmlDSigGen(long paramLong);
/*       */   
/*       */   public static final native void CkXmlDSigGen_LastErrorXml(long paramLong1, CkXmlDSigGen paramCkXmlDSigGen, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkXmlDSigGen_LastErrorHtml(long paramLong1, CkXmlDSigGen paramCkXmlDSigGen, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkXmlDSigGen_LastErrorText(long paramLong1, CkXmlDSigGen paramCkXmlDSigGen, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkXmlDSigGen_get_Behaviors(long paramLong1, CkXmlDSigGen paramCkXmlDSigGen, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkXmlDSigGen_behaviors(long paramLong, CkXmlDSigGen paramCkXmlDSigGen);
/*       */   
/*       */   public static final native void CkXmlDSigGen_put_Behaviors(long paramLong, CkXmlDSigGen paramCkXmlDSigGen, String paramString);
/*       */   
/*       */   public static final native void CkXmlDSigGen_get_CustomKeyInfoXml(long paramLong1, CkXmlDSigGen paramCkXmlDSigGen, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkXmlDSigGen_customKeyInfoXml(long paramLong, CkXmlDSigGen paramCkXmlDSigGen);
/*       */   
/*       */   public static final native void CkXmlDSigGen_put_CustomKeyInfoXml(long paramLong, CkXmlDSigGen paramCkXmlDSigGen, String paramString);
/*       */   
/*       */   public static final native void CkXmlDSigGen_get_DebugLogFilePath(long paramLong1, CkXmlDSigGen paramCkXmlDSigGen, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkXmlDSigGen_debugLogFilePath(long paramLong, CkXmlDSigGen paramCkXmlDSigGen);
/*       */   
/*       */   public static final native void CkXmlDSigGen_put_DebugLogFilePath(long paramLong, CkXmlDSigGen paramCkXmlDSigGen, String paramString);
/*       */   
/*       */   public static final native void CkXmlDSigGen_get_IncNamespacePrefix(long paramLong1, CkXmlDSigGen paramCkXmlDSigGen, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkXmlDSigGen_incNamespacePrefix(long paramLong, CkXmlDSigGen paramCkXmlDSigGen);
/*       */   
/*       */   public static final native void CkXmlDSigGen_put_IncNamespacePrefix(long paramLong, CkXmlDSigGen paramCkXmlDSigGen, String paramString);
/*       */   
/*       */   public static final native void CkXmlDSigGen_get_IncNamespaceUri(long paramLong1, CkXmlDSigGen paramCkXmlDSigGen, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkXmlDSigGen_incNamespaceUri(long paramLong, CkXmlDSigGen paramCkXmlDSigGen);
/*       */   
/*       */   public static final native void CkXmlDSigGen_put_IncNamespaceUri(long paramLong, CkXmlDSigGen paramCkXmlDSigGen, String paramString);
/*       */   
/*       */   public static final native void CkXmlDSigGen_get_KeyInfoId(long paramLong1, CkXmlDSigGen paramCkXmlDSigGen, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkXmlDSigGen_keyInfoId(long paramLong, CkXmlDSigGen paramCkXmlDSigGen);
/*       */   
/*       */   public static final native void CkXmlDSigGen_put_KeyInfoId(long paramLong, CkXmlDSigGen paramCkXmlDSigGen, String paramString);
/*       */   
/*       */   public static final native void CkXmlDSigGen_get_KeyInfoKeyName(long paramLong1, CkXmlDSigGen paramCkXmlDSigGen, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkXmlDSigGen_keyInfoKeyName(long paramLong, CkXmlDSigGen paramCkXmlDSigGen);
/*       */   
/*       */   public static final native void CkXmlDSigGen_put_KeyInfoKeyName(long paramLong, CkXmlDSigGen paramCkXmlDSigGen, String paramString);
/*       */   
/*       */   public static final native void CkXmlDSigGen_get_KeyInfoType(long paramLong1, CkXmlDSigGen paramCkXmlDSigGen, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkXmlDSigGen_keyInfoType(long paramLong, CkXmlDSigGen paramCkXmlDSigGen);
/*       */   
/*       */   public static final native void CkXmlDSigGen_put_KeyInfoType(long paramLong, CkXmlDSigGen paramCkXmlDSigGen, String paramString);
/*       */   
/*       */   public static final native void CkXmlDSigGen_get_LastErrorHtml(long paramLong1, CkXmlDSigGen paramCkXmlDSigGen, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkXmlDSigGen_lastErrorHtml(long paramLong, CkXmlDSigGen paramCkXmlDSigGen);
/*       */   
/*       */   public static final native void CkXmlDSigGen_get_LastErrorText(long paramLong1, CkXmlDSigGen paramCkXmlDSigGen, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkXmlDSigGen_lastErrorText(long paramLong, CkXmlDSigGen paramCkXmlDSigGen);
/*       */   
/*       */   public static final native void CkXmlDSigGen_get_LastErrorXml(long paramLong1, CkXmlDSigGen paramCkXmlDSigGen, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkXmlDSigGen_lastErrorXml(long paramLong, CkXmlDSigGen paramCkXmlDSigGen);
/*       */   
/*       */   public static final native boolean CkXmlDSigGen_get_LastMethodSuccess(long paramLong, CkXmlDSigGen paramCkXmlDSigGen);
/*       */   
/*       */   public static final native void CkXmlDSigGen_put_LastMethodSuccess(long paramLong, CkXmlDSigGen paramCkXmlDSigGen, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkXmlDSigGen_get_SigId(long paramLong1, CkXmlDSigGen paramCkXmlDSigGen, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkXmlDSigGen_sigId(long paramLong, CkXmlDSigGen paramCkXmlDSigGen);
/*       */   
/*       */   public static final native void CkXmlDSigGen_put_SigId(long paramLong, CkXmlDSigGen paramCkXmlDSigGen, String paramString);
/*       */   
/*       */   public static final native void CkXmlDSigGen_get_SigLocation(long paramLong1, CkXmlDSigGen paramCkXmlDSigGen, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkXmlDSigGen_sigLocation(long paramLong, CkXmlDSigGen paramCkXmlDSigGen);
/*       */   
/*       */   public static final native void CkXmlDSigGen_put_SigLocation(long paramLong, CkXmlDSigGen paramCkXmlDSigGen, String paramString);
/*       */   
/*       */   public static final native void CkXmlDSigGen_get_SigNamespacePrefix(long paramLong1, CkXmlDSigGen paramCkXmlDSigGen, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkXmlDSigGen_sigNamespacePrefix(long paramLong, CkXmlDSigGen paramCkXmlDSigGen);
/*       */   
/*       */   public static final native void CkXmlDSigGen_put_SigNamespacePrefix(long paramLong, CkXmlDSigGen paramCkXmlDSigGen, String paramString);
/*       */   
/*       */   public static final native void CkXmlDSigGen_get_SigNamespaceUri(long paramLong1, CkXmlDSigGen paramCkXmlDSigGen, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkXmlDSigGen_sigNamespaceUri(long paramLong, CkXmlDSigGen paramCkXmlDSigGen);
/*       */   
/*       */   public static final native void CkXmlDSigGen_put_SigNamespaceUri(long paramLong, CkXmlDSigGen paramCkXmlDSigGen, String paramString);
/*       */   
/*       */   public static final native void CkXmlDSigGen_get_SignedInfoCanonAlg(long paramLong1, CkXmlDSigGen paramCkXmlDSigGen, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkXmlDSigGen_signedInfoCanonAlg(long paramLong, CkXmlDSigGen paramCkXmlDSigGen);
/*       */   
/*       */   public static final native void CkXmlDSigGen_put_SignedInfoCanonAlg(long paramLong, CkXmlDSigGen paramCkXmlDSigGen, String paramString);
/*       */   
/*       */   public static final native void CkXmlDSigGen_get_SignedInfoDigestMethod(long paramLong1, CkXmlDSigGen paramCkXmlDSigGen, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkXmlDSigGen_signedInfoDigestMethod(long paramLong, CkXmlDSigGen paramCkXmlDSigGen);
/*       */   
/*       */   public static final native void CkXmlDSigGen_put_SignedInfoDigestMethod(long paramLong, CkXmlDSigGen paramCkXmlDSigGen, String paramString);
/*       */   
/*       */   public static final native void CkXmlDSigGen_get_SignedInfoId(long paramLong1, CkXmlDSigGen paramCkXmlDSigGen, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkXmlDSigGen_signedInfoId(long paramLong, CkXmlDSigGen paramCkXmlDSigGen);
/*       */   
/*       */   public static final native void CkXmlDSigGen_put_SignedInfoId(long paramLong, CkXmlDSigGen paramCkXmlDSigGen, String paramString);
/*       */   
/*       */   public static final native void CkXmlDSigGen_get_SignedInfoPrefixList(long paramLong1, CkXmlDSigGen paramCkXmlDSigGen, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkXmlDSigGen_signedInfoPrefixList(long paramLong, CkXmlDSigGen paramCkXmlDSigGen);
/*       */   
/*       */   public static final native void CkXmlDSigGen_put_SignedInfoPrefixList(long paramLong, CkXmlDSigGen paramCkXmlDSigGen, String paramString);
/*       */   
/*       */   public static final native void CkXmlDSigGen_get_SigningAlg(long paramLong1, CkXmlDSigGen paramCkXmlDSigGen, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkXmlDSigGen_signingAlg(long paramLong, CkXmlDSigGen paramCkXmlDSigGen);
/*       */   
/*       */   public static final native void CkXmlDSigGen_put_SigningAlg(long paramLong, CkXmlDSigGen paramCkXmlDSigGen, String paramString);
/*       */   
/*       */   public static final native void CkXmlDSigGen_get_SigValueId(long paramLong1, CkXmlDSigGen paramCkXmlDSigGen, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkXmlDSigGen_sigValueId(long paramLong, CkXmlDSigGen paramCkXmlDSigGen);
/*       */   
/*       */   public static final native void CkXmlDSigGen_put_SigValueId(long paramLong, CkXmlDSigGen paramCkXmlDSigGen, String paramString);
/*       */   
/*       */   public static final native boolean CkXmlDSigGen_get_VerboseLogging(long paramLong, CkXmlDSigGen paramCkXmlDSigGen);
/*       */   
/*       */   public static final native void CkXmlDSigGen_put_VerboseLogging(long paramLong, CkXmlDSigGen paramCkXmlDSigGen, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkXmlDSigGen_get_Version(long paramLong1, CkXmlDSigGen paramCkXmlDSigGen, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkXmlDSigGen_version(long paramLong, CkXmlDSigGen paramCkXmlDSigGen);
/*       */   
/*       */   public static final native void CkXmlDSigGen_get_X509Type(long paramLong1, CkXmlDSigGen paramCkXmlDSigGen, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkXmlDSigGen_x509Type(long paramLong, CkXmlDSigGen paramCkXmlDSigGen);
/*       */   
/*       */   public static final native void CkXmlDSigGen_put_X509Type(long paramLong, CkXmlDSigGen paramCkXmlDSigGen, String paramString);
/*       */   
/*       */   public static final native boolean CkXmlDSigGen_AddEnvelopedRef(long paramLong1, CkXmlDSigGen paramCkXmlDSigGen, String paramString1, long paramLong2, CkStringBuilder paramCkStringBuilder, String paramString2, String paramString3, String paramString4);
/*       */   
/*       */   public static final native boolean CkXmlDSigGen_AddExternalBinaryRef(long paramLong1, CkXmlDSigGen paramCkXmlDSigGen, String paramString1, long paramLong2, CkBinData paramCkBinData, String paramString2, String paramString3);
/*       */   
/*       */   public static final native boolean CkXmlDSigGen_AddExternalFileRef(long paramLong, CkXmlDSigGen paramCkXmlDSigGen, String paramString1, String paramString2, String paramString3, String paramString4);
/*       */   
/*       */   public static final native boolean CkXmlDSigGen_AddExternalTextRef(long paramLong1, CkXmlDSigGen paramCkXmlDSigGen, String paramString1, long paramLong2, CkStringBuilder paramCkStringBuilder, String paramString2, boolean paramBoolean, String paramString3, String paramString4);
/*       */   
/*       */   public static final native boolean CkXmlDSigGen_AddExternalXmlRef(long paramLong1, CkXmlDSigGen paramCkXmlDSigGen, String paramString1, long paramLong2, CkStringBuilder paramCkStringBuilder, String paramString2, String paramString3, String paramString4);
/*       */   
/*       */   public static final native boolean CkXmlDSigGen_AddObject(long paramLong, CkXmlDSigGen paramCkXmlDSigGen, String paramString1, String paramString2, String paramString3, String paramString4);
/*       */   
/*       */   public static final native boolean CkXmlDSigGen_AddObjectRef(long paramLong, CkXmlDSigGen paramCkXmlDSigGen, String paramString1, String paramString2, String paramString3, String paramString4, String paramString5);
/*       */   
/*       */   public static final native boolean CkXmlDSigGen_AddSameDocRef(long paramLong, CkXmlDSigGen paramCkXmlDSigGen, String paramString1, String paramString2, String paramString3, String paramString4, String paramString5);
/*       */   
/*       */   public static final native boolean CkXmlDSigGen_AddSignatureNamespace(long paramLong, CkXmlDSigGen paramCkXmlDSigGen, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkXmlDSigGen_ConstructSignedInfo(long paramLong1, CkXmlDSigGen paramCkXmlDSigGen, long paramLong2, CkStringBuilder paramCkStringBuilder, long paramLong3, CkString paramCkString);
/*       */   
/*       */   public static final native String CkXmlDSigGen_constructSignedInfo(long paramLong1, CkXmlDSigGen paramCkXmlDSigGen, long paramLong2, CkStringBuilder paramCkStringBuilder);
/*       */   
/*       */   public static final native boolean CkXmlDSigGen_CreateXmlDSig(long paramLong1, CkXmlDSigGen paramCkXmlDSigGen, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkXmlDSigGen_createXmlDSig(long paramLong, CkXmlDSigGen paramCkXmlDSigGen, String paramString);
/*       */   
/*       */   public static final native boolean CkXmlDSigGen_CreateXmlDSigSb(long paramLong1, CkXmlDSigGen paramCkXmlDSigGen, long paramLong2, CkStringBuilder paramCkStringBuilder);
/*       */   
/*       */   public static final native boolean CkXmlDSigGen_SaveLastError(long paramLong, CkXmlDSigGen paramCkXmlDSigGen, String paramString);
/*       */   
/*       */   public static final native boolean CkXmlDSigGen_SetHmacKey(long paramLong, CkXmlDSigGen paramCkXmlDSigGen, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkXmlDSigGen_SetPrivateKey(long paramLong1, CkXmlDSigGen paramCkXmlDSigGen, long paramLong2, CkPrivateKey paramCkPrivateKey);
/*       */   
/*       */   public static final native boolean CkXmlDSigGen_SetRefIdAttr(long paramLong, CkXmlDSigGen paramCkXmlDSigGen, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkXmlDSigGen_SetX509Cert(long paramLong1, CkXmlDSigGen paramCkXmlDSigGen, long paramLong2, CkCert paramCkCert, boolean paramBoolean);
/*       */   
/*       */   public static final native long new_CkWebSocket();
/*       */   
/*       */   public static final native void delete_CkWebSocket(long paramLong);
/*       */   
/*       */   public static final native void CkWebSocket_LastErrorXml(long paramLong1, CkWebSocket paramCkWebSocket, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkWebSocket_LastErrorHtml(long paramLong1, CkWebSocket paramCkWebSocket, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkWebSocket_LastErrorText(long paramLong1, CkWebSocket paramCkWebSocket, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native void CkWebSocket_put_EventCallbackObject(long paramLong1, CkWebSocket paramCkWebSocket, long paramLong2, CkBaseProgress paramCkBaseProgress);
/*       */   
/*       */   public static final native boolean CkWebSocket_get_CloseAutoRespond(long paramLong, CkWebSocket paramCkWebSocket);
/*       */   
/*       */   public static final native void CkWebSocket_put_CloseAutoRespond(long paramLong, CkWebSocket paramCkWebSocket, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkWebSocket_get_CloseReason(long paramLong1, CkWebSocket paramCkWebSocket, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkWebSocket_closeReason(long paramLong, CkWebSocket paramCkWebSocket);
/*       */   
/*       */   public static final native boolean CkWebSocket_get_CloseReceived(long paramLong, CkWebSocket paramCkWebSocket);
/*       */   
/*       */   public static final native int CkWebSocket_get_CloseStatusCode(long paramLong, CkWebSocket paramCkWebSocket);
/*       */   
/*       */   public static final native void CkWebSocket_get_DebugLogFilePath(long paramLong1, CkWebSocket paramCkWebSocket, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkWebSocket_debugLogFilePath(long paramLong, CkWebSocket paramCkWebSocket);
/*       */   
/*       */   public static final native void CkWebSocket_put_DebugLogFilePath(long paramLong, CkWebSocket paramCkWebSocket, String paramString);
/*       */   
/*       */   public static final native boolean CkWebSocket_get_FinalFrame(long paramLong, CkWebSocket paramCkWebSocket);
/*       */   
/*       */   public static final native int CkWebSocket_get_FrameDataLen(long paramLong, CkWebSocket paramCkWebSocket);
/*       */   
/*       */   public static final native void CkWebSocket_get_FrameOpcode(long paramLong1, CkWebSocket paramCkWebSocket, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkWebSocket_frameOpcode(long paramLong, CkWebSocket paramCkWebSocket);
/*       */   
/*       */   public static final native int CkWebSocket_get_FrameOpcodeInt(long paramLong, CkWebSocket paramCkWebSocket);
/*       */   
/*       */   public static final native int CkWebSocket_get_IdleTimeoutMs(long paramLong, CkWebSocket paramCkWebSocket);
/*       */   
/*       */   public static final native void CkWebSocket_put_IdleTimeoutMs(long paramLong, CkWebSocket paramCkWebSocket, int paramInt);
/*       */   
/*       */   public static final native boolean CkWebSocket_get_IsConnected(long paramLong, CkWebSocket paramCkWebSocket);
/*       */   
/*       */   public static final native void CkWebSocket_get_LastErrorHtml(long paramLong1, CkWebSocket paramCkWebSocket, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkWebSocket_lastErrorHtml(long paramLong, CkWebSocket paramCkWebSocket);
/*       */   
/*       */   public static final native void CkWebSocket_get_LastErrorText(long paramLong1, CkWebSocket paramCkWebSocket, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkWebSocket_lastErrorText(long paramLong, CkWebSocket paramCkWebSocket);
/*       */   
/*       */   public static final native void CkWebSocket_get_LastErrorXml(long paramLong1, CkWebSocket paramCkWebSocket, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkWebSocket_lastErrorXml(long paramLong, CkWebSocket paramCkWebSocket);
/*       */   
/*       */   public static final native boolean CkWebSocket_get_LastMethodSuccess(long paramLong, CkWebSocket paramCkWebSocket);
/*       */   
/*       */   public static final native void CkWebSocket_put_LastMethodSuccess(long paramLong, CkWebSocket paramCkWebSocket, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkWebSocket_get_NeedSendPong(long paramLong, CkWebSocket paramCkWebSocket);
/*       */   
/*       */   public static final native boolean CkWebSocket_get_PingAutoRespond(long paramLong, CkWebSocket paramCkWebSocket);
/*       */   
/*       */   public static final native void CkWebSocket_put_PingAutoRespond(long paramLong, CkWebSocket paramCkWebSocket, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkWebSocket_get_PongAutoConsume(long paramLong, CkWebSocket paramCkWebSocket);
/*       */   
/*       */   public static final native void CkWebSocket_put_PongAutoConsume(long paramLong, CkWebSocket paramCkWebSocket, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkWebSocket_get_PongConsumed(long paramLong, CkWebSocket paramCkWebSocket);
/*       */   
/*       */   public static final native int CkWebSocket_get_ReadFrameFailReason(long paramLong, CkWebSocket paramCkWebSocket);
/*       */   
/*       */   public static final native boolean CkWebSocket_get_VerboseLogging(long paramLong, CkWebSocket paramCkWebSocket);
/*       */   
/*       */   public static final native void CkWebSocket_put_VerboseLogging(long paramLong, CkWebSocket paramCkWebSocket, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkWebSocket_get_Version(long paramLong1, CkWebSocket paramCkWebSocket, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkWebSocket_version(long paramLong, CkWebSocket paramCkWebSocket);
/*       */   
/*       */   public static final native boolean CkWebSocket_AddClientHeaders(long paramLong, CkWebSocket paramCkWebSocket);
/*       */   
/*       */   public static final native boolean CkWebSocket_CloseConnection(long paramLong, CkWebSocket paramCkWebSocket);
/*       */   
/*       */   public static final native boolean CkWebSocket_GetFrameData(long paramLong1, CkWebSocket paramCkWebSocket, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkWebSocket_getFrameData(long paramLong, CkWebSocket paramCkWebSocket);
/*       */   
/*       */   public static final native String CkWebSocket_frameData(long paramLong, CkWebSocket paramCkWebSocket);
/*       */   
/*       */   public static final native boolean CkWebSocket_GetFrameDataBd(long paramLong1, CkWebSocket paramCkWebSocket, long paramLong2, CkBinData paramCkBinData);
/*       */   
/*       */   public static final native boolean CkWebSocket_GetFrameDataSb(long paramLong1, CkWebSocket paramCkWebSocket, long paramLong2, CkStringBuilder paramCkStringBuilder);
/*       */   
/*       */   public static final native boolean CkWebSocket_PollDataAvailable(long paramLong, CkWebSocket paramCkWebSocket);
/*       */   
/*       */   public static final native boolean CkWebSocket_ReadFrame(long paramLong, CkWebSocket paramCkWebSocket);
/*       */   
/*       */   public static final native long CkWebSocket_ReadFrameAsync(long paramLong, CkWebSocket paramCkWebSocket);
/*       */   
/*       */   public static final native boolean CkWebSocket_SaveLastError(long paramLong, CkWebSocket paramCkWebSocket, String paramString);
/*       */   
/*       */   public static final native boolean CkWebSocket_SendClose(long paramLong, CkWebSocket paramCkWebSocket, boolean paramBoolean, int paramInt, String paramString);
/*       */   
/*       */   public static final native long CkWebSocket_SendCloseAsync(long paramLong, CkWebSocket paramCkWebSocket, boolean paramBoolean, int paramInt, String paramString);
/*       */   
/*       */   public static final native boolean CkWebSocket_SendFrame(long paramLong, CkWebSocket paramCkWebSocket, String paramString, boolean paramBoolean);
/*       */   
/*       */   public static final native long CkWebSocket_SendFrameAsync(long paramLong, CkWebSocket paramCkWebSocket, String paramString, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkWebSocket_SendFrameBd(long paramLong1, CkWebSocket paramCkWebSocket, long paramLong2, CkBinData paramCkBinData, boolean paramBoolean);
/*       */   
/*       */   public static final native long CkWebSocket_SendFrameBdAsync(long paramLong1, CkWebSocket paramCkWebSocket, long paramLong2, CkBinData paramCkBinData, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkWebSocket_SendFrameSb(long paramLong1, CkWebSocket paramCkWebSocket, long paramLong2, CkStringBuilder paramCkStringBuilder, boolean paramBoolean);
/*       */   
/*       */   public static final native long CkWebSocket_SendFrameSbAsync(long paramLong1, CkWebSocket paramCkWebSocket, long paramLong2, CkStringBuilder paramCkStringBuilder, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkWebSocket_SendPing(long paramLong, CkWebSocket paramCkWebSocket, String paramString);
/*       */   
/*       */   public static final native long CkWebSocket_SendPingAsync(long paramLong, CkWebSocket paramCkWebSocket, String paramString);
/*       */   
/*       */   public static final native boolean CkWebSocket_SendPong(long paramLong, CkWebSocket paramCkWebSocket);
/*       */   
/*       */   public static final native long CkWebSocket_SendPongAsync(long paramLong, CkWebSocket paramCkWebSocket);
/*       */   
/*       */   public static final native boolean CkWebSocket_UseConnection(long paramLong1, CkWebSocket paramCkWebSocket, long paramLong2, CkRest paramCkRest);
/*       */   
/*       */   public static final native boolean CkWebSocket_ValidateServerHandshake(long paramLong, CkWebSocket paramCkWebSocket);
/*       */   
/*       */   public static final native long new_CkSecureString();
/*       */   
/*       */   public static final native void delete_CkSecureString(long paramLong);
/*       */   
/*       */   public static final native boolean CkSecureString_get_LastMethodSuccess(long paramLong, CkSecureString paramCkSecureString);
/*       */   
/*       */   public static final native void CkSecureString_put_LastMethodSuccess(long paramLong, CkSecureString paramCkSecureString, boolean paramBoolean);
/*       */   
/*       */   public static final native void CkSecureString_get_MaintainHash(long paramLong1, CkSecureString paramCkSecureString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSecureString_maintainHash(long paramLong, CkSecureString paramCkSecureString);
/*       */   
/*       */   public static final native void CkSecureString_put_MaintainHash(long paramLong, CkSecureString paramCkSecureString, String paramString);
/*       */   
/*       */   public static final native boolean CkSecureString_get_ReadOnly(long paramLong, CkSecureString paramCkSecureString);
/*       */   
/*       */   public static final native void CkSecureString_put_ReadOnly(long paramLong, CkSecureString paramCkSecureString, boolean paramBoolean);
/*       */   
/*       */   public static final native boolean CkSecureString_Access(long paramLong1, CkSecureString paramCkSecureString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSecureString_access(long paramLong, CkSecureString paramCkSecureString);
/*       */   
/*       */   public static final native boolean CkSecureString_Append(long paramLong, CkSecureString paramCkSecureString, String paramString);
/*       */   
/*       */   public static final native boolean CkSecureString_AppendSb(long paramLong1, CkSecureString paramCkSecureString, long paramLong2, CkStringBuilder paramCkStringBuilder);
/*       */   
/*       */   public static final native boolean CkSecureString_AppendSecure(long paramLong1, CkSecureString paramCkSecureString1, long paramLong2, CkSecureString paramCkSecureString2);
/*       */   
/*       */   public static final native boolean CkSecureString_HashVal(long paramLong1, CkSecureString paramCkSecureString, String paramString, long paramLong2, CkString paramCkString);
/*       */   
/*       */   public static final native String CkSecureString_hashVal(long paramLong, CkSecureString paramCkSecureString, String paramString);
/*       */   
/*       */   public static final native boolean CkSecureString_LoadFile(long paramLong, CkSecureString paramCkSecureString, String paramString1, String paramString2);
/*       */   
/*       */   public static final native boolean CkSecureString_SecStrEquals(long paramLong1, CkSecureString paramCkSecureString1, long paramLong2, CkSecureString paramCkSecureString2);
/*       */   
/*       */   public static final native boolean CkSecureString_VerifyHash(long paramLong, CkSecureString paramCkSecureString, String paramString1, String paramString2);
/*       */   
/*       */   public static final native long CkSFtpProgress_SWIGUpcast(long paramLong);
/*       */   
/*       */   public static final native long CkMailManProgress_SWIGUpcast(long paramLong);
/*       */   
/*       */   public static final native long CkHttpProgress_SWIGUpcast(long paramLong);
/*       */   
/*       */   public static final native long CkFtp2Progress_SWIGUpcast(long paramLong);
/*       */   
/*       */   public static final native long CkZipProgress_SWIGUpcast(long paramLong);
/*       */   
/*       */   public static final native long CkTarProgress_SWIGUpcast(long paramLong);
/*       */   
/*       */   public static boolean SwigDirector_CkBaseProgress_AbortCheck(CkBaseProgress var0)
/*       */   {
/* 18433 */     return var0.AbortCheck();
/*       */   }
/*       */   
/*       */   public static boolean SwigDirector_CkBaseProgress_PercentDone(CkBaseProgress var0, int var1) {
/* 18437 */     return var0.PercentDone(var1);
/*       */   }
/*       */   
/*       */   public static void SwigDirector_CkBaseProgress_ProgressInfo(CkBaseProgress var0, String var1, String var2) {
/* 18441 */     var0.ProgressInfo(var1, var2);
/*       */   }
/*       */   
/*       */   public static void SwigDirector_CkBaseProgress_TaskCompleted(CkBaseProgress var0, long var1) {
/* 18445 */     var0.TaskCompleted(new CkTask(var1, false));
/*       */   }
/*       */   
/*       */   public static void SwigDirector_CkBaseProgress_TextData(CkBaseProgress var0, String var1) {
/* 18449 */     var0.TextData(var1);
/*       */   }
/*       */   
/*       */   public static boolean SwigDirector_CkSFtpProgress_AbortCheck(CkSFtpProgress var0) {
/* 18453 */     return var0.AbortCheck();
/*       */   }
/*       */   
/*       */   public static boolean SwigDirector_CkSFtpProgress_PercentDone(CkSFtpProgress var0, int var1) {
/* 18457 */     return var0.PercentDone(var1);
/*       */   }
/*       */   
/*       */   public static void SwigDirector_CkSFtpProgress_ProgressInfo(CkSFtpProgress var0, String var1, String var2) {
/* 18461 */     var0.ProgressInfo(var1, var2);
/*       */   }
/*       */   
/*       */   public static void SwigDirector_CkSFtpProgress_TaskCompleted(CkSFtpProgress var0, long var1) {
/* 18465 */     var0.TaskCompleted(new CkTask(var1, false));
/*       */   }
/*       */   
/*       */   public static void SwigDirector_CkSFtpProgress_TextData(CkSFtpProgress var0, String var1) {
/* 18469 */     var0.TextData(var1);
/*       */   }
/*       */   
/*       */   public static void SwigDirector_CkSFtpProgress_UploadRate(CkSFtpProgress var0, long var1, long var3) {
/* 18473 */     var0.UploadRate(var1, var3);
/*       */   }
/*       */   
/*       */   public static void SwigDirector_CkSFtpProgress_DownloadRate(CkSFtpProgress var0, long var1, long var3) {
/* 18477 */     var0.DownloadRate(var1, var3);
/*       */   }
/*       */   
/*       */   public static boolean SwigDirector_CkMailManProgress_AbortCheck(CkMailManProgress var0) {
/* 18481 */     return var0.AbortCheck();
/*       */   }
/*       */   
/*       */   public static boolean SwigDirector_CkMailManProgress_PercentDone(CkMailManProgress var0, int var1) {
/* 18485 */     return var0.PercentDone(var1);
/*       */   }
/*       */   
/*       */   public static void SwigDirector_CkMailManProgress_ProgressInfo(CkMailManProgress var0, String var1, String var2) {
/* 18489 */     var0.ProgressInfo(var1, var2);
/*       */   }
/*       */   
/*       */   public static void SwigDirector_CkMailManProgress_TaskCompleted(CkMailManProgress var0, long var1) {
/* 18493 */     var0.TaskCompleted(new CkTask(var1, false));
/*       */   }
/*       */   
/*       */   public static void SwigDirector_CkMailManProgress_TextData(CkMailManProgress var0, String var1) {
/* 18497 */     var0.TextData(var1);
/*       */   }
/*       */   
/*       */   public static void SwigDirector_CkMailManProgress_EmailReceived(CkMailManProgress var0, String var1, String var2, String var3, String var4, String var5, String var6, int var7) {
/* 18501 */     var0.EmailReceived(var1, var2, var3, var4, var5, var6, var7);
/*       */   }
/*       */   
/*       */   public static boolean SwigDirector_CkHttpProgress_AbortCheck(CkHttpProgress var0) {
/* 18505 */     return var0.AbortCheck();
/*       */   }
/*       */   
/*       */   public static boolean SwigDirector_CkHttpProgress_PercentDone(CkHttpProgress var0, int var1) {
/* 18509 */     return var0.PercentDone(var1);
/*       */   }
/*       */   
/*       */   public static void SwigDirector_CkHttpProgress_ProgressInfo(CkHttpProgress var0, String var1, String var2) {
/* 18513 */     var0.ProgressInfo(var1, var2);
/*       */   }
/*       */   
/*       */   public static void SwigDirector_CkHttpProgress_TaskCompleted(CkHttpProgress var0, long var1) {
/* 18517 */     var0.TaskCompleted(new CkTask(var1, false));
/*       */   }
/*       */   
/*       */   public static void SwigDirector_CkHttpProgress_TextData(CkHttpProgress var0, String var1) {
/* 18521 */     var0.TextData(var1);
/*       */   }
/*       */   
/*       */   public static boolean SwigDirector_CkHttpProgress_HttpRedirect(CkHttpProgress var0, String var1, String var2) {
/* 18525 */     return var0.HttpRedirect(var1, var2);
/*       */   }
/*       */   
/*       */   public static void SwigDirector_CkHttpProgress_HttpChunked(CkHttpProgress var0) {
/* 18529 */     var0.HttpChunked();
/*       */   }
/*       */   
/*       */   public static void SwigDirector_CkHttpProgress_HttpBeginReceive(CkHttpProgress var0) {
/* 18533 */     var0.HttpBeginReceive();
/*       */   }
/*       */   
/*       */   public static void SwigDirector_CkHttpProgress_HttpEndReceive(CkHttpProgress var0, boolean var1) {
/* 18537 */     var0.HttpEndReceive(var1);
/*       */   }
/*       */   
/*       */   public static void SwigDirector_CkHttpProgress_HttpBeginSend(CkHttpProgress var0) {
/* 18541 */     var0.HttpBeginSend();
/*       */   }
/*       */   
/*       */   public static void SwigDirector_CkHttpProgress_HttpEndSend(CkHttpProgress var0, boolean var1) {
/* 18545 */     var0.HttpEndSend(var1);
/*       */   }
/*       */   
/*       */   public static void SwigDirector_CkHttpProgress_ReceiveRate(CkHttpProgress var0, long var1, long var3) {
/* 18549 */     var0.ReceiveRate(var1, var3);
/*       */   }
/*       */   
/*       */   public static void SwigDirector_CkHttpProgress_SendRate(CkHttpProgress var0, long var1, long var3) {
/* 18553 */     var0.SendRate(var1, var3);
/*       */   }
/*       */   
/*       */   public static boolean SwigDirector_CkFtp2Progress_AbortCheck(CkFtp2Progress var0) {
/* 18557 */     return var0.AbortCheck();
/*       */   }
/*       */   
/*       */   public static boolean SwigDirector_CkFtp2Progress_PercentDone(CkFtp2Progress var0, int var1) {
/* 18561 */     return var0.PercentDone(var1);
/*       */   }
/*       */   
/*       */   public static void SwigDirector_CkFtp2Progress_ProgressInfo(CkFtp2Progress var0, String var1, String var2) {
/* 18565 */     var0.ProgressInfo(var1, var2);
/*       */   }
/*       */   
/*       */   public static void SwigDirector_CkFtp2Progress_TaskCompleted(CkFtp2Progress var0, long var1) {
/* 18569 */     var0.TaskCompleted(new CkTask(var1, false));
/*       */   }
/*       */   
/*       */   public static void SwigDirector_CkFtp2Progress_TextData(CkFtp2Progress var0, String var1) {
/* 18573 */     var0.TextData(var1);
/*       */   }
/*       */   
/*       */   public static boolean SwigDirector_CkFtp2Progress_BeginDownloadFile(CkFtp2Progress var0, String var1) {
/* 18577 */     return var0.BeginDownloadFile(var1);
/*       */   }
/*       */   
/*       */   public static boolean SwigDirector_CkFtp2Progress_VerifyDownloadDir(CkFtp2Progress var0, String var1) {
/* 18581 */     return var0.VerifyDownloadDir(var1);
/*       */   }
/*       */   
/*       */   public static boolean SwigDirector_CkFtp2Progress_BeginUploadFile(CkFtp2Progress var0, String var1) {
/* 18585 */     return var0.BeginUploadFile(var1);
/*       */   }
/*       */   
/*       */   public static boolean SwigDirector_CkFtp2Progress_VerifyUploadDir(CkFtp2Progress var0, String var1) {
/* 18589 */     return var0.VerifyUploadDir(var1);
/*       */   }
/*       */   
/*       */   public static boolean SwigDirector_CkFtp2Progress_VerifyDeleteDir(CkFtp2Progress var0, String var1) {
/* 18593 */     return var0.VerifyDeleteDir(var1);
/*       */   }
/*       */   
/*       */   public static boolean SwigDirector_CkFtp2Progress_VerifyDeleteFile(CkFtp2Progress var0, String var1) {
/* 18597 */     return var0.VerifyDeleteFile(var1);
/*       */   }
/*       */   
/*       */   public static void SwigDirector_CkFtp2Progress_EndUploadFile(CkFtp2Progress var0, String var1, long var2) {
/* 18601 */     var0.EndUploadFile(var1, var2);
/*       */   }
/*       */   
/*       */   public static void SwigDirector_CkFtp2Progress_EndDownloadFile(CkFtp2Progress var0, String var1, long var2) {
/* 18605 */     var0.EndDownloadFile(var1, var2);
/*       */   }
/*       */   
/*       */   public static void SwigDirector_CkFtp2Progress_UploadRate(CkFtp2Progress var0, long var1, long var3) {
/* 18609 */     var0.UploadRate(var1, var3);
/*       */   }
/*       */   
/*       */   public static void SwigDirector_CkFtp2Progress_DownloadRate(CkFtp2Progress var0, long var1, long var3) {
/* 18613 */     var0.DownloadRate(var1, var3);
/*       */   }
/*       */   
/*       */   public static boolean SwigDirector_CkZipProgress_AbortCheck(CkZipProgress var0) {
/* 18617 */     return var0.AbortCheck();
/*       */   }
/*       */   
/*       */   public static boolean SwigDirector_CkZipProgress_PercentDone(CkZipProgress var0, int var1) {
/* 18621 */     return var0.PercentDone(var1);
/*       */   }
/*       */   
/*       */   public static void SwigDirector_CkZipProgress_ProgressInfo(CkZipProgress var0, String var1, String var2) {
/* 18625 */     var0.ProgressInfo(var1, var2);
/*       */   }
/*       */   
/*       */   public static void SwigDirector_CkZipProgress_TaskCompleted(CkZipProgress var0, long var1) {
/* 18629 */     var0.TaskCompleted(new CkTask(var1, false));
/*       */   }
/*       */   
/*       */   public static void SwigDirector_CkZipProgress_TextData(CkZipProgress var0, String var1) {
/* 18633 */     var0.TextData(var1);
/*       */   }
/*       */   
/*       */   public static boolean SwigDirector_CkZipProgress_DirToBeAdded(CkZipProgress var0, String var1) {
/* 18637 */     return var0.DirToBeAdded(var1);
/*       */   }
/*       */   
/*       */   public static boolean SwigDirector_CkZipProgress_ToBeAdded(CkZipProgress var0, String var1, long var2) {
/* 18641 */     return var0.ToBeAdded(var1, var2);
/*       */   }
/*       */   
/*       */   public static boolean SwigDirector_CkZipProgress_FileAdded(CkZipProgress var0, String var1, long var2) {
/* 18645 */     return var0.FileAdded(var1, var2);
/*       */   }
/*       */   
/*       */   public static boolean SwigDirector_CkZipProgress_ToBeZipped(CkZipProgress var0, String var1, long var2) {
/* 18649 */     return var0.ToBeZipped(var1, var2);
/*       */   }
/*       */   
/*       */   public static boolean SwigDirector_CkZipProgress_FileZipped(CkZipProgress var0, String var1, long var2, long var4) {
/* 18653 */     return var0.FileZipped(var1, var2, var4);
/*       */   }
/*       */   
/*       */   public static boolean SwigDirector_CkZipProgress_ToBeUnzipped(CkZipProgress var0, String var1, long var2, long var4, boolean var6) {
/* 18657 */     return var0.ToBeUnzipped(var1, var2, var4, var6);
/*       */   }
/*       */   
/*       */   public static boolean SwigDirector_CkZipProgress_FileUnzipped(CkZipProgress var0, String var1, long var2, long var4, boolean var6) {
/* 18661 */     return var0.FileUnzipped(var1, var2, var4, var6);
/*       */   }
/*       */   
/*       */   public static void SwigDirector_CkZipProgress_SkippedForUnzip(CkZipProgress var0, String var1, long var2, long var4, boolean var6) {
/* 18665 */     var0.SkippedForUnzip(var1, var2, var4, var6);
/*       */   }
/*       */   
/*       */   public static void SwigDirector_CkZipProgress_AddFilesBegin(CkZipProgress var0) {
/* 18669 */     var0.AddFilesBegin();
/*       */   }
/*       */   
/*       */   public static void SwigDirector_CkZipProgress_AddFilesEnd(CkZipProgress var0) {
/* 18673 */     var0.AddFilesEnd();
/*       */   }
/*       */   
/*       */   public static void SwigDirector_CkZipProgress_WriteZipBegin(CkZipProgress var0) {
/* 18677 */     var0.WriteZipBegin();
/*       */   }
/*       */   
/*       */   public static void SwigDirector_CkZipProgress_WriteZipEnd(CkZipProgress var0) {
/* 18681 */     var0.WriteZipEnd();
/*       */   }
/*       */   
/*       */   public static void SwigDirector_CkZipProgress_UnzipBegin(CkZipProgress var0) {
/* 18685 */     var0.UnzipBegin();
/*       */   }
/*       */   
/*       */   public static void SwigDirector_CkZipProgress_UnzipEnd(CkZipProgress var0) {
/* 18689 */     var0.UnzipEnd();
/*       */   }
/*       */   
/*       */   public static boolean SwigDirector_CkTarProgress_AbortCheck(CkTarProgress var0) {
/* 18693 */     return var0.AbortCheck();
/*       */   }
/*       */   
/*       */   public static boolean SwigDirector_CkTarProgress_PercentDone(CkTarProgress var0, int var1) {
/* 18697 */     return var0.PercentDone(var1);
/*       */   }
/*       */   
/*       */   public static void SwigDirector_CkTarProgress_ProgressInfo(CkTarProgress var0, String var1, String var2) {
/* 18701 */     var0.ProgressInfo(var1, var2);
/*       */   }
/*       */   
/*       */   public static void SwigDirector_CkTarProgress_TaskCompleted(CkTarProgress var0, long var1) {
/* 18705 */     var0.TaskCompleted(new CkTask(var1, false));
/*       */   }
/*       */   
/*       */   public static void SwigDirector_CkTarProgress_TextData(CkTarProgress var0, String var1) {
/* 18709 */     var0.TextData(var1);
/*       */   }
/*       */   
/*       */   public static boolean SwigDirector_CkTarProgress_NextTarFile(CkTarProgress var0, String var1, long var2, boolean var4) {
/* 18713 */     return var0.NextTarFile(var1, var2, var4);
/*       */   }
/*       */   
/*       */   private static final native void swig_module_init();
/*       */   
/*       */   static {}
/*       */ }


/* Location:              C:\Users\Lab\Desktop\a.jar!\com\chilkatsoft\chilkatJNI.class
 * Java compiler version: 8 (52.0)
 * JD-Core Version:       0.7.1
 */